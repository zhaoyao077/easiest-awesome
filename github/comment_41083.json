[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1537523100",
    "html_url": "https://github.com/apache/spark/pull/41083#issuecomment-1537523100",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41083",
    "id": 1537523100,
    "node_id": "IC_kwDOAQXtWs5bpL2c",
    "user": {
      "login": "warrenzhu25",
      "id": 1633312,
      "node_id": "MDQ6VXNlcjE2MzMzMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1633312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/warrenzhu25",
      "html_url": "https://github.com/warrenzhu25",
      "followers_url": "https://api.github.com/users/warrenzhu25/followers",
      "following_url": "https://api.github.com/users/warrenzhu25/following{/other_user}",
      "gists_url": "https://api.github.com/users/warrenzhu25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/warrenzhu25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/warrenzhu25/subscriptions",
      "organizations_url": "https://api.github.com/users/warrenzhu25/orgs",
      "repos_url": "https://api.github.com/users/warrenzhu25/repos",
      "events_url": "https://api.github.com/users/warrenzhu25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/warrenzhu25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-07T19:29:33Z",
    "updated_at": "2023-05-07T19:29:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dongjoon-hyun @mridulm Help take a look?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1537523100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1545904179",
    "html_url": "https://github.com/apache/spark/pull/41083#issuecomment-1545904179",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41083",
    "id": 1545904179,
    "node_id": "IC_kwDOAQXtWs5cJKAz",
    "user": {
      "login": "warrenzhu25",
      "id": 1633312,
      "node_id": "MDQ6VXNlcjE2MzMzMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1633312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/warrenzhu25",
      "html_url": "https://github.com/warrenzhu25",
      "followers_url": "https://api.github.com/users/warrenzhu25/followers",
      "following_url": "https://api.github.com/users/warrenzhu25/following{/other_user}",
      "gists_url": "https://api.github.com/users/warrenzhu25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/warrenzhu25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/warrenzhu25/subscriptions",
      "organizations_url": "https://api.github.com/users/warrenzhu25/orgs",
      "repos_url": "https://api.github.com/users/warrenzhu25/repos",
      "events_url": "https://api.github.com/users/warrenzhu25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/warrenzhu25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T15:14:44Z",
    "updated_at": "2023-05-12T15:14:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dongjoon-hyun any comments on this?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1545904179/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1546807210",
    "html_url": "https://github.com/apache/spark/pull/41083#issuecomment-1546807210",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41083",
    "id": 1546807210,
    "node_id": "IC_kwDOAQXtWs5cMmeq",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-14T04:54:53Z",
    "updated_at": "2023-05-14T04:54:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "How are you observing recoverable fetch failures ?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1546807210/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1548009051",
    "html_url": "https://github.com/apache/spark/pull/41083#issuecomment-1548009051",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41083",
    "id": 1548009051,
    "node_id": "IC_kwDOAQXtWs5cRL5b",
    "user": {
      "login": "warrenzhu25",
      "id": 1633312,
      "node_id": "MDQ6VXNlcjE2MzMzMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1633312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/warrenzhu25",
      "html_url": "https://github.com/warrenzhu25",
      "followers_url": "https://api.github.com/users/warrenzhu25/followers",
      "following_url": "https://api.github.com/users/warrenzhu25/following{/other_user}",
      "gists_url": "https://api.github.com/users/warrenzhu25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/warrenzhu25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/warrenzhu25/subscriptions",
      "organizations_url": "https://api.github.com/users/warrenzhu25/orgs",
      "repos_url": "https://api.github.com/users/warrenzhu25/repos",
      "events_url": "https://api.github.com/users/warrenzhu25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/warrenzhu25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T14:45:51Z",
    "updated_at": "2023-05-15T14:45:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "> How are you observing recoverable fetch failures ?\r\n\r\nI have seen 2 cases when target executor has busy shuffle fetch and upload due to shuffle migration:\r\n1. All Netty request handler threads are exhausted, it'll throw `TimeoutException` when creating connection to target executor took longer than `connectTimeout`.\r\n2. `IdleStateHandler` will close connection when fetch request took longer than `requestTimeout` to receive response.\r\n\r\nBoth cases are recoverable.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1548009051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1550571606",
    "html_url": "https://github.com/apache/spark/pull/41083#issuecomment-1550571606",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41083",
    "id": 1550571606,
    "node_id": "IC_kwDOAQXtWs5ca9hW",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T01:50:32Z",
    "updated_at": "2023-05-17T01:51:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "These looks like things which can be handled by appropriate configuration tuning ?\r\nThe PR itself requires a bit more work if that is not a feasible direction (efficient cleanup, handling corner cases, etc).",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1550571606/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1552141121",
    "html_url": "https://github.com/apache/spark/pull/41083#issuecomment-1552141121",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41083",
    "id": 1552141121,
    "node_id": "IC_kwDOAQXtWs5cg8tB",
    "user": {
      "login": "warrenzhu25",
      "id": 1633312,
      "node_id": "MDQ6VXNlcjE2MzMzMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1633312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/warrenzhu25",
      "html_url": "https://github.com/warrenzhu25",
      "followers_url": "https://api.github.com/users/warrenzhu25/followers",
      "following_url": "https://api.github.com/users/warrenzhu25/following{/other_user}",
      "gists_url": "https://api.github.com/users/warrenzhu25/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/warrenzhu25/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/warrenzhu25/subscriptions",
      "organizations_url": "https://api.github.com/users/warrenzhu25/orgs",
      "repos_url": "https://api.github.com/users/warrenzhu25/repos",
      "events_url": "https://api.github.com/users/warrenzhu25/events{/privacy}",
      "received_events_url": "https://api.github.com/users/warrenzhu25/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T21:56:05Z",
    "updated_at": "2023-05-17T21:56:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> These looks like things which can be handled by appropriate configuration tuning ? The PR itself requires a bit more work if that is not a feasible direction (efficient cleanup, handling corner cases, etc).\r\n\r\nCase 2 can't be handled by existing config, there'll be other similar recoverable cases. Generally speaking, I think unregister all map output when fetch failed is too aggressive. So it's better to have config to control or disable such behavior. If the executor is really dead, the map output will be unregistered \r\nwhen removing executor, if executor is just experiencing temporary and recoverable hiccup, then unregister is too expensive.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1552141121/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1553434747",
    "html_url": "https://github.com/apache/spark/pull/41083#issuecomment-1553434747",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41083",
    "id": 1553434747,
    "node_id": "IC_kwDOAQXtWs5cl4h7",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-18T18:11:27Z",
    "updated_at": "2023-05-18T18:16:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Case 2 can't be handled by existing config, there'll be other similar recoverable cases\r\n\r\nDid you try increasing idle timeout ?\r\nThe behavior is specific to the environment application is running in - where executors are unable to respond to shuffle requests for more than 2 minutes: this looks more like a tuning or deployment issue.\r\n\r\n> Generally speaking, I think unregister all map output when fetch failed is too aggressive.\r\n\r\nAs described, this is a case of not appropriately configuring spark for the load/cluster characteristics.\r\nFor example, in our internal env, the network timeout is set to a significantly higher value than the default 120s due to a variety of factors - the default 2mins would result in failures (including this specific shuffle issue mentioned).\r\n\r\nThis proposed change would complicate the way we reason about when shuffle data is lost - and I am not inclined towards it if it is something that can be mitigated with appropriate tuning.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1553434747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
