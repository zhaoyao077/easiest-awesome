{
  "url": "https://api.github.com/repos/apache/spark/issues/41192",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/41192/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/41192/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/41192/events",
  "html_url": "https://github.com/apache/spark/pull/41192",
  "id": 1712860622,
  "node_id": "PR_kwDOAQXtWs5QqOj8",
  "number": 41192,
  "title": "[SPARK-43530][PROTOBUF] Read descriptor file only once\t",
  "user": {
    "login": "rangadi",
    "id": 502522,
    "node_id": "MDQ6VXNlcjUwMjUyMg==",
    "avatar_url": "https://avatars.githubusercontent.com/u/502522?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rangadi",
    "html_url": "https://github.com/rangadi",
    "followers_url": "https://api.github.com/users/rangadi/followers",
    "following_url": "https://api.github.com/users/rangadi/following{/other_user}",
    "gists_url": "https://api.github.com/users/rangadi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rangadi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rangadi/subscriptions",
    "organizations_url": "https://api.github.com/users/rangadi/orgs",
    "repos_url": "https://api.github.com/users/rangadi/repos",
    "events_url": "https://api.github.com/users/rangadi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rangadi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 1981471081,
      "node_id": "MDU6TGFiZWwxOTgxNDcxMDgx",
      "url": "https://api.github.com/repos/apache/spark/labels/DOCS",
      "name": "DOCS",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 1981527456,
      "node_id": "MDU6TGFiZWwxOTgxNTI3NDU2",
      "url": "https://api.github.com/repos/apache/spark/labels/CORE",
      "name": "CORE",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 4556440342,
      "node_id": "LA_kwDOAQXtWs8AAAABD5XDFg",
      "url": "https://api.github.com/repos/apache/spark/labels/CONNECT",
      "name": "CONNECT",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 4654282764,
      "node_id": "LA_kwDOAQXtWs8AAAABFWq4DA",
      "url": "https://api.github.com/repos/apache/spark/labels/PROTOBUF",
      "name": "PROTOBUF",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 13,
  "created_at": "2023-05-16T23:19:00Z",
  "updated_at": "2023-05-27T15:20:03Z",
  "closed_at": "2023-05-27T15:19:37Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/41192",
    "html_url": "https://github.com/apache/spark/pull/41192",
    "diff_url": "https://github.com/apache/spark/pull/41192.diff",
    "patch_url": "https://github.com/apache/spark/pull/41192.patch",
    "merged_at": null
  },
  "body": "### What changes were proposed in this pull request?\r\n\r\nProtobuf functions (`from_protobuf()` & `to_protobuf()`) take file path of a descriptor file and use that for constructing Protobuf descriptors. \r\nMain problem with how this is that the file is read many times (e.g. at each executor). This is unnecessary and error prone. E.g. file contents may be updated couple of days after a streaming query starts. That could lead to various errors. \r\n\r\n**The fix**: Use the byte content (which is serialized `FileDescritptorSet` proto). We read the content from the file once and carry the byte buffer. \r\n\r\nThis also adds new API where we can pass the byte buffer directly. This is useful when the users fetch the content themselves and passes it to Protobuf functions. E.g. they could fetch it from S3, or extract it Python Protobuf classes. \r\n\r\n**Note to reviewers**: This includes a lot of updates to test files, mainly because the interface change to pass the buffer. I have left a few PR comments to help with the review.\r\n\r\n### Why are the changes needed?\r\nDescribed above.\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\nYes, this adds two new versions for `from_protobuf()` and `to_protobuf()` API that take Protobuf bytes rather than file path. \r\n\r\n### How was this patch tested?\r\n - Unit tests\r\n",
  "closed_by": {
    "login": "LuciferYang",
    "id": 1475305,
    "node_id": "MDQ6VXNlcjE0NzUzMDU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1475305?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/LuciferYang",
    "html_url": "https://github.com/LuciferYang",
    "followers_url": "https://api.github.com/users/LuciferYang/followers",
    "following_url": "https://api.github.com/users/LuciferYang/following{/other_user}",
    "gists_url": "https://api.github.com/users/LuciferYang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/LuciferYang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/LuciferYang/subscriptions",
    "organizations_url": "https://api.github.com/users/LuciferYang/orgs",
    "repos_url": "https://api.github.com/users/LuciferYang/repos",
    "events_url": "https://api.github.com/users/LuciferYang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/LuciferYang/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/41192/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 1,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/41192/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
