{
  "url": "https://api.github.com/repos/apache/spark/issues/40686",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/40686/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/40686/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/40686/events",
  "html_url": "https://github.com/apache/spark/pull/40686",
  "id": 1657596486,
  "node_id": "PR_kwDOAQXtWs5NxynE",
  "number": 40686,
  "title": "[SPARK-43051][CONNECT] Add option to emit default values",
  "user": {
    "login": "justaparth",
    "id": 1002986,
    "node_id": "MDQ6VXNlcjEwMDI5ODY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1002986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/justaparth",
    "html_url": "https://github.com/justaparth",
    "followers_url": "https://api.github.com/users/justaparth/followers",
    "following_url": "https://api.github.com/users/justaparth/following{/other_user}",
    "gists_url": "https://api.github.com/users/justaparth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/justaparth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/justaparth/subscriptions",
    "organizations_url": "https://api.github.com/users/justaparth/orgs",
    "repos_url": "https://api.github.com/users/justaparth/repos",
    "events_url": "https://api.github.com/users/justaparth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/justaparth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 4654282764,
      "node_id": "LA_kwDOAQXtWs8AAAABFWq4DA",
      "url": "https://api.github.com/repos/apache/spark/labels/PROTOBUF",
      "name": "PROTOBUF",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2023-04-06T15:03:29Z",
  "updated_at": "2023-05-04T04:08:19Z",
  "closed_at": "2023-05-04T04:08:19Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/40686",
    "html_url": "https://github.com/apache/spark/pull/40686",
    "diff_url": "https://github.com/apache/spark/pull/40686.diff",
    "patch_url": "https://github.com/apache/spark/pull/40686.patch",
    "merged_at": null
  },
  "body": "### JIRA\r\nJIRA: https://issues.apache.org/jira/browse/SPARK-43051\r\n\r\n### What changes were proposed in this pull request?\r\nCurrently, when deserializing protobufs using `from_protobuf`, fields that are not explicitly present in the serialized message are deserialized as null in the resulting struct. However this includes singular proto3 scalars set explicitly to their default values, as they will [not appear](https://protobuf.dev/programming-guides/field_presence/#presence-in-tag-value-stream-wire-format-serialization) in the serialized protobuf.\r\n\r\nFor example, given a message format like\r\n\r\n```\r\nsyntax = \"proto3\";\r\n\r\nmessage Person {\r\n  string name = 1;\r\n  int64 age = 2;\r\n  optional string middle_name = 3;\r\n  optional int64 salary = 4;\r\n}\r\n```\r\n\r\nand an example message like\r\n```\r\nSearchRequest(age = 0, middle_name = \"\")\r\n```\r\n\r\nthe result from calling `from_protobuf` on the serialized form of the above message would be\r\n\r\n```\r\n{\"name\": null, \"age\": null, \"middle_name\": \"\", \"salary\": null}\r\n```\r\n\r\nIt can be useful to deserialize these fields as their defaults, e.g.:\r\n```\r\n{\"name\": \"\", \"age\": 0, \"middle_name\": \"\", \"salary\": null}\r\n```\r\n\r\nThis behavior also exists in other major libraries, e.g. `includingDefaultValues` in [jsonformat](https://protobuf.dev/reference/java/api-docs/com/google/protobuf/util/JsonFormat.Printer.html#includingDefaultValueFields--), or `emitDefaults` in [jsonpb](https://pkg.go.dev/github.com/golang/protobuf/jsonpb#Marshaler).\r\n\r\nIn this PR I implemented this behavior by adding an option, `emit.default.values` that can be passed to the options map for `from_protobuf` which controls whether to materialize these defaults or not.\r\n\r\n### Why are the changes needed?\r\nAdditional functionality to help control the deserialization behavior.\r\n\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\nYes, it provides a new option that can be accepted by `from_protobuf`\r\n\r\n\r\n\r\n### How was this patch tested?\r\nI added test cases that assert the deserialization behavior for unset and default values for every type in proto2 and proto3.\r\n",
  "closed_by": {
    "login": "HyukjinKwon",
    "id": 6477701,
    "node_id": "MDQ6VXNlcjY0Nzc3MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6477701?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/HyukjinKwon",
    "html_url": "https://github.com/HyukjinKwon",
    "followers_url": "https://api.github.com/users/HyukjinKwon/followers",
    "following_url": "https://api.github.com/users/HyukjinKwon/following{/other_user}",
    "gists_url": "https://api.github.com/users/HyukjinKwon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/HyukjinKwon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/HyukjinKwon/subscriptions",
    "organizations_url": "https://api.github.com/users/HyukjinKwon/orgs",
    "repos_url": "https://api.github.com/users/HyukjinKwon/repos",
    "events_url": "https://api.github.com/users/HyukjinKwon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/HyukjinKwon/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/40686/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/40686/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
