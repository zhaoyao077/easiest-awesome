{
  "url": "https://api.github.com/repos/apache/spark/issues/41075",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/41075/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/41075/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/41075/events",
  "html_url": "https://github.com/apache/spark/pull/41075",
  "id": 1698789703,
  "node_id": "PR_kwDOAQXtWs5P7JdK",
  "number": 41075,
  "title": "[SPARK-43361][PROTOBUF] spark-protobuf: allow serde with enum as ints",
  "user": {
    "login": "justaparth",
    "id": 1002986,
    "node_id": "MDQ6VXNlcjEwMDI5ODY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1002986?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/justaparth",
    "html_url": "https://github.com/justaparth",
    "followers_url": "https://api.github.com/users/justaparth/followers",
    "following_url": "https://api.github.com/users/justaparth/following{/other_user}",
    "gists_url": "https://api.github.com/users/justaparth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/justaparth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/justaparth/subscriptions",
    "organizations_url": "https://api.github.com/users/justaparth/orgs",
    "repos_url": "https://api.github.com/users/justaparth/repos",
    "events_url": "https://api.github.com/users/justaparth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/justaparth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 4654282764,
      "node_id": "LA_kwDOAQXtWs8AAAABFWq4DA",
      "url": "https://api.github.com/repos/apache/spark/labels/PROTOBUF",
      "name": "PROTOBUF",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-05-06T21:50:04Z",
  "updated_at": "2023-05-16T15:26:48Z",
  "closed_at": "2023-05-10T03:08:49Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/41075",
    "html_url": "https://github.com/apache/spark/pull/41075",
    "diff_url": "https://github.com/apache/spark/pull/41075.diff",
    "patch_url": "https://github.com/apache/spark/pull/41075.patch",
    "merged_at": null
  },
  "body": "https://issues.apache.org/jira/browse/SPARK-43361\r\n\r\n### What changes were proposed in this pull request?\r\nWhen deserializing protobuf enum fields, the spark-protobuf library will deserialize them as string values based on the enum name in the proto. E.g.Â \r\n\r\n```\r\nmessage Person {\r\n  enum Job {\r\n    NOTHING = 0;\r\n    ENGINEER = 1;\r\n    DOCTOR = 2;\r\n  }\r\n  Job job = 1;\r\n}\r\n```\r\nAnd we have a message like\r\n\r\n```\r\nPerson(job=ENGINEER)\r\n```\r\n\r\nThen the deserialized value will be:\r\n\r\n```\r\n{\"job\": \"ENGINEER\"}\r\n```\r\n\r\nHowever it can be useful to deserialize the enum integer value rather than the name, namely:\r\n\r\n```\r\n{\"job\": 1}\r\n```\r\n\r\nThis commit adds that functionality to spark protobuf via an option, \"enums.as.ints\". In addition, it also allows serializing such fields back into protobuf via `to_protobuf`.\r\n\r\n\r\n\r\nExamples in other libraries:\r\n\r\n- protobuf-java-util JsonFormat: https://javadoc.io/doc/com.google.protobuf/protobuf-java-util/3.10.0/com/google/protobuf/util/JsonFormat.Printer.html#printingEnumsAsInts--\r\n- golang/protobuf jsonpb marshaler https://pkg.go.dev/github.com/golang/protobuf/jsonpb#Marshaler\r\n\r\n\r\n### Why are the changes needed?\r\nAdds new functionality that exists in other libraries.\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\nYes, adds a new option to from_protobuf.\r\n\r\n### How was this patch tested?\r\nAdded unit tests confirming this behavior.",
  "closed_by": {
    "login": "HyukjinKwon",
    "id": 6477701,
    "node_id": "MDQ6VXNlcjY0Nzc3MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6477701?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/HyukjinKwon",
    "html_url": "https://github.com/HyukjinKwon",
    "followers_url": "https://api.github.com/users/HyukjinKwon/followers",
    "following_url": "https://api.github.com/users/HyukjinKwon/following{/other_user}",
    "gists_url": "https://api.github.com/users/HyukjinKwon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/HyukjinKwon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/HyukjinKwon/subscriptions",
    "organizations_url": "https://api.github.com/users/HyukjinKwon/orgs",
    "repos_url": "https://api.github.com/users/HyukjinKwon/repos",
    "events_url": "https://api.github.com/users/HyukjinKwon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/HyukjinKwon/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/41075/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/41075/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
