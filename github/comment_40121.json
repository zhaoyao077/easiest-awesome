[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1440741016",
    "html_url": "https://github.com/apache/spark/pull/40121#issuecomment-1440741016",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40121",
    "id": 1440741016,
    "node_id": "IC_kwDOAQXtWs5V3_aY",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-22T20:15:31Z",
    "updated_at": "2023-02-22T20:19:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can we minimize diff's to this file ? A large fraction is whitespace changes and due to the renames ... will take a look at the changes as well.\r\n\r\nAlso given this is an optimization change - include benchmark to quantify the impact ?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1440741016/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1441264762",
    "html_url": "https://github.com/apache/spark/pull/40121#issuecomment-1441264762",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40121",
    "id": 1441264762,
    "node_id": "IC_kwDOAQXtWs5V5_R6",
    "user": {
      "login": "alkis",
      "id": 265981,
      "node_id": "MDQ6VXNlcjI2NTk4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/265981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alkis",
      "html_url": "https://github.com/alkis",
      "followers_url": "https://api.github.com/users/alkis/followers",
      "following_url": "https://api.github.com/users/alkis/following{/other_user}",
      "gists_url": "https://api.github.com/users/alkis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alkis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alkis/subscriptions",
      "organizations_url": "https://api.github.com/users/alkis/orgs",
      "repos_url": "https://api.github.com/users/alkis/repos",
      "events_url": "https://api.github.com/users/alkis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alkis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-23T06:22:56Z",
    "updated_at": "2023-02-23T06:22:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Also given this is an optimization change - include benchmark to quantify the impact ?\r\n\r\nI did benchmarking live in a cluster. Profiles before show ~1% of scheduler time in PercentileHeap operations. Profiles after do not have PercentileHeap operations at all.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1441264762/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1441267376",
    "html_url": "https://github.com/apache/spark/pull/40121#issuecomment-1441267376",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40121",
    "id": 1441267376,
    "node_id": "IC_kwDOAQXtWs5V5_6w",
    "user": {
      "login": "alkis",
      "id": 265981,
      "node_id": "MDQ6VXNlcjI2NTk4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/265981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alkis",
      "html_url": "https://github.com/alkis",
      "followers_url": "https://api.github.com/users/alkis/followers",
      "following_url": "https://api.github.com/users/alkis/following{/other_user}",
      "gists_url": "https://api.github.com/users/alkis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alkis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alkis/subscriptions",
      "organizations_url": "https://api.github.com/users/alkis/orgs",
      "repos_url": "https://api.github.com/users/alkis/repos",
      "events_url": "https://api.github.com/users/alkis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alkis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-23T06:27:23Z",
    "updated_at": "2023-02-23T06:27:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can we minimize diff's to this file ? A large fraction is whitespace changes and due to the renames ... will take a look at the changes as well.\r\n\r\nCan you treat is a new implementation? There is only 15 lines (L55-L70) that matter on the new implementation - the code inside `insert`. Outside of `insert` there is nothing meaty or interesting.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1441267376/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1441443226",
    "html_url": "https://github.com/apache/spark/pull/40121#issuecomment-1441443226",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40121",
    "id": 1441443226,
    "node_id": "IC_kwDOAQXtWs5V6q2a",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-23T09:31:47Z",
    "updated_at": "2023-02-23T09:32:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I did benchmarking live in a cluster. Profiles before show ~1% of scheduler time in PercentileHeap operations. Profiles after do not have PercentileHeap operations at all.\r\n\r\n\r\nCan you add a benchmark in the PR ? With results for best and after in description or as comment ? Thanks !\r\nFor example, take a look at `core/src/test/scala/org/apache/spark/MapStatusesSerDeserBenchmark.scala`",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1441443226/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1441455987",
    "html_url": "https://github.com/apache/spark/pull/40121#issuecomment-1441455987",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40121",
    "id": 1441455987,
    "node_id": "IC_kwDOAQXtWs5V6t9z",
    "user": {
      "login": "alkis",
      "id": 265981,
      "node_id": "MDQ6VXNlcjI2NTk4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/265981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alkis",
      "html_url": "https://github.com/alkis",
      "followers_url": "https://api.github.com/users/alkis/followers",
      "following_url": "https://api.github.com/users/alkis/following{/other_user}",
      "gists_url": "https://api.github.com/users/alkis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alkis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alkis/subscriptions",
      "organizations_url": "https://api.github.com/users/alkis/orgs",
      "repos_url": "https://api.github.com/users/alkis/repos",
      "events_url": "https://api.github.com/users/alkis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alkis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-23T09:41:29Z",
    "updated_at": "2023-02-23T10:41:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "I ran this benchmark offline:\r\n\r\n```\r\n  test(\"benchmark\") {\r\n    val input: Seq[Int] = 0 until 1000\r\n    val numRuns = 1000\r\n\r\n    def kernel(): Long = {\r\n      val shuffled = Random.shuffle(input).toArray\r\n      val start = System.nanoTime()\r\n      val h = new PercentileHeap(0.95)\r\n      shuffled.foreach { x =>\r\n        h.insert(x)\r\n        for (_ <- 0 until input.length) h.percentile\r\n      }\r\n      System.nanoTime() - start\r\n    }\r\n    for (_ <- 0 until numRuns) kernel()  // warmup\r\n\r\n    var elapsed: Long = 0\r\n    for (_ <- 0 until numRuns) elapsed += kernel()\r\n    val perOp = elapsed / (numRuns * input.length)\r\n    println(s\"$perOp ns per op on heaps of size ${input.length}\")\r\n  }\r\n```\r\n\r\nResults:\r\n```\r\n    BEFORE 3886 ns per op on heaps of size 1000\r\n    AFTER  1703 ns per op on heaps of size 1000 (with scala PriorityQueue) \r\n    AFTER    36 ns per op on heaps of size 1000 (with java PriorityQueue)\r\n```\r\n\r\n(yes 100x improvement is not a typo)\r\n\r\nI left this test in the PR instead of a full blown benchmark.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1441455987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1441535493",
    "html_url": "https://github.com/apache/spark/pull/40121#issuecomment-1441535493",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40121",
    "id": 1441535493,
    "node_id": "IC_kwDOAQXtWs5V7BYF",
    "user": {
      "login": "alkis",
      "id": 265981,
      "node_id": "MDQ6VXNlcjI2NTk4MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/265981?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alkis",
      "html_url": "https://github.com/alkis",
      "followers_url": "https://api.github.com/users/alkis/followers",
      "following_url": "https://api.github.com/users/alkis/following{/other_user}",
      "gists_url": "https://api.github.com/users/alkis/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alkis/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alkis/subscriptions",
      "organizations_url": "https://api.github.com/users/alkis/orgs",
      "repos_url": "https://api.github.com/users/alkis/repos",
      "events_url": "https://api.github.com/users/alkis/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alkis/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-23T10:40:20Z",
    "updated_at": "2023-02-23T10:44:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "I updated the implementation and the description. TLDR I use a comparator-less java `PriorityQueue` now for a total of 100x speedup over the original implementation.\r\n\r\n@mridulm good call on the benchmark, in my internal tests I had a handrolled heap implementation that was even faster than the java one. If not for the benchmark I wouldn't have noticed that Scala's priority queue is so bad vs Java's.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1441535493/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1445779613",
    "html_url": "https://github.com/apache/spark/pull/40121#issuecomment-1445779613",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40121",
    "id": 1445779613,
    "node_id": "IC_kwDOAQXtWs5WLNid",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-27T06:26:08Z",
    "updated_at": "2023-02-27T06:26:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "The failed HealthTrackerIntegrationSuite is definitely unrelated, I'm merging it to master, thanks!",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1445779613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
