[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1526471166",
    "html_url": "https://github.com/apache/spark/pull/40812#issuecomment-1526471166",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40812",
    "id": 1526471166,
    "node_id": "IC_kwDOAQXtWs5a_Bn-",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-27T21:06:41Z",
    "updated_at": "2023-04-27T21:06:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "+CC @cloud-fan, @dongjoon-hyun who have reviewed work on explain output earlier.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1526471166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1526602319",
    "html_url": "https://github.com/apache/spark/pull/40812#issuecomment-1526602319",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40812",
    "id": 1526602319,
    "node_id": "IC_kwDOAQXtWs5a_hpP",
    "user": {
      "login": "dongjoon-hyun",
      "id": 9700541,
      "node_id": "MDQ6VXNlcjk3MDA1NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9700541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongjoon-hyun",
      "html_url": "https://github.com/dongjoon-hyun",
      "followers_url": "https://api.github.com/users/dongjoon-hyun/followers",
      "following_url": "https://api.github.com/users/dongjoon-hyun/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongjoon-hyun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongjoon-hyun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongjoon-hyun/subscriptions",
      "organizations_url": "https://api.github.com/users/dongjoon-hyun/orgs",
      "repos_url": "https://api.github.com/users/dongjoon-hyun/repos",
      "events_url": "https://api.github.com/users/dongjoon-hyun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongjoon-hyun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-27T22:11:51Z",
    "updated_at": "2023-04-27T22:11:51Z",
    "author_association": "MEMBER",
    "body": "Thank you for pinging me, @mridulm .\r\n\r\nAlso, cc @sunchao ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1526602319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1539764854",
    "html_url": "https://github.com/apache/spark/pull/40812#issuecomment-1539764854",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40812",
    "id": 1539764854,
    "node_id": "IC_kwDOAQXtWs5bxvJ2",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T09:21:04Z",
    "updated_at": "2023-05-09T09:21:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I agree that we do need to copy the cached plan when getting it, but I feel the current change is hard to understand and reason about.\r\n\r\nI think a better place to fix is `CacheManager#useCachedDataInternal`. It does copy `InMemoryRelation` but does not copy the physical plan:\r\nhttps://github.com/apache/spark/blob/master/sql/core/src/main/scala/org/apache/spark/sql/execution/CacheManager.scala#L298-L306\r\n\r\nWe can add a new method `InMemoryRelation#freshCopy` which takes new output attributes and copy the physical plan, then we change `cached.cachedRepresentation.withOutput(currentFragment.output)` to `cached.cachedRepresentation.freshCopy(currentFragment.output)`",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1539764854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1542680938",
    "html_url": "https://github.com/apache/spark/pull/40812#issuecomment-1542680938",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40812",
    "id": 1542680938,
    "node_id": "IC_kwDOAQXtWs5b83Fq",
    "user": {
      "login": "robreeves",
      "id": 5604993,
      "node_id": "MDQ6VXNlcjU2MDQ5OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5604993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robreeves",
      "html_url": "https://github.com/robreeves",
      "followers_url": "https://api.github.com/users/robreeves/followers",
      "following_url": "https://api.github.com/users/robreeves/following{/other_user}",
      "gists_url": "https://api.github.com/users/robreeves/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robreeves/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robreeves/subscriptions",
      "organizations_url": "https://api.github.com/users/robreeves/orgs",
      "repos_url": "https://api.github.com/users/robreeves/repos",
      "events_url": "https://api.github.com/users/robreeves/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robreeves/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-10T19:17:25Z",
    "updated_at": "2023-05-10T19:17:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I agree that we do need to copy the cached plan when getting it, but I feel the current change is hard to understand and reason about.\r\n> \r\n> I think a better place to fix is `CacheManager#useCachedDataInternal`. It does copy `InMemoryRelation` but does not copy the physical plan: https://github.com/apache/spark/blob/master/sql/core/src/main/scala/org/apache/spark/sql/execution/CacheManager.scala#L298-L306\r\n> \r\n> We can add a new method `InMemoryRelation#freshCopy` which takes new output attributes and copy the physical plan, then we change `cached.cachedRepresentation.withOutput(currentFragment.output)` to `cached.cachedRepresentation.freshCopy(currentFragment.output)`\r\n\r\nThe challenge with this approach is that `InMemoryRelation` does not get the physical plan passed in directly. It is through `CachedRDDBuilder`. I originally tried making a new `CachedRDDBuilder` with a copy of the physical plan, but it broke other tests due to the private state it maintains.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1542680938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1543311678",
    "html_url": "https://github.com/apache/spark/pull/40812#issuecomment-1543311678",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40812",
    "id": 1543311678,
    "node_id": "IC_kwDOAQXtWs5b_RE-",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T04:23:40Z",
    "updated_at": "2023-05-11T04:23:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "I see, can we change `def cachedPlan: SparkPlan = cacheBuilder.cachedPlan` to `lazy val cachedPlan: SparkPlan = cacheBuilder.cachedPlan.clone` with comments to explain it? This makes sure that a new instance of `InMemoryRelation` will have a new instance of the physical plan.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1543311678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1552124399",
    "html_url": "https://github.com/apache/spark/pull/40812#issuecomment-1552124399",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40812",
    "id": 1552124399,
    "node_id": "IC_kwDOAQXtWs5cg4nv",
    "user": {
      "login": "robreeves",
      "id": 5604993,
      "node_id": "MDQ6VXNlcjU2MDQ5OTM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5604993?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robreeves",
      "html_url": "https://github.com/robreeves",
      "followers_url": "https://api.github.com/users/robreeves/followers",
      "following_url": "https://api.github.com/users/robreeves/following{/other_user}",
      "gists_url": "https://api.github.com/users/robreeves/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robreeves/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robreeves/subscriptions",
      "organizations_url": "https://api.github.com/users/robreeves/orgs",
      "repos_url": "https://api.github.com/users/robreeves/repos",
      "events_url": "https://api.github.com/users/robreeves/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robreeves/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-17T21:45:02Z",
    "updated_at": "2023-05-17T21:45:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> \r\n\r\n@cloud-fan Cloning the cachedPlan is also problematic because it contains state (accumulators in private fields) when it includes a `CollectMetricsExec` operator. `CollectMetricsExec.collect` specifically looks at the `InMemoryRelation.cachedPlan` to get the stateful metrics.\r\n\r\nI verified this is an issue by cloning `InMemoryRelation.cachedPlan`. Then I modified a unit test that uses `Dataset.observe` to cache the dataset. This breaks the unit test. When I revert cloning the cachedPlan it passes. Here is how I modified the unit test to prove the issue.\r\n```\r\ndiff --git a/sql/core/src/test/scala/org/apache/spark/sql/util/DataFrameCallbackSuite.scala b/sql/core/src/test/scala/org/apache/spark/sql/util/DataFrameCallbackSuite.scala\r\nindex f046daacb91..3de33e3e1b2 100644\r\n--- a/sql/core/src/test/scala/org/apache/spark/sql/util/DataFrameCallbackSuite.scala\r\n+++ b/sql/core/src/test/scala/org/apache/spark/sql/util/DataFrameCallbackSuite.scala\r\n@@ -277,7 +277,7 @@ class DataFrameCallbackSuite extends QueryTest\r\n         max($\"id\").as(\"max_val\"),\r\n         // Test unresolved alias\r\n         sum($\"id\"),\r\n-        count(when($\"id\" % 2 === 0, 1)).as(\"num_even\"))\r\n+        count(when($\"id\" % 2 === 0, 1)).as(\"num_even\")).cache()\r\n       .observe(\r\n         name = \"other_event\",\r\n         avg($\"id\").cast(\"int\").as(\"avg_val\"))\r\n```\r\n\r\nSo I think we should stick with only cloning it for the innerChildren since the only usage is the ExplainUtils and statefulness doesn't matter, besides the `TreeNode.tag` values.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1552124399/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1552505341",
    "html_url": "https://github.com/apache/spark/pull/40812#issuecomment-1552505341",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40812",
    "id": 1552505341,
    "node_id": "IC_kwDOAQXtWs5ciVn9",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-18T06:20:55Z",
    "updated_at": "2023-05-18T06:20:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks, merging to master/3.4!",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1552505341/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
