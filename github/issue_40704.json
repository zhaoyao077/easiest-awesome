{
  "url": "https://api.github.com/repos/apache/spark/issues/40704",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/40704/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/40704/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/40704/events",
  "html_url": "https://github.com/apache/spark/pull/40704",
  "id": 1658767334,
  "node_id": "PR_kwDOAQXtWs5N1g6i",
  "number": 40704,
  "title": "[SPARK-43038][SQL] Support the CBC mode by `aes_encrypt()`/`aes_decrypt()`",
  "user": {
    "login": "MaxGekk",
    "id": 1580697,
    "node_id": "MDQ6VXNlcjE1ODA2OTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1580697?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaxGekk",
    "html_url": "https://github.com/MaxGekk",
    "followers_url": "https://api.github.com/users/MaxGekk/followers",
    "following_url": "https://api.github.com/users/MaxGekk/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaxGekk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaxGekk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaxGekk/subscriptions",
    "organizations_url": "https://api.github.com/users/MaxGekk/orgs",
    "repos_url": "https://api.github.com/users/MaxGekk/repos",
    "events_url": "https://api.github.com/users/MaxGekk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaxGekk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 1981527456,
      "node_id": "MDU6TGFiZWwxOTgxNTI3NDU2",
      "url": "https://api.github.com/repos/apache/spark/labels/CORE",
      "name": "CORE",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-04-07T12:43:23Z",
  "updated_at": "2023-04-12T13:02:37Z",
  "closed_at": "2023-04-12T13:02:37Z",
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/40704",
    "html_url": "https://github.com/apache/spark/pull/40704",
    "diff_url": "https://github.com/apache/spark/pull/40704.diff",
    "patch_url": "https://github.com/apache/spark/pull/40704.patch",
    "merged_at": null
  },
  "body": "### What changes were proposed in this pull request?\r\nIn the PR, I propose new AES mode for the `aes_encrypt()`/`aes_decrypt()` functions - `CBC` ([Cipher Block Chaining](https://www.ibm.com/docs/en/linux-on-systems?topic=operation-cipher-block-chaining-cbc-mode)) with the padding `PKCS7(5)`. The `aes_encrypt()` function returns a binary value which consists of the following fields:\r\n1. The salt magic prefix `Salted__` with the length of 8 bytes.\r\n2. A salt generated per every `aes_encrypt()` call using `java.security.SecureRandom`. Its length is 8 bytes.\r\n3. The encrypted input.\r\n\r\nThe encrypt function derives the secret key and initialization vector (16 bytes) from the salt and user's key using the same algorithm as OpenSSL's `EVP_BytesToKey()` (versions >= 1.1.0c).\r\n\r\nThe `aes_decrypt()` functions assumes that its input has the fields as showed above.\r\n\r\nFor example:\r\n```sql\r\nspark-sql> SELECT base64(aes_encrypt('Apache Spark', '0000111122223333', 'CBC', 'PKCS'));\r\nU2FsdGVkX1/ERGxwEOTDpDD4bQvDtQaNe+gXGudCcUk=\r\nspark-sql> SELECT aes_decrypt(unbase64('U2FsdGVkX1/ERGxwEOTDpDD4bQvDtQaNe+gXGudCcUk='), '0000111122223333', 'CBC', 'PKCS');\r\nApache Spark\r\n```\r\n\r\n### Why are the changes needed?\r\nTo achieve feature parity with other systems/frameworks, and make the migration process from them to Spark SQL easier. For example, the `CBC` mode is supported by:\r\n- BigQuery: https://cloud.google.com/bigquery/docs/reference/standard-sql/aead-encryption-concepts#block_cipher_modes\r\n- Snowflake: https://docs.snowflake.com/en/sql-reference/functions/encrypt.html\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\nNo.\r\n\r\n### How was this patch tested?\r\nBy running new checks:\r\n```\r\n$ build/sbt \"sql/testOnly *QueryExecutionErrorsSuite\"\r\n$ build/sbt \"sql/test:testOnly org.apache.spark.sql.expressions.ExpressionInfoSuite\"\r\n$ build/sbt \"test:testOnly org.apache.spark.sql.MiscFunctionsSuite\"\r\n$ build/sbt \"core/testOnly *SparkThrowableSuite\"\r\n```\r\nand checked compatibility with LibreSSL/OpenSSL:\r\n```\r\n$ openssl version\r\nLibreSSL 3.3.6\r\n$ echo -n 'Apache Spark' | openssl enc -e -aes-128-cbc -pass pass:0000111122223333 -a\r\nU2FsdGVkX1+5GyAmmG7wDWWDBAuUuxjMy++cMFytpls=\r\n```\r\n```sql\r\nspark-sql (default)> SELECT aes_decrypt(unbase64('U2FsdGVkX1+5GyAmmG7wDWWDBAuUuxjMy++cMFytpls='), '0000111122223333', 'CBC');\r\nApache Spark\r\n```\r\ndecrypt Spark's output by OpenSSL:\r\n```sql\r\nspark-sql (default)> SELECT base64(aes_encrypt('Apache Spark', 'abcdefghijklmnop12345678ABCDEFGH', 'CBC', 'PKCS'));\r\nU2FsdGVkX1+maU2vmxrulgxXuQSyZ3ODnlHKqnt2fDA=\r\n```\r\n```\r\n$ echo 'U2FsdGVkX1+maU2vmxrulgxXuQSyZ3ODnlHKqnt2fDA=' | openssl aes-256-cbc -a -d -pass pass:abcdefghijklmnop12345678ABCDEFGH\r\nApache Spark\r\n```",
  "closed_by": {
    "login": "MaxGekk",
    "id": 1580697,
    "node_id": "MDQ6VXNlcjE1ODA2OTc=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1580697?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/MaxGekk",
    "html_url": "https://github.com/MaxGekk",
    "followers_url": "https://api.github.com/users/MaxGekk/followers",
    "following_url": "https://api.github.com/users/MaxGekk/following{/other_user}",
    "gists_url": "https://api.github.com/users/MaxGekk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/MaxGekk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/MaxGekk/subscriptions",
    "organizations_url": "https://api.github.com/users/MaxGekk/orgs",
    "repos_url": "https://api.github.com/users/MaxGekk/repos",
    "events_url": "https://api.github.com/users/MaxGekk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/MaxGekk/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/40704/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/40704/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
