[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1501315619",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1501315619",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1501315619,
    "node_id": "IC_kwDOAQXtWs5ZfEIj",
    "user": {
      "login": "HyukjinKwon",
      "id": 6477701,
      "node_id": "MDQ6VXNlcjY0Nzc3MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6477701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HyukjinKwon",
      "html_url": "https://github.com/HyukjinKwon",
      "followers_url": "https://api.github.com/users/HyukjinKwon/followers",
      "following_url": "https://api.github.com/users/HyukjinKwon/following{/other_user}",
      "gists_url": "https://api.github.com/users/HyukjinKwon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HyukjinKwon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HyukjinKwon/subscriptions",
      "organizations_url": "https://api.github.com/users/HyukjinKwon/orgs",
      "repos_url": "https://api.github.com/users/HyukjinKwon/repos",
      "events_url": "https://api.github.com/users/HyukjinKwon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HyukjinKwon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T02:31:59Z",
    "updated_at": "2023-04-10T02:31:59Z",
    "author_association": "MEMBER",
    "body": "cc @Ngone51 @jiangxb1987 too FYI",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1501315619/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1511354240",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1511354240",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1511354240,
    "node_id": "IC_kwDOAQXtWs5aFW-A",
    "user": {
      "login": "clownxc",
      "id": 27844885,
      "node_id": "MDQ6VXNlcjI3ODQ0ODg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/27844885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clownxc",
      "html_url": "https://github.com/clownxc",
      "followers_url": "https://api.github.com/users/clownxc/followers",
      "following_url": "https://api.github.com/users/clownxc/following{/other_user}",
      "gists_url": "https://api.github.com/users/clownxc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clownxc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clownxc/subscriptions",
      "organizations_url": "https://api.github.com/users/clownxc/orgs",
      "repos_url": "https://api.github.com/users/clownxc/repos",
      "events_url": "https://api.github.com/users/clownxc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clownxc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-17T13:30:36Z",
    "updated_at": "2023-04-17T13:32:18Z",
    "author_association": "NONE",
    "body": "According to the two ideas provided by @cloud-fan  on how to differentiate user-facing errors and user-triggered errors ([have a special prefix] or [create a base trait for transient errors]), in the implementation process, I think having a special prefix may be a more good idea.\r\nI defined a new `SparkThrowable#isTransientError` method with reference to `SparkThrowable#isInternalError`, and decided whether to skip the retry logic based on the return value of the `SparkThrowable#isTransientError`.\r\n```scala\r\n  def isInternalError(errorClass: String): Boolean = {\r\n    errorClass == \"INTERNAL_ERROR\"\r\n  }\r\n\r\n  def isTransientError(errorClass: String): Boolean = {\r\n    errorClass.startsWith(\"TRANSIENT\")\r\n  }\r\n```\r\n\r\ncan you re-review the code when you are free, and make some comments. @cloud-fan @aokolnychyi ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1511354240/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1512709703",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1512709703",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1512709703,
    "node_id": "IC_kwDOAQXtWs5aKh5H",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-18T08:53:31Z",
    "updated_at": "2023-04-18T08:53:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, I'm on the fence now. On one hand, the number of transient errors should be much smaller than the number of user-triggered errors, so it's better to find out these transient errors and mark them. On the other hand, not retrying the task can be a regression that leads to job failure, so we should make sure we only skip task retry when the error is definitely user-triggered.\r\n\r\nTo be conservative, now I'm leaning towards picking some errors and marking them as \"can skip task retry\". I like the idea from @aokolnychyi that we can add a JSON field for it.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1512709703/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1512731238",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1512731238",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1512731238,
    "node_id": "IC_kwDOAQXtWs5aKnJm",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-18T09:07:37Z",
    "updated_at": "2023-04-18T09:07:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "I would be on the conservative side and skip retry when we are absolutely certain that a retry will not help.\nSerDe failures, for example, are good candidates (which is already handled), and similar ... note that in non deterministic tasks, a retry can succeed which earlier failed with a user exception ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1512731238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1513639084",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1513639084",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1513639084,
    "node_id": "IC_kwDOAQXtWs5aOEys",
    "user": {
      "login": "aokolnychyi",
      "id": 6235869,
      "node_id": "MDQ6VXNlcjYyMzU4Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6235869?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aokolnychyi",
      "html_url": "https://github.com/aokolnychyi",
      "followers_url": "https://api.github.com/users/aokolnychyi/followers",
      "following_url": "https://api.github.com/users/aokolnychyi/following{/other_user}",
      "gists_url": "https://api.github.com/users/aokolnychyi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aokolnychyi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aokolnychyi/subscriptions",
      "organizations_url": "https://api.github.com/users/aokolnychyi/orgs",
      "repos_url": "https://api.github.com/users/aokolnychyi/repos",
      "events_url": "https://api.github.com/users/aokolnychyi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aokolnychyi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-18T18:45:16Z",
    "updated_at": "2023-04-18T18:45:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for being safe ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1513639084/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1513933182",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1513933182",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1513933182,
    "node_id": "IC_kwDOAQXtWs5aPMl-",
    "user": {
      "login": "clownxc",
      "id": 27844885,
      "node_id": "MDQ6VXNlcjI3ODQ0ODg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/27844885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clownxc",
      "html_url": "https://github.com/clownxc",
      "followers_url": "https://api.github.com/users/clownxc/followers",
      "following_url": "https://api.github.com/users/clownxc/following{/other_user}",
      "gists_url": "https://api.github.com/users/clownxc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clownxc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clownxc/subscriptions",
      "organizations_url": "https://api.github.com/users/clownxc/orgs",
      "repos_url": "https://api.github.com/users/clownxc/repos",
      "events_url": "https://api.github.com/users/clownxc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clownxc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-19T00:10:39Z",
    "updated_at": "2023-04-19T00:10:39Z",
    "author_association": "NONE",
    "body": "> OK, I'm on the fence now. On one hand, the number of transient errors should be much smaller than the number of user-triggered errors, so it's better to find out these transient errors and mark them. On the other hand, not retrying the task can be a regression that leads to job failure, so we should make sure we only skip task retry when the error is definitely user-triggered.\r\n> \r\n> To be conservative, now I'm leaning towards picking some errors and marking them as \"can skip task retry\". I like the idea from @aokolnychyi that we can add a JSON field for it.\r\n\r\nI'm trying to change the code now",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1513933182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1513960560",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1513960560",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1513960560,
    "node_id": "IC_kwDOAQXtWs5aPTRw",
    "user": {
      "login": "clownxc",
      "id": 27844885,
      "node_id": "MDQ6VXNlcjI3ODQ0ODg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/27844885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clownxc",
      "html_url": "https://github.com/clownxc",
      "followers_url": "https://api.github.com/users/clownxc/followers",
      "following_url": "https://api.github.com/users/clownxc/following{/other_user}",
      "gists_url": "https://api.github.com/users/clownxc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clownxc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clownxc/subscriptions",
      "organizations_url": "https://api.github.com/users/clownxc/orgs",
      "repos_url": "https://api.github.com/users/clownxc/repos",
      "events_url": "https://api.github.com/users/clownxc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clownxc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-19T00:45:18Z",
    "updated_at": "2023-04-19T00:45:18Z",
    "author_association": "NONE",
    "body": "> I would be on the conservative side and skip retry when we are absolutely certain that a retry will not help. SerDe failures, for example, are good candidates (which is already handled), and similar ... note that in non deterministic tasks, a retry can succeed which earlier failed with a user exception\r\n\r\nI see, I'm trying to change the code now",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1513960560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1536925100",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1536925100",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1536925100,
    "node_id": "IC_kwDOAQXtWs5bm52s",
    "user": {
      "login": "clownxc",
      "id": 27844885,
      "node_id": "MDQ6VXNlcjI3ODQ0ODg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/27844885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clownxc",
      "html_url": "https://github.com/clownxc",
      "followers_url": "https://api.github.com/users/clownxc/followers",
      "following_url": "https://api.github.com/users/clownxc/following{/other_user}",
      "gists_url": "https://api.github.com/users/clownxc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clownxc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clownxc/subscriptions",
      "organizations_url": "https://api.github.com/users/clownxc/orgs",
      "repos_url": "https://api.github.com/users/clownxc/repos",
      "events_url": "https://api.github.com/users/clownxc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clownxc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-06T00:07:35Z",
    "updated_at": "2023-05-06T00:07:35Z",
    "author_association": "NONE",
    "body": "I have modified the code, can you re-review the code when you are free, and make some comments. @cloud-fan @aokolnychyi @mridulm ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1536925100/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1537508145",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1537508145",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1537508145,
    "node_id": "IC_kwDOAQXtWs5bpIMx",
    "user": {
      "login": "clownxc",
      "id": 27844885,
      "node_id": "MDQ6VXNlcjI3ODQ0ODg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/27844885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clownxc",
      "html_url": "https://github.com/clownxc",
      "followers_url": "https://api.github.com/users/clownxc/followers",
      "following_url": "https://api.github.com/users/clownxc/following{/other_user}",
      "gists_url": "https://api.github.com/users/clownxc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clownxc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clownxc/subscriptions",
      "organizations_url": "https://api.github.com/users/clownxc/orgs",
      "repos_url": "https://api.github.com/users/clownxc/repos",
      "events_url": "https://api.github.com/users/clownxc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clownxc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-07T18:11:30Z",
    "updated_at": "2023-05-08T00:04:42Z",
    "author_association": "NONE",
    "body": "According to the suggestions provided by @cloud-fan @aokolnychyi .I modified the code.\r\nI added the `isTransient ` attribute to some `error_classes` \r\nsuch as:\r\n-  `AMBIGUOUS_LATERAL_COLUMN_ALIAS`\r\n- `CANNOT_PARSE_DECIMAL`\r\n- `DATATYPE_MISMATCH` \r\n- `DIVIDE_BY_ZERO`\r\n- `_LEGACY_ERROR_TEMP_3043(npe)`\r\n```java\r\n  \"CANNOT_PARSE_DECIMAL\" : {\r\n    \"message\" : [\r\n      \"Cannot parse decimal.\"\r\n    ],\r\n    \"sqlState\" : \"22018\",\r\n    \"isTransient\" : false\r\n  },\r\n```\r\n\r\nWhen these errors occur, the retry logic is skipped.\r\n```java\r\n   if (!ef.isTransient) {\r\n        // if the exception has an error class which means a non-transient error, not retry\r\n        logError(s\"$task has a non-transient exception: ${ef.description}; not retrying\")\r\n        sched.dagScheduler.taskEnded(tasks(index), reason, null, accumUpdates, metricPeaks, info)\r\n        abort(s\"$task has a non-transient exception: ${ef.description}\", ef.exception)\r\n        return\r\n    }\r\n```\r\nhope you leave some comments in your free time. @cloud-fan @aokolnychyi @mridulm, thanks a lot.\r\n\r\n\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1537508145/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1546797443",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1546797443",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1546797443,
    "node_id": "IC_kwDOAQXtWs5cMkGD",
    "user": {
      "login": "gabrywu",
      "id": 8545796,
      "node_id": "MDQ6VXNlcjg1NDU3OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8545796?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gabrywu",
      "html_url": "https://github.com/gabrywu",
      "followers_url": "https://api.github.com/users/gabrywu/followers",
      "following_url": "https://api.github.com/users/gabrywu/following{/other_user}",
      "gists_url": "https://api.github.com/users/gabrywu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gabrywu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gabrywu/subscriptions",
      "organizations_url": "https://api.github.com/users/gabrywu/orgs",
      "repos_url": "https://api.github.com/users/gabrywu/repos",
      "events_url": "https://api.github.com/users/gabrywu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gabrywu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-14T03:25:21Z",
    "updated_at": "2023-05-14T03:25:21Z",
    "author_association": "MEMBER",
    "body": "useful feature, any updates here?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1546797443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1547045506",
    "html_url": "https://github.com/apache/spark/pull/40707#issuecomment-1547045506",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40707",
    "id": 1547045506,
    "node_id": "IC_kwDOAQXtWs5cNgqC",
    "user": {
      "login": "clownxc",
      "id": 27844885,
      "node_id": "MDQ6VXNlcjI3ODQ0ODg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/27844885?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clownxc",
      "html_url": "https://github.com/clownxc",
      "followers_url": "https://api.github.com/users/clownxc/followers",
      "following_url": "https://api.github.com/users/clownxc/following{/other_user}",
      "gists_url": "https://api.github.com/users/clownxc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clownxc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clownxc/subscriptions",
      "organizations_url": "https://api.github.com/users/clownxc/orgs",
      "repos_url": "https://api.github.com/users/clownxc/repos",
      "events_url": "https://api.github.com/users/clownxc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clownxc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T00:27:32Z",
    "updated_at": "2023-05-15T00:27:32Z",
    "author_association": "NONE",
    "body": "> useful feature, any updates here?\r\n\r\nI modified the code according to the suggestions provided by @cloud-fan @aokolnychyi @mridulm , next step may be to seek help from people who worked on the error framework. Can you give some suggestions on the next work?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1547045506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
