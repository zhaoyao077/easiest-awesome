[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1467025042",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1467025042",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1467025042,
    "node_id": "IC_kwDOAQXtWs5XcQaS",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-13T22:00:38Z",
    "updated_at": "2023-03-13T22:00:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "+CC @otterc ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1467025042/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1467314593",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1467314593",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1467314593,
    "node_id": "IC_kwDOAQXtWs5XdXGh",
    "user": {
      "login": "otterc",
      "id": 4690923,
      "node_id": "MDQ6VXNlcjQ2OTA5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4690923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/otterc",
      "html_url": "https://github.com/otterc",
      "followers_url": "https://api.github.com/users/otterc/followers",
      "following_url": "https://api.github.com/users/otterc/following{/other_user}",
      "gists_url": "https://api.github.com/users/otterc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/otterc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/otterc/subscriptions",
      "organizations_url": "https://api.github.com/users/otterc/orgs",
      "repos_url": "https://api.github.com/users/otterc/repos",
      "events_url": "https://api.github.com/users/otterc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/otterc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T03:53:58Z",
    "updated_at": "2023-03-14T03:53:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Stove-hust Thank you for reporting and the patch. Would you be able to share driver logs?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1467314593/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1467340408",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1467340408",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1467340408,
    "node_id": "IC_kwDOAQXtWs5XddZ4",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-14T04:32:31Z",
    "updated_at": "2023-03-14T04:32:31Z",
    "author_association": "NONE",
    "body": "> @Stove-hust Thank you for reporting and the patch. Would you be able to share driver logs?\r\n\r\nSure（Add some comments）\r\n--- stage 10 faield \r\n22/10/15 10:55:58 WARN task-result-getter-1 TaskSetManager: Lost task 435.1 in stage 10.0 (TID 6822, zw02-data-hdp-dn21102.mt, executor 101): FetchFailed(null, shuffleId=3, mapIndex=-1, mapId=-1, reduceId=435, message=\r\norg.apache.spark.shuffle.MetadataFetchFailedException: Missing an output location for shuffle 3 partition 435\r\n22/10/15 10:55:58 INFO dag-scheduler-event-loop DAGScheduler: ShuffleMapStage 10 (processCmd at CliDriver.java:386) failed in 601.792 s due to org.apache.spark.shuffle.MetadataFetchFailedException: Missing an output location for shuffle 3 partition 435\r\n\r\n-- resubmit stage 10 && parentStage 9\r\n22/10/15 10:55:58 INFO dag-scheduler-event-loop DAGScheduler: Resubmitting ShuffleMapStage 9 (processCmd at CliDriver.java:386) and ShuffleMapStage 10 (processCmd at CliDriver.java:386) due to fetch failure\r\n22/10/15 10:55:58 INFO dag-scheduler-event-loop DAGScheduler: Resubmitting failed stages\r\n22/10/15 10:55:58 INFO dag-scheduler-event-loop DAGScheduler: Submitting ShuffleMapStage 9 (MapPartitionsRDD[22] at processCmd at CliDriver.java:386), which has no missing parents\r\n22/10/15 10:55:58 INFO dag-scheduler-event-loop DAGScheduler: Push-based shuffle disabled for ShuffleMapStage 9 (processCmd at CliDriver.java:386) since it is already shuffle merge finalized\r\n22/10/15 10:55:58 INFO dag-scheduler-event-loop DAGScheduler: Submitting 3 missing tasks from ShuffleMapStage 9 (MapPartitionsRDD[22] at processCmd at CliDriver.java:386) (first 15 tasks are for partitions Vector(98, 372, 690))\r\n22/10/15 10:55:58 INFO dag-scheduler-event-loop YarnClusterScheduler: Adding task set 9.1 with 3 tasks\r\n\r\n-- The first stage10 task completes one after another, and notifyDriverAboutPushCompletion to end stage 10, and mark finalizeTask, because the stage is not in runningStages, so the stage cannot be marked shuffleMergeFinalized.\r\n22/10/15 10:55:58 INFO task-result-getter-0 TaskSetManager: Finished task 325.0 in stage 10.0 (TID 6166) in 154455 ms on zw02-data-hdp-dn25537.mt (executor 117) (494/500)\r\n22/10/15 10:55:59 WARN task-result-getter-1 TaskSetManager: Lost task 325.1 in stage 10.0 (TID 6671, zw02-data-hdp-dn23160.mt, executor 47): TaskKilled (another attempt succeeded)\r\n22/10/15 10:56:20 WARN task-result-getter-1 TaskSetManager: Lost task 358.1 in stage 10.0 (TID 6731, zw02-data-hdp-dn25537.mt, executor 95): TaskKilled (another attempt succeeded)\r\n22/10/15 10:56:20 INFO task-result-getter-1 TaskSetManager: Task 358.1 in stage 10.0 (TID 6731) failed, but the task will not be re-executed (either because the task failed with a shuffle data fetch failure, so the previous stage needs to be re-run, or because a different copy of the task has already succeeded).\r\n\r\n--- Removed TaskSet 10.0, whose tasks have all completed\r\n22/10/15 10:56:22 INFO task-result-getter-1 TaskSetManager: Ignoring task-finished event for 435.0 in stage 10.0 because task 435 has already completed successfully\r\n22/10/15 10:56:22 INFO task-result-getter-1 YarnClusterScheduler: Removed TaskSet 10.0, whose tasks have all completed, from pool \r\n\r\n--- notifyDriverAboutPushCompletion stage 10\r\n22/10/15 10:56:23 INFO dag-scheduler-event-loop DAGScheduler: ShuffleMapStage 10 (processCmd at CliDriver.java:386) scheduled for finalizing shuffle merge in 0 s\r\n22/10/15 10:56:23 INFO shuffle-merge-finalizer-2 DAGScheduler: ShuffleMapStage 10 (processCmd at CliDriver.java:386) finalizing the shuffle merge with registering merge results set to true\r\n\r\n--- stage 9 finished \r\n22/10/15 10:57:51 INFO task-result-getter-1 TaskSetManager: Finished task 2.0 in stage 9.1 (TID 6825) in 112825 ms on zw02-data-hdp-dn25559.mt (executor 74) (3/3)\r\n22/10/15 10:57:51 INFO task-result-getter-1 YarnClusterScheduler: Removed TaskSet 9.1, whose tasks have all completed, from pool \r\n22/10/15 10:57:51 INFO dag-scheduler-event-loop DAGScheduler: ShuffleMapStage 9 (processCmd at CliDriver.java:386) finished in 112.832 s\r\n\r\n--- resubmit stage 10\r\n2/10/15 10:57:51 INFO dag-scheduler-event-loop DAGScheduler: looking for newly runnable stages\r\n22/10/15 10:57:51 INFO dag-scheduler-event-loop DAGScheduler: running: Set(ShuffleMapStage 11, ShuffleMapStage 8)\r\n22/10/15 10:57:51 INFO dag-scheduler-event-loop DAGScheduler: waiting: Set(ShuffleMapStage 12, ShuffleMapStage 10)\r\n22/10/15 10:57:51 INFO dag-scheduler-event-loop DAGScheduler: failed: Set()\r\n22/10/15 10:57:51 INFO dag-scheduler-event-loop DAGScheduler: Submitting ShuffleMapStage 10 (MapPartitionsRDD[36] at processCmd at CliDriver.java:386), which has no missing parents\r\n22/10/15 10:57:51 INFO dag-scheduler-event-loop OutputCommitCoordinator: Reusing state from previous attempt of stage 10.\r\n22/10/15 10:57:51 INFO dag-scheduler-event-loop DAGScheduler: Shuffle merge enabled before starting the stage for ShuffleMapStage 10 with shuffle 7 and shuffle merge 0 with 108 merger locations\r\n22/10/15 10:57:51 INFO dag-scheduler-event-loop DAGScheduler: Submitting 4 missing tasks from ShuffleMapStage 10 (MapPartitionsRDD[36] at processCmd at CliDriver.java:386) (first 15 tasks are for partitions Vector(105, 288, 447, 481))\r\n22/10/15 10:57:51 INFO dag-scheduler-event-loop YarnClusterScheduler: Adding task set 10.1 with 4 tasks\r\n\r\n--- stage 10 can not finished\r\n22/10/15 10:58:18 INFO task-result-getter-1 TaskSetManager: Finished task 2.0 in stage 10.1 (TID 6857) in 26644 ms on zw02-data-hdp-dn23767.mt (executor 139) (1/4)\r\n22/10/15 10:58:24 INFO task-result-getter-1 TaskSetManager: Finished task 3.0 in stage 10.1 (TID 6860) in 32551 ms on zw02-data-hdp-dn23729.mt (executor 42) (2/4)\r\n22/10/15 10:58:47 INFO task-result-getter-1 TaskSetManager: Finished task 0.0 in stage 10.1 (TID 6858) in 55524 ms on zw02-data-hdp-dn20640.mt (executor 134) (3/4)\r\n22/10/15 10:58:58 INFO task-result-getter-0 TaskSetManager: Finished task 1.0 in stage 10.1 (TID 6859) in 66911 ms on zw02-data-hdp-dn25862.mt (executor 57) (4/4)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1467340408/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1469222238",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1469222238",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1469222238,
    "node_id": "IC_kwDOAQXtWs5Xko1e",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-15T02:45:23Z",
    "updated_at": "2023-03-15T02:45:23Z",
    "author_association": "NONE",
    "body": "@otterc Hello, is there anything else I should add?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1469222238/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1469293356",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1469293356",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1469293356,
    "node_id": "IC_kwDOAQXtWs5Xk6Ms",
    "user": {
      "login": "otterc",
      "id": 4690923,
      "node_id": "MDQ6VXNlcjQ2OTA5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4690923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/otterc",
      "html_url": "https://github.com/otterc",
      "followers_url": "https://api.github.com/users/otterc/followers",
      "following_url": "https://api.github.com/users/otterc/following{/other_user}",
      "gists_url": "https://api.github.com/users/otterc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/otterc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/otterc/subscriptions",
      "organizations_url": "https://api.github.com/users/otterc/orgs",
      "repos_url": "https://api.github.com/users/otterc/repos",
      "events_url": "https://api.github.com/users/otterc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/otterc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-15T04:02:33Z",
    "updated_at": "2023-03-15T04:02:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Stove-hust  Haven't had a chance to look at it yet. I'll take a look at it this week.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1469293356/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1469402096",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1469402096",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1469402096,
    "node_id": "IC_kwDOAQXtWs5XlUvw",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-15T06:12:37Z",
    "updated_at": "2023-03-15T06:12:37Z",
    "author_association": "NONE",
    "body": "> @Stove-hust Haven't had a chance to look at it yet. I'll take a look at it this week.\r\n\r\ntks",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1469402096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1470501033",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1470501033",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1470501033,
    "node_id": "IC_kwDOAQXtWs5XphCp",
    "user": {
      "login": "otterc",
      "id": 4690923,
      "node_id": "MDQ6VXNlcjQ2OTA5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4690923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/otterc",
      "html_url": "https://github.com/otterc",
      "followers_url": "https://api.github.com/users/otterc/followers",
      "following_url": "https://api.github.com/users/otterc/following{/other_user}",
      "gists_url": "https://api.github.com/users/otterc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/otterc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/otterc/subscriptions",
      "organizations_url": "https://api.github.com/users/otterc/orgs",
      "repos_url": "https://api.github.com/users/otterc/repos",
      "events_url": "https://api.github.com/users/otterc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/otterc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-15T17:57:46Z",
    "updated_at": "2023-03-15T17:57:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@akpatnam25 @shuwang21",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1470501033/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1473171295",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1473171295",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1473171295,
    "node_id": "IC_kwDOAQXtWs5Xzs9f",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-17T05:52:17Z",
    "updated_at": "2023-03-17T05:52:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "So this is an interesting coincidence, I literally encountered a production job which seems to be hitting this exact same issue :-)\r\nI was in the process of creating a test case, but my intuition was along the same lines as this PR.\r\n\r\nCan you create a test case to validate this behavior @Stove-hust ?\r\nEssentially it should fail with current master, and succeed after this change.\r\n\r\nThanks for working on this fix",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1473171295/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1473303194",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1473303194",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1473303194,
    "node_id": "IC_kwDOAQXtWs5X0NKa",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-17T07:39:32Z",
    "updated_at": "2023-03-17T07:39:32Z",
    "author_association": "NONE",
    "body": "> So this is an interesting coincidence, I literally encountered a production job which seems to be hitting this exact same issue :-) I was in the process of creating a test case, but my intuition was along the same lines as this PR.\r\n> \r\n> Can you create a test case to validate this behavior @Stove-hust ? Essentially it should fail with current master, and succeed after this change.\r\n> \r\n> Thanks for working on this fix\r\n\r\nNo problem",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1473303194/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1474162354",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1474162354",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1474162354,
    "node_id": "IC_kwDOAQXtWs5X3e6y",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-17T17:19:18Z",
    "updated_at": "2023-03-17T17:19:18Z",
    "author_association": "NONE",
    "body": "> So this is an interesting coincidence, I literally encountered a production job which seems to be hitting this exact same issue :-) I was in the process of creating a test case, but my intuition was along the same lines as this PR.\r\n> \r\n> Can you create a test case to validate this behavior @Stove-hust ? Essentially it should fail with current master, and succeed after this change.\r\n> \r\n> Thanks for working on this fix\r\n\r\nAdded UT",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1474162354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1474749275",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1474749275",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1474749275,
    "node_id": "IC_kwDOAQXtWs5X5uNb",
    "user": {
      "login": "otterc",
      "id": 4690923,
      "node_id": "MDQ6VXNlcjQ2OTA5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4690923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/otterc",
      "html_url": "https://github.com/otterc",
      "followers_url": "https://api.github.com/users/otterc/followers",
      "following_url": "https://api.github.com/users/otterc/following{/other_user}",
      "gists_url": "https://api.github.com/users/otterc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/otterc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/otterc/subscriptions",
      "organizations_url": "https://api.github.com/users/otterc/orgs",
      "repos_url": "https://api.github.com/users/otterc/repos",
      "events_url": "https://api.github.com/users/otterc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/otterc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-18T06:38:37Z",
    "updated_at": "2023-03-18T06:39:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Stove-hust The main change in `DAGScheduler` looks good to me. Basically, [here](https://github.com/apache/spark/blob/11c9838283e98d5ebe6ce13b85e26217494feef2/core/src/main/scala/org/apache/spark/scheduler/DAGScheduler.scala#L762) we also check whether the parent stage is finalized and if it is not we submit that. The reason the parent stage is not getting finalized here is because it has no tasks. \r\nWill review the UT and take another look at the code next week. Thanks for fixing this.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1474749275/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1474782673",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1474782673",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1474782673,
    "node_id": "IC_kwDOAQXtWs5X52XR",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-18T09:10:39Z",
    "updated_at": "2023-03-18T15:04:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Instead of only testing specifically for the flag - which is subject to change as the implementation evolves, we should also test for behavior here.\r\n\r\nThis is the reproducible test I was using (with some changes) to test approaches for this bug - and it mimics the case I saw in our production reasonably well.\r\n(In DAGSchedulerSuite):\r\n```\r\n  for (pushBasedShuffleEnabled <- Seq(true, false)) {\r\n    test(\"SPARK-40082: recomputation of shuffle map stage with no pending partitions should not \" +\r\n        s\"hang. pushBasedShuffleEnabled = $pushBasedShuffleEnabled\") {\r\n\r\n      if (pushBasedShuffleEnabled) {\r\n        initPushBasedShuffleConfs(conf)\r\n        DAGSchedulerSuite.clearMergerLocs()\r\n        DAGSchedulerSuite.addMergerLocs(Seq(\"host1\", \"host2\", \"host3\", \"host4\", \"host5\"))\r\n      }\r\n\r\n      var taskIdCount = 0\r\n\r\n      var completedStage: List[Int] = Nil\r\n      val listener = new SparkListener() {\r\n        override def onStageCompleted(event: SparkListenerStageCompleted): Unit = {\r\n          completedStage = completedStage :+ event.stageInfo.stageId\r\n        }\r\n      }\r\n      sc.addSparkListener(listener)\r\n\r\n      val fetchFailParentPartition = 0\r\n\r\n      val shuffleMapRdd0 = new MyRDD(sc, 2, Nil)\r\n      val shuffleDep0 = new ShuffleDependency(shuffleMapRdd0, new HashPartitioner(2))\r\n\r\n      val shuffleMapRdd1 = new MyRDD(sc, 2, List(shuffleDep0), tracker = mapOutputTracker)\r\n      val shuffleDep1 = new ShuffleDependency(shuffleMapRdd1, new HashPartitioner(2))\r\n\r\n      val reduceRdd = new MyRDD(sc, 2, List(shuffleDep1), tracker = mapOutputTracker)\r\n\r\n      // submit the initial mapper stage, generate shuffle output for first reducer stage.\r\n      submitMapStage(shuffleDep0)\r\n\r\n      // Map stage completes successfully,\r\n      completeShuffleMapStageSuccessfully(0, 0, 3, Seq(\"hostA\", \"hostB\"))\r\n      taskIdCount += 2\r\n      assert(completedStage === List(0))\r\n\r\n      // Now submit the first reducer stage\r\n      submitMapStage(shuffleDep1)\r\n\r\n      def createTaskInfo(speculative: Boolean): TaskInfo = {\r\n        val taskInfo = new TaskInfo(\r\n          taskId = taskIdCount,\r\n          index = 0,\r\n          attemptNumber = 0,\r\n          partitionId = 0,\r\n          launchTime = 0L,\r\n          executorId = \"\",\r\n          host = \"hostC\",\r\n          TaskLocality.ANY,\r\n          speculative = speculative)\r\n        taskIdCount += 1\r\n        taskInfo\r\n      }\r\n\r\n      val normalTask = createTaskInfo(speculative = false);\r\n      val speculativeTask = createTaskInfo(speculative = true)\r\n\r\n      // fail task 1.0 due to FetchFailed, and make 1.1 succeed.\r\n      runEvent(makeCompletionEvent(taskSets(1).tasks(0),\r\n        FetchFailed(makeBlockManagerId(\"hostA\"), shuffleDep0.shuffleId, normalTask.taskId,\r\n          fetchFailParentPartition, normalTask.index, \"ignored\"),\r\n        result = null,\r\n        Seq.empty,\r\n        Array.empty,\r\n        normalTask))\r\n\r\n      // Make the speculative task succeed after initial task has failed\r\n      runEvent(makeCompletionEvent(taskSets(1).tasks(0), Success,\r\n        result = MapStatus(BlockManagerId(\"hostD-exec1\", \"hostD\", 34512),\r\n          Array.fill[Long](2)(2), mapTaskId = speculativeTask.taskId),\r\n        taskInfo = speculativeTask))\r\n\r\n      // The second task, for partition 1 succeeds as well.\r\n      runEvent(makeCompletionEvent(taskSets(1).tasks(1), Success,\r\n        result = MapStatus(BlockManagerId(\"hostE-exec2\", \"hostE\", 23456),\r\n          Array.fill[Long](2)(2), mapTaskId = taskIdCount),\r\n      ))\r\n      taskIdCount += 1\r\n\r\n      sc.listenerBus.waitUntilEmpty()\r\n      assert(completedStage === List(0, 2))\r\n\r\n      // the stages will now get resubmitted due to the failure\r\n      Thread.sleep(DAGScheduler.RESUBMIT_TIMEOUT * 2)\r\n\r\n      // parent map stage resubmitted\r\n      assert(scheduler.runningStages.size === 1)\r\n      val mapStage = scheduler.runningStages.head\r\n\r\n      // Stage 1 is same as Stage 0 - but created for the ShuffleMapTask 2, as it is a\r\n      // different job\r\n      assert(mapStage.id === 1)\r\n      assert(mapStage.latestInfo.failureReason.isEmpty)\r\n      // only the partition reported in fetch failure is resubmitted\r\n      assert(mapStage.latestInfo.numTasks === 1)\r\n\r\n      val stage0Retry = taskSets.filter(_.stageId == 1)\r\n      assert(stage0Retry.size === 1)\r\n      // make the original task succeed\r\n      runEvent(makeCompletionEvent(stage0Retry.head.tasks(fetchFailParentPartition), Success,\r\n        result = MapStatus(BlockManagerId(\"hostF-exec1\", \"hostF\", 12345),\r\n          Array.fill[Long](2)(2), mapTaskId = taskIdCount)))\r\n      Thread.sleep(DAGScheduler.RESUBMIT_TIMEOUT * 2)\r\n\r\n      // The retries should succeed\r\n      sc.listenerBus.waitUntilEmpty()\r\n      assert(completedStage === List(0, 2, 1, 2))\r\n\r\n      // Now submit the entire dag again\r\n      // This will add 3 new stages.\r\n      submit(reduceRdd, Array(0, 1))\r\n      Thread.sleep(DAGScheduler.RESUBMIT_TIMEOUT * 2)\r\n\r\n      // Only the last stage needs to execute, and those tasks - so completed stages should not\r\n      // change.\r\n      sc.listenerBus.waitUntilEmpty()\r\n\r\n      assert(completedStage === List(0, 2, 1, 2))\r\n\r\n      // All other stages should be done, and only the final stage should be waiting\r\n      assert(scheduler.runningStages.size === 1)\r\n      assert(scheduler.runningStages.head.id === 5)\r\n      assert(taskSets.count(_.stageId == 5) === 1)\r\n\r\n      complete(taskSets.filter(_.stageId == 5).head, Seq((Success, 1), (Success, 2)))\r\n\r\n      sc.listenerBus.waitUntilEmpty()\r\n      assert(completedStage === List(0, 2, 1, 2, 5))\r\n    }\r\n  }\r\n```\r\n\r\nWould be good to adapt/clean it up for your PR, in addition to the existing test - so that the observed bug does not recur.\r\n\r\n(Good news is, this PR works against it :-) )\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1474782673/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1474918516",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1474918516",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1474918516,
    "node_id": "IC_kwDOAQXtWs5X6Xh0",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-18T17:18:45Z",
    "updated_at": "2023-03-18T17:18:45Z",
    "author_association": "NONE",
    "body": "> Instead of only testing specifically for the flag - which is subject to change as the implementation evolves, we should also test for behavior here.\r\n> \r\n> This is the reproducible test I was using (with some changes) to test approaches for this bug - and it mimics the case I saw in our production reasonably well. (In DAGSchedulerSuite):\r\n> \r\n> ```\r\n>   for (pushBasedShuffleEnabled <- Seq(true, false)) {\r\n>     test(\"SPARK-40082: recomputation of shuffle map stage with no pending partitions should not \" +\r\n>         s\"hang. pushBasedShuffleEnabled = $pushBasedShuffleEnabled\") {\r\n> \r\n>       if (pushBasedShuffleEnabled) {\r\n>         initPushBasedShuffleConfs(conf)\r\n>         DAGSchedulerSuite.clearMergerLocs()\r\n>         DAGSchedulerSuite.addMergerLocs(Seq(\"host1\", \"host2\", \"host3\", \"host4\", \"host5\"))\r\n>       }\r\n> \r\n>       var taskIdCount = 0\r\n> \r\n>       var completedStage: List[Int] = Nil\r\n>       val listener = new SparkListener() {\r\n>         override def onStageCompleted(event: SparkListenerStageCompleted): Unit = {\r\n>           completedStage = completedStage :+ event.stageInfo.stageId\r\n>         }\r\n>       }\r\n>       sc.addSparkListener(listener)\r\n> \r\n>       val fetchFailParentPartition = 0\r\n> \r\n>       val shuffleMapRdd0 = new MyRDD(sc, 2, Nil)\r\n>       val shuffleDep0 = new ShuffleDependency(shuffleMapRdd0, new HashPartitioner(2))\r\n> \r\n>       val shuffleMapRdd1 = new MyRDD(sc, 2, List(shuffleDep0), tracker = mapOutputTracker)\r\n>       val shuffleDep1 = new ShuffleDependency(shuffleMapRdd1, new HashPartitioner(2))\r\n> \r\n>       val reduceRdd = new MyRDD(sc, 2, List(shuffleDep1), tracker = mapOutputTracker)\r\n> \r\n>       // submit the initial mapper stage, generate shuffle output for first reducer stage.\r\n>       submitMapStage(shuffleDep0)\r\n> \r\n>       // Map stage completes successfully,\r\n>       completeShuffleMapStageSuccessfully(0, 0, 3, Seq(\"hostA\", \"hostB\"))\r\n>       taskIdCount += 2\r\n>       assert(completedStage === List(0))\r\n> \r\n>       // Now submit the first reducer stage\r\n>       submitMapStage(shuffleDep1)\r\n> \r\n>       def createTaskInfo(speculative: Boolean): TaskInfo = {\r\n>         val taskInfo = new TaskInfo(\r\n>           taskId = taskIdCount,\r\n>           index = 0,\r\n>           attemptNumber = 0,\r\n>           partitionId = 0,\r\n>           launchTime = 0L,\r\n>           executorId = \"\",\r\n>           host = \"hostC\",\r\n>           TaskLocality.ANY,\r\n>           speculative = speculative)\r\n>         taskIdCount += 1\r\n>         taskInfo\r\n>       }\r\n> \r\n>       val normalTask = createTaskInfo(speculative = false);\r\n>       val speculativeTask = createTaskInfo(speculative = true)\r\n> \r\n>       // fail task 1.0 due to FetchFailed, and make 1.1 succeed.\r\n>       runEvent(makeCompletionEvent(taskSets(1).tasks(0),\r\n>         FetchFailed(makeBlockManagerId(\"hostA\"), shuffleDep0.shuffleId, normalTask.taskId,\r\n>           fetchFailParentPartition, normalTask.index, \"ignored\"),\r\n>         result = null,\r\n>         Seq.empty,\r\n>         Array.empty,\r\n>         normalTask))\r\n> \r\n>       // Make the speculative task succeed after initial task has failed\r\n>       runEvent(makeCompletionEvent(taskSets(1).tasks(0), Success,\r\n>         result = MapStatus(BlockManagerId(\"hostD-exec1\", \"hostD\", 34512),\r\n>           Array.fill[Long](2)(2), mapTaskId = speculativeTask.taskId),\r\n>         taskInfo = speculativeTask))\r\n> \r\n>       // The second task, for partition 1 succeeds as well.\r\n>       runEvent(makeCompletionEvent(taskSets(1).tasks(1), Success,\r\n>         result = MapStatus(BlockManagerId(\"hostE-exec2\", \"hostE\", 23456),\r\n>           Array.fill[Long](2)(2), mapTaskId = taskIdCount),\r\n>       ))\r\n>       taskIdCount += 1\r\n> \r\n>       sc.listenerBus.waitUntilEmpty()\r\n>       assert(completedStage === List(0, 2))\r\n> \r\n>       // the stages will now get resubmitted due to the failure\r\n>       Thread.sleep(DAGScheduler.RESUBMIT_TIMEOUT * 2)\r\n> \r\n>       // parent map stage resubmitted\r\n>       assert(scheduler.runningStages.size === 1)\r\n>       val mapStage = scheduler.runningStages.head\r\n> \r\n>       // Stage 1 is same as Stage 0 - but created for the ShuffleMapTask 2, as it is a\r\n>       // different job\r\n>       assert(mapStage.id === 1)\r\n>       assert(mapStage.latestInfo.failureReason.isEmpty)\r\n>       // only the partition reported in fetch failure is resubmitted\r\n>       assert(mapStage.latestInfo.numTasks === 1)\r\n> \r\n>       val stage0Retry = taskSets.filter(_.stageId == 1)\r\n>       assert(stage0Retry.size === 1)\r\n>       // make the original task succeed\r\n>       runEvent(makeCompletionEvent(stage0Retry.head.tasks(fetchFailParentPartition), Success,\r\n>         result = MapStatus(BlockManagerId(\"hostF-exec1\", \"hostF\", 12345),\r\n>           Array.fill[Long](2)(2), mapTaskId = taskIdCount)))\r\n>       Thread.sleep(DAGScheduler.RESUBMIT_TIMEOUT * 2)\r\n> \r\n>       // The retries should succeed\r\n>       sc.listenerBus.waitUntilEmpty()\r\n>       assert(completedStage === List(0, 2, 1, 2))\r\n> \r\n>       // Now submit the entire dag again\r\n>       // This will add 3 new stages.\r\n>       submit(reduceRdd, Array(0, 1))\r\n>       Thread.sleep(DAGScheduler.RESUBMIT_TIMEOUT * 2)\r\n> \r\n>       // Only the last stage needs to execute, and those tasks - so completed stages should not\r\n>       // change.\r\n>       sc.listenerBus.waitUntilEmpty()\r\n> \r\n>       assert(completedStage === List(0, 2, 1, 2))\r\n> \r\n>       // All other stages should be done, and only the final stage should be waiting\r\n>       assert(scheduler.runningStages.size === 1)\r\n>       assert(scheduler.runningStages.head.id === 5)\r\n>       assert(taskSets.count(_.stageId == 5) === 1)\r\n> \r\n>       complete(taskSets.filter(_.stageId == 5).head, Seq((Success, 1), (Success, 2)))\r\n> \r\n>       sc.listenerBus.waitUntilEmpty()\r\n>       assert(completedStage === List(0, 2, 1, 2, 5))\r\n>     }\r\n>   }\r\n> ```\r\n> \r\n> Would be good to adapt/clean it up for your PR, in addition to the existing test - so that the observed bug does not recur.\r\n> \r\n> (Good news is, this PR works against it :-) )\r\n\r\nThank you for your advice on the UT I wrote, it was very important to me. I will delete my UT. thanks again very much",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1474918516/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1474986959",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1474986959",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1474986959,
    "node_id": "IC_kwDOAQXtWs5X6oPP",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-18T20:40:08Z",
    "updated_at": "2023-03-18T20:41:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Stove-hust To clarify - I meant add this as well (after you had a chance to look at it and clean it up if required - this was from my test setup).\r\nWe should keep the UT you had added - and it is important to test the specific code expectation as it stands today.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1474986959/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1475528785",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1475528785",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1475528785,
    "node_id": "IC_kwDOAQXtWs5X8shR",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-20T02:42:35Z",
    "updated_at": "2023-03-20T02:42:35Z",
    "author_association": "NONE",
    "body": "> @Stove-hust To clarify - I meant add this as well (after you had a chance to look at it and clean it up if required - this was from my test setup). We should keep the UT you had added - and it is important to test the specific code expectation as it stands today.\r\n\r\nSorry, I misunderstood what you meant。😂\r\nI think the UT  written by you is great, can I write your UT in my PR, I will mark this part of UT written by you。\r\nI have one more question, so for this PR we will have two UT， is that right？",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1475528785/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1475538274",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1475538274",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1475538274,
    "node_id": "IC_kwDOAQXtWs5X8u1i",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-20T03:00:09Z",
    "updated_at": "2023-03-20T03:01:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Technically, 3 :-)\r\nThe UT that I added will generate 2 tests - one for push based shuffle and one without.\r\nAnd we have the initial test you added.\r\n\r\nYou dont need to mark it as written by me ! We can include it in your PR - with any changes you make as part of the adding it.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1475538274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1475695975",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1475695975",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1475695975,
    "node_id": "IC_kwDOAQXtWs5X9VVn",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-20T06:34:41Z",
    "updated_at": "2023-03-20T06:34:41Z",
    "author_association": "NONE",
    "body": "> Technically, 3 :-) The UT that I added will generate 2 tests - one for push based shuffle and one without. And we have the initial test you added.\r\n> \r\n> You dont need to mark it as written by me ! We can include it in your PR - with any changes you make as part of the adding it.\r\n\r\nThanks for your answer, I have added all three UTs (including you wrote)",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1475695975/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1476585572",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1476585572",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1476585572,
    "node_id": "IC_kwDOAQXtWs5YAuhk",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-20T16:45:30Z",
    "updated_at": "2023-03-20T16:45:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "The test failure is unrelated to this PR - once the changes above are made, the reexecution should pass",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1476585572/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1478833621",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1478833621",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1478833621,
    "node_id": "IC_kwDOAQXtWs5YJTXV",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T02:23:21Z",
    "updated_at": "2023-03-22T02:23:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Merged to master.\r\nThanks for working on this @Stove-hust !\r\nThanks for the review @otterc :-)",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1478833621/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1478833979",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1478833979",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1478833979,
    "node_id": "IC_kwDOAQXtWs5YJTc7",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T02:24:04Z",
    "updated_at": "2023-03-22T02:24:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "I could not cherry pick this into 3.4 and 3.3 - we should fix for those branches as well IMO.\r\nCan you create a PR against those two branches as well @Stove-hust ? Thanks",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1478833979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1478849048",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1478849048",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1478849048,
    "node_id": "IC_kwDOAQXtWs5YJXIY",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T02:51:48Z",
    "updated_at": "2023-03-22T02:51:48Z",
    "author_association": "NONE",
    "body": "> I could not cherry pick this into 3.4 and 3.3 - we should fix for those branches as well IMO. Can you create a PR against those two branches as well @Stove-hust ? Thanks\r\n\r\nNo problem",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1478849048/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1478905577",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1478905577",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1478905577,
    "node_id": "IC_kwDOAQXtWs5YJk7p",
    "user": {
      "login": "mridulm",
      "id": 1591700,
      "node_id": "MDQ6VXNlcjE1OTE3MDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1591700?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mridulm",
      "html_url": "https://github.com/mridulm",
      "followers_url": "https://api.github.com/users/mridulm/followers",
      "following_url": "https://api.github.com/users/mridulm/following{/other_user}",
      "gists_url": "https://api.github.com/users/mridulm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mridulm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mridulm/subscriptions",
      "organizations_url": "https://api.github.com/users/mridulm/orgs",
      "repos_url": "https://api.github.com/users/mridulm/repos",
      "events_url": "https://api.github.com/users/mridulm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mridulm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T04:32:26Z",
    "updated_at": "2023-03-22T04:33:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is your apache jira id `StoveM` @Stove-hust  ?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1478905577/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1478924572",
    "html_url": "https://github.com/apache/spark/pull/40393#issuecomment-1478924572",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40393",
    "id": 1478924572,
    "node_id": "IC_kwDOAQXtWs5YJpkc",
    "user": {
      "login": "Stove-hust",
      "id": 52523908,
      "node_id": "MDQ6VXNlcjUyNTIzOTA4",
      "avatar_url": "https://avatars.githubusercontent.com/u/52523908?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Stove-hust",
      "html_url": "https://github.com/Stove-hust",
      "followers_url": "https://api.github.com/users/Stove-hust/followers",
      "following_url": "https://api.github.com/users/Stove-hust/following{/other_user}",
      "gists_url": "https://api.github.com/users/Stove-hust/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Stove-hust/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Stove-hust/subscriptions",
      "organizations_url": "https://api.github.com/users/Stove-hust/orgs",
      "repos_url": "https://api.github.com/users/Stove-hust/repos",
      "events_url": "https://api.github.com/users/Stove-hust/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Stove-hust/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-22T05:08:16Z",
    "updated_at": "2023-03-22T05:08:16Z",
    "author_association": "NONE",
    "body": "@mridulm \r\nyep，it`s me\r\nUsername: StoveM\r\nFull name: Fencheng Mei",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1478924572/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
