{
  "url": "https://api.github.com/repos/apache/spark/issues/40646",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/40646/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/40646/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/40646/events",
  "html_url": "https://github.com/apache/spark/pull/40646",
  "id": 1652077613,
  "node_id": "PR_kwDOAQXtWs5NfZVr",
  "number": 40646,
  "title": "[WIP][SPARK-42696]Speed up parquet reading with Java Vector API",
  "user": {
    "login": "jiangjiguang",
    "id": 12368495,
    "node_id": "MDQ6VXNlcjEyMzY4NDk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/12368495?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jiangjiguang",
    "html_url": "https://github.com/jiangjiguang",
    "followers_url": "https://api.github.com/users/jiangjiguang/followers",
    "following_url": "https://api.github.com/users/jiangjiguang/following{/other_user}",
    "gists_url": "https://api.github.com/users/jiangjiguang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jiangjiguang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jiangjiguang/subscriptions",
    "organizations_url": "https://api.github.com/users/jiangjiguang/orgs",
    "repos_url": "https://api.github.com/users/jiangjiguang/repos",
    "events_url": "https://api.github.com/users/jiangjiguang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jiangjiguang/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 1406627200,
      "node_id": "MDU6TGFiZWwxNDA2NjI3MjAw",
      "url": "https://api.github.com/repos/apache/spark/labels/BUILD",
      "name": "BUILD",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 1981471081,
      "node_id": "MDU6TGFiZWwxOTgxNDcxMDgx",
      "url": "https://api.github.com/repos/apache/spark/labels/DOCS",
      "name": "DOCS",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2023-04-03T13:29:40Z",
  "updated_at": "2023-04-10T03:21:02Z",
  "closed_at": "2023-04-10T03:21:01Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/40646",
    "html_url": "https://github.com/apache/spark/pull/40646",
    "diff_url": "https://github.com/apache/spark/pull/40646.diff",
    "patch_url": "https://github.com/apache/spark/pull/40646.patch",
    "merged_at": null
  },
  "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n  7. If you want to add a new configuration, please read the guideline first for naming configurations in\r\n     'core/src/main/scala/org/apache/spark/internal/config/ConfigEntry.scala'.\r\n  8. If you want to add or modify an error type or message, please read the guideline first in\r\n     'core/src/main/resources/error/README.md'.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\nParquet has supported vector read speed up with this PR [Vectorized BytePacker decoder using Java Vector API](https://github.com/apache/parquet-mr/pull/1011)\r\nThe performance gain is 4x ~ 8x according to the parquet microbenchmark\r\nTPC-H(SF100) Q6 has 11% performance increase with Apache Spark integrating parquet vector optimization\r\n\r\n### Why are the changes needed?\r\nThis PR used to support parquet vector optimization\r\n\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\nAdd configuration  spark.sql.parquet.vector512.read.enabled, If true and CPU contains avx512vbmi & avx512_vbmi2 instruction set, parquet decodes using Java Vector API. For Intel CPU, Ice Lake or newer contains the required instruction set.\r\n\r\n\r\n### How was this patch tested?\r\nFor the test case, there are some problems to fix:\r\n1. It is necessary to Parquet-mr community release new java version to use the parquet vector optimization. \r\n2. Parquet Vector optimization does not release default, so users have to build parquet with **mvn clean install -P vector-plugins** manually to get the parquet-encoding-vector-{VERSION}.jar and put it on the {SPARK_HOME}/jars path\r\n3. github doesn't support select runners with specific instruction set. So it is impossible (a self-hosted runner can do it) to verify the optimization on github runners machine.\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\nIf benchmark tests were added, please run the benchmarks in GitHub Actions for the consistent environment, and the instructions could accord to: https://spark.apache.org/developer-tools.html#github-workflow-benchmarks.\r\n-->\r\n",
  "closed_by": {
    "login": "jiangjiguang",
    "id": 12368495,
    "node_id": "MDQ6VXNlcjEyMzY4NDk1",
    "avatar_url": "https://avatars.githubusercontent.com/u/12368495?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/jiangjiguang",
    "html_url": "https://github.com/jiangjiguang",
    "followers_url": "https://api.github.com/users/jiangjiguang/followers",
    "following_url": "https://api.github.com/users/jiangjiguang/following{/other_user}",
    "gists_url": "https://api.github.com/users/jiangjiguang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/jiangjiguang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/jiangjiguang/subscriptions",
    "organizations_url": "https://api.github.com/users/jiangjiguang/orgs",
    "repos_url": "https://api.github.com/users/jiangjiguang/repos",
    "events_url": "https://api.github.com/users/jiangjiguang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/jiangjiguang/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/40646/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/40646/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
