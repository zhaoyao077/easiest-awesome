[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1500823598",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1500823598",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1500823598,
    "node_id": "IC_kwDOAQXtWs5ZdMAu",
    "user": {
      "login": "LuciferYang",
      "id": 1475305,
      "node_id": "MDQ6VXNlcjE0NzUzMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1475305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LuciferYang",
      "html_url": "https://github.com/LuciferYang",
      "followers_url": "https://api.github.com/users/LuciferYang/followers",
      "following_url": "https://api.github.com/users/LuciferYang/following{/other_user}",
      "gists_url": "https://api.github.com/users/LuciferYang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LuciferYang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LuciferYang/subscriptions",
      "organizations_url": "https://api.github.com/users/LuciferYang/orgs",
      "repos_url": "https://api.github.com/users/LuciferYang/repos",
      "events_url": "https://api.github.com/users/LuciferYang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LuciferYang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-08T08:20:00Z",
    "updated_at": "2023-04-08T08:20:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Yikf Can you re-trigger GA?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1500823598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1503400401",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1503400401",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1503400401,
    "node_id": "IC_kwDOAQXtWs5ZnBHR",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-11T13:54:14Z",
    "updated_at": "2023-04-11T13:54:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "The change LGTM. Can we also check other systems like Preso/Trino/Impala and see how they display null values?\r\n\r\ncc @HyukjinKwon @viirya ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1503400401/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1503408659",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1503408659",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1503408659,
    "node_id": "IC_kwDOAQXtWs5ZnDIT",
    "user": {
      "login": "LuciferYang",
      "id": 1475305,
      "node_id": "MDQ6VXNlcjE0NzUzMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1475305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LuciferYang",
      "html_url": "https://github.com/LuciferYang",
      "followers_url": "https://api.github.com/users/LuciferYang/followers",
      "following_url": "https://api.github.com/users/LuciferYang/following{/other_user}",
      "gists_url": "https://api.github.com/users/LuciferYang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LuciferYang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LuciferYang/subscriptions",
      "organizations_url": "https://api.github.com/users/LuciferYang/orgs",
      "repos_url": "https://api.github.com/users/LuciferYang/repos",
      "events_url": "https://api.github.com/users/LuciferYang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LuciferYang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-11T13:58:49Z",
    "updated_at": "2023-04-11T13:58:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The change LGTM. Can we also check other systems like Preso/Trino/Impala and see how they display null values?\r\n\r\n@Yikf Can you help check  Preso/Trino ? Also check PostgreSQL?\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1503408659/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1504461118",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1504461118",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1504461118,
    "node_id": "IC_kwDOAQXtWs5ZrEE-",
    "user": {
      "login": "Yikf",
      "id": 51110188,
      "node_id": "MDQ6VXNlcjUxMTEwMTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51110188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Yikf",
      "html_url": "https://github.com/Yikf",
      "followers_url": "https://api.github.com/users/Yikf/followers",
      "following_url": "https://api.github.com/users/Yikf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Yikf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Yikf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Yikf/subscriptions",
      "organizations_url": "https://api.github.com/users/Yikf/orgs",
      "repos_url": "https://api.github.com/users/Yikf/repos",
      "events_url": "https://api.github.com/users/Yikf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Yikf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-12T02:31:52Z",
    "updated_at": "2023-04-12T02:32:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The change LGTM. Can we also check other systems like Preso/Trino/Impala and see how they display null values?\r\n> \r\n> cc @HyukjinKwon @viirya\r\n\r\n\r\n> > The change LGTM. Can we also check other systems like Preso/Trino/Impala and see how they display null values?\r\n> \r\n> @Yikf Can you help check Preso/Trino ? Also check PostgreSQL?\r\n\r\nSure, As following,\r\n**Trino**\r\n```shell\r\ntrino> select ARRAY[1, null];\r\n   _col0\r\n-----------\r\n [1, NULL]\r\n(1 row)\r\n\r\nQuery 20230412_023104_00007_unnu6, FINISHED, 1 node\r\nSplits: 1 total, 1 done (100.00%)\r\n0.03 [0 rows, 0B] [0 rows/s, 0B/s]\r\n\r\ntrino> select null;\r\n _col0\r\n-------\r\n NULL\r\n(1 row)\r\n\r\nQuery 20230412_023108_00008_unnu6, FINISHED, 1 node\r\nSplits: 1 total, 1 done (100.00%)\r\n0.07 [0 rows, 0B] [0 rows/s, 0B/s]\r\n```\r\n**PostgreSQL**\r\n```shell\r\npostgres=# select array[1, null];\r\n  array\r\n----------\r\n {1,NULL}\r\n(1 row)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1504461118/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1506228355",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1506228355",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1506228355,
    "node_id": "IC_kwDOAQXtWs5ZxziD",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-13T02:15:12Z",
    "updated_at": "2023-04-13T02:15:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "thanks, merging to master!",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1506228355/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517271113",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517271113",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517271113,
    "node_id": "IC_kwDOAQXtWs5ab7hJ",
    "user": {
      "login": "sadikovi",
      "id": 7788766,
      "node_id": "MDQ6VXNlcjc3ODg3NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7788766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sadikovi",
      "html_url": "https://github.com/sadikovi",
      "followers_url": "https://api.github.com/users/sadikovi/followers",
      "following_url": "https://api.github.com/users/sadikovi/following{/other_user}",
      "gists_url": "https://api.github.com/users/sadikovi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sadikovi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sadikovi/subscriptions",
      "organizations_url": "https://api.github.com/users/sadikovi/orgs",
      "repos_url": "https://api.github.com/users/sadikovi/repos",
      "events_url": "https://api.github.com/users/sadikovi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sadikovi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T05:12:51Z",
    "updated_at": "2023-04-21T05:17:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually, this is a breaking change for CAST expression. It affects the string representation of complex types and not just `df.show` which could cause issues when comparing the string representation of a row:\r\n\r\n```sql\r\nselect cast(struct(null) as string) as c0, null as c1\r\n```\r\n\r\n```\r\n-- df.show()\r\n+------+----+\r\n|    c0|  c1|\r\n+------+----+\r\n|{NULL}|NULL|\r\n+------+----+\r\n\r\n-- df.collect.toList\r\nList([{NULL},null])\r\n```\r\n\r\nIt also affects CSV writes:\r\n```scala\r\nval df = spark.sql(\r\n  \"\"\"\r\n  select cast(array(1,2) as string) as c0, 1 as c1\r\n  union all\r\n  select cast(array(3,null) as string) as c0, null as c1\r\n  \"\"\"\r\n).coalesce(1)\r\ndf.write.csv(\"file:/tmp/ivan_test.csv\")\r\n```\r\n\r\nBefore this PR:\r\n```\r\n\"[1, 2]\",1\r\n\"[3, null]\",\r\n```\r\n\r\nAfter this PR:\r\n```\r\n\"[1, 2]\",1\r\n\"[3, NULL]\",\r\n```\r\n\r\nAnd there is no option to re-enable null format.\r\n\r\nOn a broader side of things: It would be good to clarify why spark-sql shell is expected to be visually compatible with spark-shell, those are two different REPLs with their own ways of displaying data. For example, we don't display a table the same way in those REPLs.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517271113/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517271441",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517271441",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517271441,
    "node_id": "IC_kwDOAQXtWs5ab7mR",
    "user": {
      "login": "sadikovi",
      "id": 7788766,
      "node_id": "MDQ6VXNlcjc3ODg3NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7788766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sadikovi",
      "html_url": "https://github.com/sadikovi",
      "followers_url": "https://api.github.com/users/sadikovi/followers",
      "following_url": "https://api.github.com/users/sadikovi/following{/other_user}",
      "gists_url": "https://api.github.com/users/sadikovi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sadikovi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sadikovi/subscriptions",
      "organizations_url": "https://api.github.com/users/sadikovi/orgs",
      "repos_url": "https://api.github.com/users/sadikovi/repos",
      "events_url": "https://api.github.com/users/sadikovi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sadikovi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T05:13:22Z",
    "updated_at": "2023-04-21T05:13:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "cc @cloud-fan @dongjoon-hyun ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517271441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517277895",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517277895",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517277895,
    "node_id": "IC_kwDOAQXtWs5ab9LH",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T05:22:59Z",
    "updated_at": "2023-04-21T05:22:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sadikovi CSV does not accept struct/array/map columns, your example generates a string column and writes it to CSV. That said, any behavior change of that \"string generation\" function will change the value we write to CSV, but I wouldn't call it a CSV behavior change.\r\n\r\nIt's intentional that the cast struct/array/map to string behavior is changed w.r.t. nulls. If third-party libraries rely on this behavior, then we need to revisit this PR.\r\n\r\nBTW, I think PR description should not say it's for consistency with spark-sql shell. `df.show` displays top-level null value as `NULL`, but inner field null value as `null`. This is the major motivation of the fix.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517277895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517305453",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517305453",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517305453,
    "node_id": "IC_kwDOAQXtWs5acD5t",
    "user": {
      "login": "sadikovi",
      "id": 7788766,
      "node_id": "MDQ6VXNlcjc3ODg3NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7788766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sadikovi",
      "html_url": "https://github.com/sadikovi",
      "followers_url": "https://api.github.com/users/sadikovi/followers",
      "following_url": "https://api.github.com/users/sadikovi/following{/other_user}",
      "gists_url": "https://api.github.com/users/sadikovi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sadikovi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sadikovi/subscriptions",
      "organizations_url": "https://api.github.com/users/sadikovi/orgs",
      "repos_url": "https://api.github.com/users/sadikovi/repos",
      "events_url": "https://api.github.com/users/sadikovi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sadikovi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T06:02:07Z",
    "updated_at": "2023-04-21T06:02:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just tried without the change and df.show() seems to return correct results: \r\n```scala\r\nspark.sql(\r\n  \"\"\"\r\n  select struct('a'), map('a', 1), array(1, 2), 'a'\r\n  union all\r\n  select struct(null), map('a', null), array(null, null), null \r\n  \"\"\").show()\r\n```\r\n\r\n```\r\n+---------+-----------+------------+----+\r\n|struct(a)|  map(a, 1)| array(1, 2)|   a|\r\n+---------+-----------+------------+----+\r\n|      {a}|   {a -> 1}|      [1, 2]|   a|\r\n|   {null}|{a -> null}|[null, null]|null|\r\n+---------+-----------+------------+----+\r\n```\r\n\r\nCould you provide an example of inconsistency in df.show() that this PR addresses?\r\n\r\nThe reason I brought the CSV example is because that is typically how users would write structs/arrays/maps to a CSV file, they would transform that to a string, potentially via CAST. That is why I think this is a behaviour change in writing a CSV file.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517305453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517330580",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517330580",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517330580,
    "node_id": "IC_kwDOAQXtWs5acKCU",
    "user": {
      "login": "Yikf",
      "id": 51110188,
      "node_id": "MDQ6VXNlcjUxMTEwMTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51110188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Yikf",
      "html_url": "https://github.com/Yikf",
      "followers_url": "https://api.github.com/users/Yikf/followers",
      "following_url": "https://api.github.com/users/Yikf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Yikf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Yikf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Yikf/subscriptions",
      "organizations_url": "https://api.github.com/users/Yikf/orgs",
      "repos_url": "https://api.github.com/users/Yikf/repos",
      "events_url": "https://api.github.com/users/Yikf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Yikf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T06:28:13Z",
    "updated_at": "2023-04-21T06:28:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> BTW, I think PR description should not say it's for consistency with spark-sql shell. `df.show` displays top-level null value as `NULL`, but inner field null value as `null`. This is the major motivation of the fix.\r\n\r\nActually, previously, the top-level is consistent with the inner null display with `null`. This PR mainly thinks that the mainstream database uses `NULL` instead of `null` when displaying null, and `NULL` is a better nice string representation.\r\n\r\nIf it's affecting something else, I think we should look at it again, sorry ~ : )\r\n\r\n\r\n> For example, we don't display a table the same way in those REPLs.\r\n\r\nBTW, For apache spark, spark-sql and spark-shell are two different REPLs, but they are only user interaction interfaces. Shouldn't the displayed content be the same? At least in terms of the result set.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517330580/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517335589",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517335589",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517335589,
    "node_id": "IC_kwDOAQXtWs5acLQl",
    "user": {
      "login": "Yikf",
      "id": 51110188,
      "node_id": "MDQ6VXNlcjUxMTEwMTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51110188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Yikf",
      "html_url": "https://github.com/Yikf",
      "followers_url": "https://api.github.com/users/Yikf/followers",
      "following_url": "https://api.github.com/users/Yikf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Yikf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Yikf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Yikf/subscriptions",
      "organizations_url": "https://api.github.com/users/Yikf/orgs",
      "repos_url": "https://api.github.com/users/Yikf/repos",
      "events_url": "https://api.github.com/users/Yikf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Yikf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T06:33:59Z",
    "updated_at": "2023-04-21T06:33:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> which could cause issues when comparing the string representation of a row:\r\n\r\nSorry, I'm not sure what that means, does it mean compared to what was written before this PR? Any problems if cast(null as string) with NULL, I see that trino is also NULL\r\n``` SQL\r\ntrino> select cast(null as varchar) as c0, null as c1;\r\n  c0  |  c1\r\n------+------\r\n NULL | NULL\r\n(1 row)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517335589/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517376514",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517376514",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517376514,
    "node_id": "IC_kwDOAQXtWs5acVQC",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T07:14:11Z",
    "updated_at": "2023-04-21T07:14:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sadikovi Sorry I was wrong, `Dataset.show` also explicitly prints null as `null` before this PR.\r\n\r\nBeing consistent with other databases is good, but if people rely on the cast behavior to write struct/array/map to CSV, then it's more important to not break it.\r\n\r\nShall we revert this PR then? We can change spark-sql shell to print `null` to be consistent with `df.show` instead.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517376514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517405789",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517405789",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517405789,
    "node_id": "IC_kwDOAQXtWs5accZd",
    "user": {
      "login": "Yikf",
      "id": 51110188,
      "node_id": "MDQ6VXNlcjUxMTEwMTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51110188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Yikf",
      "html_url": "https://github.com/Yikf",
      "followers_url": "https://api.github.com/users/Yikf/followers",
      "following_url": "https://api.github.com/users/Yikf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Yikf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Yikf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Yikf/subscriptions",
      "organizations_url": "https://api.github.com/users/Yikf/orgs",
      "repos_url": "https://api.github.com/users/Yikf/repos",
      "events_url": "https://api.github.com/users/Yikf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Yikf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T07:38:48Z",
    "updated_at": "2023-04-21T07:38:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "+1 for the revert.\r\n\r\nBTW, Should spark-sql keep consistent with df.show, this also seems to break a lot of things, since spark-sql previously used hiveResultString, not only null display.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517405789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517417915",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517417915",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517417915,
    "node_id": "IC_kwDOAQXtWs5acfW7",
    "user": {
      "login": "cloud-fan",
      "id": 3182036,
      "node_id": "MDQ6VXNlcjMxODIwMzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cloud-fan",
      "html_url": "https://github.com/cloud-fan",
      "followers_url": "https://api.github.com/users/cloud-fan/followers",
      "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
      "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
      "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
      "repos_url": "https://api.github.com/users/cloud-fan/repos",
      "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T07:49:02Z",
    "updated_at": "2023-04-21T07:49:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "If people programmatically parse the output of spark-sql shell, then we shouldn't change it. If it's only for display and consumed by humans, I think it's OK to change.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517417915/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517427635",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1517427635",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1517427635,
    "node_id": "IC_kwDOAQXtWs5achuz",
    "user": {
      "login": "Yikf",
      "id": 51110188,
      "node_id": "MDQ6VXNlcjUxMTEwMTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/51110188?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Yikf",
      "html_url": "https://github.com/Yikf",
      "followers_url": "https://api.github.com/users/Yikf/followers",
      "following_url": "https://api.github.com/users/Yikf/following{/other_user}",
      "gists_url": "https://api.github.com/users/Yikf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Yikf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Yikf/subscriptions",
      "organizations_url": "https://api.github.com/users/Yikf/orgs",
      "repos_url": "https://api.github.com/users/Yikf/repos",
      "events_url": "https://api.github.com/users/Yikf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Yikf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T07:57:41Z",
    "updated_at": "2023-04-21T07:57:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "> If people programmatically parse the output of spark-sql shell\r\n\r\nI want to keep it the way it is. Look at what other people think.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517427635/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1518270247",
    "html_url": "https://github.com/apache/spark/pull/40699#issuecomment-1518270247",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40699",
    "id": 1518270247,
    "node_id": "IC_kwDOAQXtWs5afvcn",
    "user": {
      "login": "sadikovi",
      "id": 7788766,
      "node_id": "MDQ6VXNlcjc3ODg3NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7788766?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sadikovi",
      "html_url": "https://github.com/sadikovi",
      "followers_url": "https://api.github.com/users/sadikovi/followers",
      "following_url": "https://api.github.com/users/sadikovi/following{/other_user}",
      "gists_url": "https://api.github.com/users/sadikovi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sadikovi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sadikovi/subscriptions",
      "organizations_url": "https://api.github.com/users/sadikovi/orgs",
      "repos_url": "https://api.github.com/users/sadikovi/repos",
      "events_url": "https://api.github.com/users/sadikovi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sadikovi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T19:52:29Z",
    "updated_at": "2023-04-23T23:38:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "To be honest, I don't understand why spark-sql shell is expected to be consistent with spark-shell or pyspark shell. Can someone elaborate? I can see making spark-sql shell consistent with Presto/Trino/MySQL/Postgres, etc. but I don't understand why Scala REPL should be visually consistent with SQL terminal in terms of displaying results - they serve different purposes.\r\n\r\nIf you would like to have a consistent visual behaviour for NULLs/nulls, it is also fine just as long as it does not break other features like Cast or `collect.toString`. Maybe we could simply add a conversion method to display values in a DataFrame in whatever format we need when calling `.show` instead of changing Cast. In fact, we can refactor it into a separate class and reuse it in spark-sql and spark-shell. \r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1518270247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
