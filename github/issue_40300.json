{
  "url": "https://api.github.com/repos/apache/spark/issues/40300",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/40300/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/40300/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/40300/events",
  "html_url": "https://github.com/apache/spark/pull/40300",
  "id": 1611745463,
  "node_id": "PR_kwDOAQXtWs5LYtHL",
  "number": 40300,
  "title": "[SPARK-42683] Automatically rename conflicting metadata columns",
  "user": {
    "login": "ryan-johnson-databricks",
    "id": 79601771,
    "node_id": "MDQ6VXNlcjc5NjAxNzcx",
    "avatar_url": "https://avatars.githubusercontent.com/u/79601771?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ryan-johnson-databricks",
    "html_url": "https://github.com/ryan-johnson-databricks",
    "followers_url": "https://api.github.com/users/ryan-johnson-databricks/followers",
    "following_url": "https://api.github.com/users/ryan-johnson-databricks/following{/other_user}",
    "gists_url": "https://api.github.com/users/ryan-johnson-databricks/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ryan-johnson-databricks/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ryan-johnson-databricks/subscriptions",
    "organizations_url": "https://api.github.com/users/ryan-johnson-databricks/orgs",
    "repos_url": "https://api.github.com/users/ryan-johnson-databricks/repos",
    "events_url": "https://api.github.com/users/ryan-johnson-databricks/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ryan-johnson-databricks/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 4556440342,
      "node_id": "LA_kwDOAQXtWs8AAAABD5XDFg",
      "url": "https://api.github.com/repos/apache/spark/labels/CONNECT",
      "name": "CONNECT",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2023-03-06T16:05:28Z",
  "updated_at": "2023-03-30T09:09:32Z",
  "closed_at": "2023-03-30T09:09:32Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/40300",
    "html_url": "https://github.com/apache/spark/pull/40300",
    "diff_url": "https://github.com/apache/spark/pull/40300.diff",
    "patch_url": "https://github.com/apache/spark/pull/40300.patch",
    "merged_at": null
  },
  "body": "### What changes were proposed in this pull request?\r\n\r\nToday, if a data source already has an output column called `_metadata`, queries cannot access the file-source metadata column that normally carries that name. \r\n\r\nThis PR addresses the issue by automatically renaming any metadata column whose name conflicts with an output column. We also introduce a new dataframe method, `metadataColumn`, which mirrors the existing `col` method but (a) only works for metadata columns; and (b) will reliably find metadata columns even if they were renamed due to a name conflict.\r\n\r\n### Why are the changes needed?\r\n\r\nToday, it's too easy to lose access to metadata columns if the user's table happened to have the wrong column name. This sharp edge limits the utility of metadata columns in general, because the feature doesn't work reliably for all table schemas.\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\n\r\nSuppose a table defines a `StringType` column called `_metadata`. Today, the metadata column is not accessible, and the example below would return the table's string column:\r\n```scala\r\ndf.select(\"_metadata\")\r\n```\r\n\r\nWith the change, the original query still returns a string, but the file-source metadata column can be found and accessed by invoking `DataSet.metadataColumn`:\r\n```scala\r\ndf.withColumn(\"m\", df.metadataColumn(\"_metadata\"))\r\n```\r\n\r\nNOTE: Adding a SQL user surface for accessing metadata columns with conflicting names is out of scope for this pull request and can be addressed as future work.\r\n\r\n### How was this patch tested?\r\n\r\nNew unit tests added.",
  "closed_by": {
    "login": "cloud-fan",
    "id": 3182036,
    "node_id": "MDQ6VXNlcjMxODIwMzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cloud-fan",
    "html_url": "https://github.com/cloud-fan",
    "followers_url": "https://api.github.com/users/cloud-fan/followers",
    "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
    "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
    "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
    "repos_url": "https://api.github.com/users/cloud-fan/repos",
    "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/40300/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/40300/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
