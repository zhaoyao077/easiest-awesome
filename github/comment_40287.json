[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1455366786",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1455366786",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1455366786,
    "node_id": "IC_kwDOAQXtWs5WvyKC",
    "user": {
      "login": "hvanhovell",
      "id": 9616802,
      "node_id": "MDQ6VXNlcjk2MTY4MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9616802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hvanhovell",
      "html_url": "https://github.com/hvanhovell",
      "followers_url": "https://api.github.com/users/hvanhovell/followers",
      "following_url": "https://api.github.com/users/hvanhovell/following{/other_user}",
      "gists_url": "https://api.github.com/users/hvanhovell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hvanhovell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hvanhovell/subscriptions",
      "organizations_url": "https://api.github.com/users/hvanhovell/orgs",
      "repos_url": "https://api.github.com/users/hvanhovell/repos",
      "events_url": "https://api.github.com/users/hvanhovell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hvanhovell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T03:07:02Z",
    "updated_at": "2023-03-06T03:07:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@HyukjinKwon @zhengruifeng the rationale for this change is that analyzer takes care of making lambda variables unique.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1455366786/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1455384317",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1455384317",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1455384317,
    "node_id": "IC_kwDOAQXtWs5Wv2b9",
    "user": {
      "login": "beliefer",
      "id": 8486025,
      "node_id": "MDQ6VXNlcjg0ODYwMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "html_url": "https://github.com/beliefer",
      "followers_url": "https://api.github.com/users/beliefer/followers",
      "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
      "organizations_url": "https://api.github.com/users/beliefer/orgs",
      "repos_url": "https://api.github.com/users/beliefer/repos",
      "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beliefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T03:25:22Z",
    "updated_at": "2023-03-06T03:42:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hvanhovell After my test, `python/run-tests --testnames 'pyspark.sql.tests.test_functions'` will not passed.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1455384317/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1455388960",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1455388960",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1455388960,
    "node_id": "IC_kwDOAQXtWs5Wv3kg",
    "user": {
      "login": "zhengruifeng",
      "id": 7322292,
      "node_id": "MDQ6VXNlcjczMjIyOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7322292?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhengruifeng",
      "html_url": "https://github.com/zhengruifeng",
      "followers_url": "https://api.github.com/users/zhengruifeng/followers",
      "following_url": "https://api.github.com/users/zhengruifeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhengruifeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhengruifeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhengruifeng/subscriptions",
      "organizations_url": "https://api.github.com/users/zhengruifeng/orgs",
      "repos_url": "https://api.github.com/users/zhengruifeng/repos",
      "events_url": "https://api.github.com/users/zhengruifeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhengruifeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T03:34:50Z",
    "updated_at": "2023-03-06T03:34:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "I guess we will need to rewrite the lamda function in spark connect planner.\r\n\r\ncc @ueshin as well, since existing implementation follows the fix in https://github.com/apache/spark/pull/32523",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1455388960/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1455390728",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1455390728",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1455390728,
    "node_id": "IC_kwDOAQXtWs5Wv4AI",
    "user": {
      "login": "beliefer",
      "id": 8486025,
      "node_id": "MDQ6VXNlcjg0ODYwMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "html_url": "https://github.com/beliefer",
      "followers_url": "https://api.github.com/users/beliefer/followers",
      "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
      "organizations_url": "https://api.github.com/users/beliefer/orgs",
      "repos_url": "https://api.github.com/users/beliefer/repos",
      "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beliefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T03:38:35Z",
    "updated_at": "2023-03-06T03:38:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "![image](https://user-images.githubusercontent.com/8486025/223014232-bf9b26ee-d0e8-4de4-a8fe-2d252813ac4d.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1455390728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1456026258",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1456026258",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1456026258,
    "node_id": "IC_kwDOAQXtWs5WyTKS",
    "user": {
      "login": "beliefer",
      "id": 8486025,
      "node_id": "MDQ6VXNlcjg0ODYwMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "html_url": "https://github.com/beliefer",
      "followers_url": "https://api.github.com/users/beliefer/followers",
      "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
      "organizations_url": "https://api.github.com/users/beliefer/orgs",
      "repos_url": "https://api.github.com/users/beliefer/repos",
      "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beliefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T12:14:12Z",
    "updated_at": "2023-03-06T12:14:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "It seems pyspark supports the nested lambda variables and two PR fix the issue.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1456026258/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1456054467",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1456054467",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1456054467,
    "node_id": "IC_kwDOAQXtWs5WyaDD",
    "user": {
      "login": "hvanhovell",
      "id": 9616802,
      "node_id": "MDQ6VXNlcjk2MTY4MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9616802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hvanhovell",
      "html_url": "https://github.com/hvanhovell",
      "followers_url": "https://api.github.com/users/hvanhovell/followers",
      "following_url": "https://api.github.com/users/hvanhovell/following{/other_user}",
      "gists_url": "https://api.github.com/users/hvanhovell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hvanhovell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hvanhovell/subscriptions",
      "organizations_url": "https://api.github.com/users/hvanhovell/orgs",
      "repos_url": "https://api.github.com/users/hvanhovell/repos",
      "events_url": "https://api.github.com/users/hvanhovell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hvanhovell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-06T12:34:04Z",
    "updated_at": "2023-03-06T12:34:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@beliefer scala does support nested lambda variables as well, and they actually work. So either (my) testing on the scala side is incomplete (which might well be the case), or something weird is going on here.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1456054467/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1457418420",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1457418420",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1457418420,
    "node_id": "IC_kwDOAQXtWs5W3nC0",
    "user": {
      "login": "beliefer",
      "id": 8486025,
      "node_id": "MDQ6VXNlcjg0ODYwMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "html_url": "https://github.com/beliefer",
      "followers_url": "https://api.github.com/users/beliefer/followers",
      "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
      "organizations_url": "https://api.github.com/users/beliefer/orgs",
      "repos_url": "https://api.github.com/users/beliefer/repos",
      "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beliefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-07T02:44:46Z",
    "updated_at": "2023-03-07T02:44:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hvanhovell Scala also uses `UnresolvedNamedLambdaVariable.freshVarName(\"x\")` to get the unique names. see: \r\nhttps://github.com/apache/spark/blob/201e08c03a31c763e3120540ac1b1ca8ef252e6b/sql/core/src/main/scala/org/apache/spark/sql/functions.scala#L4096",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1457418420/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1457433571",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1457433571",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1457433571,
    "node_id": "IC_kwDOAQXtWs5W3qvj",
    "user": {
      "login": "hvanhovell",
      "id": 9616802,
      "node_id": "MDQ6VXNlcjk2MTY4MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9616802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hvanhovell",
      "html_url": "https://github.com/hvanhovell",
      "followers_url": "https://api.github.com/users/hvanhovell/followers",
      "following_url": "https://api.github.com/users/hvanhovell/following{/other_user}",
      "gists_url": "https://api.github.com/users/hvanhovell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hvanhovell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hvanhovell/subscriptions",
      "organizations_url": "https://api.github.com/users/hvanhovell/orgs",
      "repos_url": "https://api.github.com/users/hvanhovell/repos",
      "events_url": "https://api.github.com/users/hvanhovell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hvanhovell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-07T03:01:14Z",
    "updated_at": "2023-03-07T03:01:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@beliefer here is the thing. When this was designed it was mainly aimed at sql, and there we definitely do not generate unique names in lambda functions either. This is all done in the analyzer. We should be able to follow the same path.\r\n\r\nDo you happen to know if test failing for python also fail for scala?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1457433571/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1458109080",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1458109080",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1458109080,
    "node_id": "IC_kwDOAQXtWs5W6PqY",
    "user": {
      "login": "beliefer",
      "id": 8486025,
      "node_id": "MDQ6VXNlcjg0ODYwMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "html_url": "https://github.com/beliefer",
      "followers_url": "https://api.github.com/users/beliefer/followers",
      "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
      "organizations_url": "https://api.github.com/users/beliefer/orgs",
      "repos_url": "https://api.github.com/users/beliefer/repos",
      "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beliefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-07T12:44:05Z",
    "updated_at": "2023-03-07T12:44:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @beliefer here is the thing. When this was designed it was mainly aimed at sql, and there we definitely do not generate unique names in lambda functions either. This is all done in the analyzer. We should be able to follow the same path.\r\n>\r\n\r\nIt seems only the lambda functions in SQL will be transformed with analyzer. But the scala, pyspark API will not through analyzer.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1458109080/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1458116337",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1458116337",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1458116337,
    "node_id": "IC_kwDOAQXtWs5W6Rbx",
    "user": {
      "login": "hvanhovell",
      "id": 9616802,
      "node_id": "MDQ6VXNlcjk2MTY4MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9616802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hvanhovell",
      "html_url": "https://github.com/hvanhovell",
      "followers_url": "https://api.github.com/users/hvanhovell/followers",
      "following_url": "https://api.github.com/users/hvanhovell/following{/other_user}",
      "gists_url": "https://api.github.com/users/hvanhovell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hvanhovell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hvanhovell/subscriptions",
      "organizations_url": "https://api.github.com/users/hvanhovell/orgs",
      "repos_url": "https://api.github.com/users/hvanhovell/repos",
      "events_url": "https://api.github.com/users/hvanhovell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hvanhovell/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-07T12:49:53Z",
    "updated_at": "2023-03-07T12:49:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ehhhh... SQL/scala/Python all use the analyzer; they are all just frontends to the same thing.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1458116337/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1458193681",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1458193681",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1458193681,
    "node_id": "IC_kwDOAQXtWs5W6kUR",
    "user": {
      "login": "beliefer",
      "id": 8486025,
      "node_id": "MDQ6VXNlcjg0ODYwMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "html_url": "https://github.com/beliefer",
      "followers_url": "https://api.github.com/users/beliefer/followers",
      "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
      "organizations_url": "https://api.github.com/users/beliefer/orgs",
      "repos_url": "https://api.github.com/users/beliefer/repos",
      "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beliefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-07T13:41:18Z",
    "updated_at": "2023-03-07T13:48:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Ehhhh... SQL/scala/Python all use the analyzer; they are all just frontends to the same thing.\r\n\r\nI found the reason. Although the scala API use analyzer too. `object ResolveLambdaVariables extends Rule[LogicalPlan]` can't fix the issue.\r\n\r\nIf I removed the` UnresolvedNamedLambdaVariable.freshVarName(...)`\r\n\r\n![image](https://user-images.githubusercontent.com/8486025/223439632-cd7dcd93-c60d-4e7c-844b-fddb89d00bec.png)\r\n\r\nand test the case, see at: https://github.com/apache/spark/blob/2e7207f96e1ff848def135de63f63bcda7402517/sql/core/src/test/scala/org/apache/spark/sql/DataFrameFunctionsSuite.scala#L5250\r\n![image](https://user-images.githubusercontent.com/8486025/223439443-efa6346d-a829-4dd2-a430-df5f24fbd819.png)\r\n\r\nThe related PR.\r\nhttps://github.com/apache/spark/pull/32424",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1458193681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1459329942",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1459329942",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1459329942,
    "node_id": "IC_kwDOAQXtWs5W-5uW",
    "user": {
      "login": "beliefer",
      "id": 8486025,
      "node_id": "MDQ6VXNlcjg0ODYwMjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8486025?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/beliefer",
      "html_url": "https://github.com/beliefer",
      "followers_url": "https://api.github.com/users/beliefer/followers",
      "following_url": "https://api.github.com/users/beliefer/following{/other_user}",
      "gists_url": "https://api.github.com/users/beliefer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/beliefer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/beliefer/subscriptions",
      "organizations_url": "https://api.github.com/users/beliefer/orgs",
      "repos_url": "https://api.github.com/users/beliefer/repos",
      "events_url": "https://api.github.com/users/beliefer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/beliefer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-08T03:34:48Z",
    "updated_at": "2023-03-08T03:34:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hvanhovell Do we still need this change ?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1459329942/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1459594072",
    "html_url": "https://github.com/apache/spark/pull/40287#issuecomment-1459594072",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40287",
    "id": 1459594072,
    "node_id": "IC_kwDOAQXtWs5W_6NY",
    "user": {
      "login": "zhengruifeng",
      "id": 7322292,
      "node_id": "MDQ6VXNlcjczMjIyOTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7322292?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhengruifeng",
      "html_url": "https://github.com/zhengruifeng",
      "followers_url": "https://api.github.com/users/zhengruifeng/followers",
      "following_url": "https://api.github.com/users/zhengruifeng/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhengruifeng/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhengruifeng/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhengruifeng/subscriptions",
      "organizations_url": "https://api.github.com/users/zhengruifeng/orgs",
      "repos_url": "https://api.github.com/users/zhengruifeng/repos",
      "events_url": "https://api.github.com/users/zhengruifeng/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhengruifeng/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-08T06:04:25Z",
    "updated_at": "2023-03-08T06:04:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "If the nested lambda issue also exists in the Scala Client, do we need to fix it in the same way?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1459594072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
