[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1546358692",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1546358692",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1546358692,
    "node_id": "IC_kwDOAQXtWs5cK4-k",
    "user": {
      "login": "srielau",
      "id": 3514644,
      "node_id": "MDQ6VXNlcjM1MTQ2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srielau",
      "html_url": "https://github.com/srielau",
      "followers_url": "https://api.github.com/users/srielau/followers",
      "following_url": "https://api.github.com/users/srielau/following{/other_user}",
      "gists_url": "https://api.github.com/users/srielau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srielau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srielau/subscriptions",
      "organizations_url": "https://api.github.com/users/srielau/orgs",
      "repos_url": "https://api.github.com/users/srielau/repos",
      "events_url": "https://api.github.com/users/srielau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srielau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-12T22:03:13Z",
    "updated_at": "2023-05-12T22:03:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "@cloud-fan @gengliangwang @dtenedor Aside from my atrocious Scala skills, the code still needs comments. But It think it's ready for a review.\r\n ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1546358692/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 1,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1548631061",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1548631061",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1548631061,
    "node_id": "IC_kwDOAQXtWs5cTjwV",
    "user": {
      "login": "gengliangwang",
      "id": 1097932,
      "node_id": "MDQ6VXNlcjEwOTc5MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1097932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gengliangwang",
      "html_url": "https://github.com/gengliangwang",
      "followers_url": "https://api.github.com/users/gengliangwang/followers",
      "following_url": "https://api.github.com/users/gengliangwang/following{/other_user}",
      "gists_url": "https://api.github.com/users/gengliangwang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gengliangwang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gengliangwang/subscriptions",
      "organizations_url": "https://api.github.com/users/gengliangwang/orgs",
      "repos_url": "https://api.github.com/users/gengliangwang/repos",
      "events_url": "https://api.github.com/users/gengliangwang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gengliangwang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-15T21:41:31Z",
    "updated_at": "2023-05-15T21:44:46Z",
    "author_association": "MEMBER",
    "body": "@srielau I am rethinking the requirement after reading the related docs (especially [the doc from snowflake](https://docs.snowflake.com/en/sql-reference/identifier-literal))\r\nSo how important it is to support all kinds of expressions(e.g string concats) within the `IDENTIFIER()` clause? It would be much easier if we limit the requirement only accepts the following:\r\n* quoted identifier\r\n* session variable\r\n\r\nSo, instead of \r\n```\r\nidentifierReference\r\n    : IDENTIFIER_KW LEFT_PAREN expression RIGHT_PAREN\r\n    | multipartIdentifier\r\n    ;\r\n```\r\nWe can make it\r\n```\r\nidentifierReference\r\n    : IDENTIFIER_KW LEFT_PAREN '\\'' multipartIdentifier  '\\'' RIGHT_PAREN    #singleQuotedIdentifier\r\n    | IDENTIFIER_KW LEFT_PAREN '\"' multipartIdentifier  '\"' RIGHT_PAREN      #doubleQuotedIdentifier\r\n    | IDENTIFIER_KW LEFT_PAREN '$' multipartIdentifier RIGHT_PAREN           #sessionvariableIdentifier\r\n    | multipartIdentifier                                                    #simpleMultipartIdentifier\r\n    ;\r\n```\r\nAnd this requires much less changes in the parser and analyzer.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1548631061/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1550353750",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1550353750",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1550353750,
    "node_id": "IC_kwDOAQXtWs5caIVW",
    "user": {
      "login": "srielau",
      "id": 3514644,
      "node_id": "MDQ6VXNlcjM1MTQ2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srielau",
      "html_url": "https://github.com/srielau",
      "followers_url": "https://api.github.com/users/srielau/followers",
      "following_url": "https://api.github.com/users/srielau/following{/other_user}",
      "gists_url": "https://api.github.com/users/srielau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srielau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srielau/subscriptions",
      "organizations_url": "https://api.github.com/users/srielau/orgs",
      "repos_url": "https://api.github.com/users/srielau/repos",
      "events_url": "https://api.github.com/users/srielau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srielau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-16T20:58:50Z",
    "updated_at": "2023-05-16T20:58:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @srielau I am rethinking the requirement after reading the related docs (especially [the doc from snowflake](https://docs.snowflake.com/en/sql-reference/identifier-literal)) So how important it is to support all kinds of expressions(e.g string concats) within the `IDENTIFIER()` clause? It would be much easier if we limit the requirement only accepts the following:\r\n> \r\n> * quoted identifier\r\n> * session variable\r\n> \r\n> So, instead of\r\n> \r\n> ```\r\n> identifierReference\r\n>     : IDENTIFIER_KW LEFT_PAREN expression RIGHT_PAREN\r\n>     | multipartIdentifier\r\n>     ;\r\n> ```\r\n> \r\n> We can make it\r\n> \r\n> ```\r\n> identifierReference\r\n>     : IDENTIFIER_KW LEFT_PAREN '\\'' multipartIdentifier  '\\'' RIGHT_PAREN    #singleQuotedIdentifier\r\n>     | IDENTIFIER_KW LEFT_PAREN '\"' multipartIdentifier  '\"' RIGHT_PAREN      #doubleQuotedIdentifier\r\n>     | IDENTIFIER_KW LEFT_PAREN '$' multipartIdentifier RIGHT_PAREN           #sessionvariableIdentifier\r\n>     | multipartIdentifier                                                    #simpleMultipartIdentifier\r\n>     ;\r\n> ```\r\n> \r\n> And this requires much less changes in the parser and analyzer.\r\nThis is similar to what I tried in my previous attempt: https://github.com/apache/spark/pull/40884\r\nWe need to support parameter markers as well as \"proper\" (session) variables which would not have a leading '$'.\r\nThey would just be identifiers which need to be resolved.\r\nAlso we need the ability for users to pre-fix and post-fix. For example a schema-name or a field name.\r\nWithout solid support for parameter markers (and variables) we are still open to SQL injection.\r\nI was told that I cannot call eval from within the parser.\r\n\r\n  \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1550353750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1553709182",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1553709182",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1553709182,
    "node_id": "IC_kwDOAQXtWs5cm7h-",
    "user": {
      "login": "srielau",
      "id": 3514644,
      "node_id": "MDQ6VXNlcjM1MTQ2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srielau",
      "html_url": "https://github.com/srielau",
      "followers_url": "https://api.github.com/users/srielau/followers",
      "following_url": "https://api.github.com/users/srielau/following{/other_user}",
      "gists_url": "https://api.github.com/users/srielau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srielau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srielau/subscriptions",
      "organizations_url": "https://api.github.com/users/srielau/orgs",
      "repos_url": "https://api.github.com/users/srielau/repos",
      "events_url": "https://api.github.com/users/srielau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srielau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-18T21:52:42Z",
    "updated_at": "2023-05-18T21:52:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gengliangwang @dtenedor @gengliangwang \r\nIt's camera ready now. Please have at it.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1553709182/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1553732854",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1553732854",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1553732854,
    "node_id": "IC_kwDOAQXtWs5cnBT2",
    "user": {
      "login": "dtenedor",
      "id": 99207096,
      "node_id": "U_kgDOBenHuA",
      "avatar_url": "https://avatars.githubusercontent.com/u/99207096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dtenedor",
      "html_url": "https://github.com/dtenedor",
      "followers_url": "https://api.github.com/users/dtenedor/followers",
      "following_url": "https://api.github.com/users/dtenedor/following{/other_user}",
      "gists_url": "https://api.github.com/users/dtenedor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dtenedor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dtenedor/subscriptions",
      "organizations_url": "https://api.github.com/users/dtenedor/orgs",
      "repos_url": "https://api.github.com/users/dtenedor/repos",
      "events_url": "https://api.github.com/users/dtenedor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dtenedor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-18T22:18:19Z",
    "updated_at": "2023-05-18T22:18:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@srielau @gengliangwang @cloud-fan \r\n\r\nThe general structure of the PR looks OK.\r\n\r\nThis PR proposes to add new unresolved nodes for several different locations in the parser. This could be useful in the future if we want to add more custom analysis support for these different areas.\r\n\r\nAlternatively, we could leave the multipartIdentifier references where they are, and just update its definition instead:\r\n\r\n```\r\nmultipartIdentifier\r\n    : IDENTIFIER_KW LEFT_PAREN expression RIGHT_PAREN\r\n    | parts+=errorCapturingIdentifier (DOT parts+=errorCapturingIdentifier)*\r\n    ;\r\n```\r\n\r\nThis would reduce the number of changes to the .g4 file, since the proposed namespaceReference and functionNameReference and relationReference are all the same syntax. Then the PR would be easier to merge into different Spark forks out there. But this approach grants us future flexibility, if we ever anticipate the syntax to diverge for these different cases. I am OK with the proposed approach here.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1553732854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1553790687",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1553790687",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1553790687,
    "node_id": "IC_kwDOAQXtWs5cnPbf",
    "user": {
      "login": "srielau",
      "id": 3514644,
      "node_id": "MDQ6VXNlcjM1MTQ2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srielau",
      "html_url": "https://github.com/srielau",
      "followers_url": "https://api.github.com/users/srielau/followers",
      "following_url": "https://api.github.com/users/srielau/following{/other_user}",
      "gists_url": "https://api.github.com/users/srielau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srielau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srielau/subscriptions",
      "organizations_url": "https://api.github.com/users/srielau/orgs",
      "repos_url": "https://api.github.com/users/srielau/repos",
      "events_url": "https://api.github.com/users/srielau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srielau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-18T23:48:32Z",
    "updated_at": "2023-05-18T23:48:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dtenedor \r\nThere are still 30 multipartIdentifier usages that do NOT support IDENTIFIER() notation.\r\nSo we would trade mechanical churn in the grammar for code changes in AstBuilder et al.\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1553790687/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1555198846",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1555198846",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1555198846,
    "node_id": "IC_kwDOAQXtWs5csnN-",
    "user": {
      "login": "dtenedor",
      "id": 99207096,
      "node_id": "U_kgDOBenHuA",
      "avatar_url": "https://avatars.githubusercontent.com/u/99207096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dtenedor",
      "html_url": "https://github.com/dtenedor",
      "followers_url": "https://api.github.com/users/dtenedor/followers",
      "following_url": "https://api.github.com/users/dtenedor/following{/other_user}",
      "gists_url": "https://api.github.com/users/dtenedor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dtenedor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dtenedor/subscriptions",
      "organizations_url": "https://api.github.com/users/dtenedor/orgs",
      "repos_url": "https://api.github.com/users/dtenedor/repos",
      "events_url": "https://api.github.com/users/dtenedor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dtenedor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-19T20:25:55Z",
    "updated_at": "2023-05-19T20:25:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @dtenedor\r\nThere are still 30 multipartIdentifier usages that do NOT support IDENTIFIER() notation.\r\nSo we would trade mechanical churn in the grammar for code changes in AstBuilder et al.\r\n\r\nThis is true, we can keep the grammar changes then.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1555198846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1559445596",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1559445596",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1559445596,
    "node_id": "IC_kwDOAQXtWs5c80Bc",
    "user": {
      "login": "srielau",
      "id": 3514644,
      "node_id": "MDQ6VXNlcjM1MTQ2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srielau",
      "html_url": "https://github.com/srielau",
      "followers_url": "https://api.github.com/users/srielau/followers",
      "following_url": "https://api.github.com/users/srielau/following{/other_user}",
      "gists_url": "https://api.github.com/users/srielau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srielau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srielau/subscriptions",
      "organizations_url": "https://api.github.com/users/srielau/orgs",
      "repos_url": "https://api.github.com/users/srielau/repos",
      "events_url": "https://api.github.com/users/srielau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srielau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T13:59:47Z",
    "updated_at": "2023-05-23T13:59:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gengliangwang @cloud-fan  Can you take a peek with your error-context hat on?\r\nAs you see my adding withOrigin() into the wrapper has focused many of the contexts around the table names.\r\nSometimes that is quite right, sometimes that is debatable.\r\nDid you add all those createUnresolved*() methods for the context? I suppose I can add them back. ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1559445596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1560160303",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1560160303",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1560160303,
    "node_id": "IC_kwDOAQXtWs5c_igv",
    "user": {
      "login": "gengliangwang",
      "id": 1097932,
      "node_id": "MDQ6VXNlcjEwOTc5MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1097932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gengliangwang",
      "html_url": "https://github.com/gengliangwang",
      "followers_url": "https://api.github.com/users/gengliangwang/followers",
      "following_url": "https://api.github.com/users/gengliangwang/following{/other_user}",
      "gists_url": "https://api.github.com/users/gengliangwang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gengliangwang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gengliangwang/subscriptions",
      "organizations_url": "https://api.github.com/users/gengliangwang/orgs",
      "repos_url": "https://api.github.com/users/gengliangwang/repos",
      "events_url": "https://api.github.com/users/gengliangwang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gengliangwang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T21:41:22Z",
    "updated_at": "2023-05-23T21:41:22Z",
    "author_association": "MEMBER",
    "body": "> @gengliangwang @cloud-fan Can you take a peek with your error-context hat on?\r\nAs you see my adding withOrigin() into the wrapper has focused many of the contexts around the table names.\r\nSometimes that is quite right, sometimes that is debatable.\r\n\r\n\r\nSo I am seeing code like \r\n```\r\n        withIdentClause(relation, ident => {\r\n          InsertIntoStatement(\r\n            UnresolvedRelation(ident),\r\n            partition,\r\n            cols,\r\n            query,\r\n            overwrite = false,\r\n            ifPartitionNotExists)\r\n        })\r\n```\r\nThe context `relation` will be applied on the whole `InsertIntoStatement`. I think what you want is on `UnresolvedRelation(ident)` only. \r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1560160303/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1560163077",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1560163077",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1560163077,
    "node_id": "IC_kwDOAQXtWs5c_jMF",
    "user": {
      "login": "srielau",
      "id": 3514644,
      "node_id": "MDQ6VXNlcjM1MTQ2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/srielau",
      "html_url": "https://github.com/srielau",
      "followers_url": "https://api.github.com/users/srielau/followers",
      "following_url": "https://api.github.com/users/srielau/following{/other_user}",
      "gists_url": "https://api.github.com/users/srielau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/srielau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/srielau/subscriptions",
      "organizations_url": "https://api.github.com/users/srielau/orgs",
      "repos_url": "https://api.github.com/users/srielau/repos",
      "events_url": "https://api.github.com/users/srielau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/srielau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T21:42:56Z",
    "updated_at": "2023-05-23T21:42:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "> > @gengliangwang @cloud-fan Can you take a peek with your error-context hat on?\r\n> > As you see my adding withOrigin() into the wrapper has focused many of the contexts around the table names.\r\n> > Sometimes that is quite right, sometimes that is debatable.\r\n> \r\n> So I am seeing code like\r\n> \r\n> ```\r\n>         withIdentClause(relation, ident => {\r\n>           InsertIntoStatement(\r\n>             UnresolvedRelation(ident),\r\n>             partition,\r\n>             cols,\r\n>             query,\r\n>             overwrite = false,\r\n>             ifPartitionNotExists)\r\n>         })\r\n> ```\r\n> \r\n> The context `relation` will be applied on the whole `InsertIntoStatement`. I think what you want is on `UnresolvedRelation(ident)` only.\r\n\r\nYes.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1560163077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1560166537",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1560166537",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1560166537,
    "node_id": "IC_kwDOAQXtWs5c_kCJ",
    "user": {
      "login": "gengliangwang",
      "id": 1097932,
      "node_id": "MDQ6VXNlcjEwOTc5MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1097932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gengliangwang",
      "html_url": "https://github.com/gengliangwang",
      "followers_url": "https://api.github.com/users/gengliangwang/followers",
      "following_url": "https://api.github.com/users/gengliangwang/following{/other_user}",
      "gists_url": "https://api.github.com/users/gengliangwang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gengliangwang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gengliangwang/subscriptions",
      "organizations_url": "https://api.github.com/users/gengliangwang/orgs",
      "repos_url": "https://api.github.com/users/gengliangwang/repos",
      "events_url": "https://api.github.com/users/gengliangwang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gengliangwang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-23T21:45:00Z",
    "updated_at": "2023-05-23T21:45:00Z",
    "author_association": "MEMBER",
    "body": "Yeah, so we can have code like\r\n```\r\nval unresolvedRelation = withOrigin(ctx) {\r\n  UnresolvedRelation(ident)\r\n}\r\n InsertIntoStatement(\r\n            unresolvedRelation,\r\n            partition,\r\n            cols,\r\n            query,\r\n            overwrite = false,\r\n            ifPartitionNotExists)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1560166537/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1565008904",
    "html_url": "https://github.com/apache/spark/pull/41007#issuecomment-1565008904",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41007",
    "id": 1565008904,
    "node_id": "IC_kwDOAQXtWs5dSCQI",
    "user": {
      "login": "gengliangwang",
      "id": 1097932,
      "node_id": "MDQ6VXNlcjEwOTc5MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1097932?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gengliangwang",
      "html_url": "https://github.com/gengliangwang",
      "followers_url": "https://api.github.com/users/gengliangwang/followers",
      "following_url": "https://api.github.com/users/gengliangwang/following{/other_user}",
      "gists_url": "https://api.github.com/users/gengliangwang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gengliangwang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gengliangwang/subscriptions",
      "organizations_url": "https://api.github.com/users/gengliangwang/orgs",
      "repos_url": "https://api.github.com/users/gengliangwang/repos",
      "events_url": "https://api.github.com/users/gengliangwang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gengliangwang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-26T22:05:11Z",
    "updated_at": "2023-05-26T22:05:11Z",
    "author_association": "MEMBER",
    "body": "Thanks for the great work! Merging to master!",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1565008904/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
