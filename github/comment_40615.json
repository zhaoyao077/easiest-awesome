[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1500518140",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1500518140",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1500518140,
    "node_id": "IC_kwDOAQXtWs5ZcBb8",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-07T18:09:06Z",
    "updated_at": "2023-04-07T18:09:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dtenedor FYI, I updated the tests and am just missing one for empty input table, and one for merging sparse/dense sketches. Once I get the build to be green, I'm going to remove the WIP tag from the PR and send an e-mail back on that initial spark-dev thread (or maybe start a new thread) letting everyone know that the implementation is open for review. I think renaming functions is still do-able at this point, so let me know if you'd like to setup another sync to discuss updated function names?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1500518140/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1502323531",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1502323531",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1502323531,
    "node_id": "IC_kwDOAQXtWs5Zi6NL",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-10T21:05:17Z",
    "updated_at": "2023-04-10T22:19:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hi @mkaravel thank you for the review! I'll respond to your comments in-line.\r\n\r\n>more in favor of an aggregate function that merges sketches and returns the merged sketch\r\n\r\nI'm not opposed to building out an agg function that merges sketches without estimating the cardinality; I think this would be beneficial for multi-stage re-aggregations. I think this topic (unfortunately) begs the question of function naming, and here's the resultant naming scheme I'd propose:\r\n\r\nAggregate functions:\r\n- HllSketch (IntegerType|LongType|StringType|...) -> BinaryType\r\n- HllUnion (BinaryType) -> BinaryType\r\n\r\nNormal functions\r\n- HllSketchEstimate (BinaryType) -> LongType\r\n\r\nI think this API is simple and the lack of an aggregate function that returns the estimated cardinality is fine. What do you think?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1502323531/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1505627742",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1505627742",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1505627742,
    "node_id": "IC_kwDOAQXtWs5Zvg5e",
    "user": {
      "login": "mkaravel",
      "id": 6397014,
      "node_id": "MDQ6VXNlcjYzOTcwMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6397014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkaravel",
      "html_url": "https://github.com/mkaravel",
      "followers_url": "https://api.github.com/users/mkaravel/followers",
      "following_url": "https://api.github.com/users/mkaravel/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkaravel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkaravel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkaravel/subscriptions",
      "organizations_url": "https://api.github.com/users/mkaravel/orgs",
      "repos_url": "https://api.github.com/users/mkaravel/repos",
      "events_url": "https://api.github.com/users/mkaravel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkaravel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-12T17:08:28Z",
    "updated_at": "2023-04-12T17:08:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Hi @mkaravel thank you for the review! I'll respond to your comments in-line.\r\n> \r\n> > more in favor of an aggregate function that merges sketches and returns the merged sketch\r\n> \r\n> I'm not opposed to building out an agg function that merges sketches without estimating the cardinality; I think this would be beneficial for multi-stage re-aggregations. I think this topic (unfortunately) begs the question of function naming, and here's the resultant naming scheme I'd propose:\r\n> \r\n> Aggregate functions:\r\n> \r\n> * HllSketch (IntegerType|LongType|StringType|...) -> BinaryType\r\n> * HllUnion (BinaryType) -> BinaryType\r\n> \r\n> Normal functions\r\n> \r\n> * HllSketchEstimate (BinaryType) -> LongType\r\n> \r\n> I think this API is simple and the lack of an aggregate function that returns the estimated cardinality is fine. What do you think?\r\n\r\nSemantically I like this API. There is one more scalar expression that I would add, it's purpose being to merge two sketches. Let me give some more details below.\r\n\r\nIn terms of naming I am more in favor of dropping the \"Sketch\" part from the names and using an underscore to separate the \"Hll\" part from the rest. More specifically this is what I would choose (this is a personal opinion, and I am not reflecting opinions of anybody else other than myself):\r\n\r\nAggregate functions:\r\n\r\n* hll_collect (IntegerType|LongType|StringType|BinaryType|...) -> BinaryType\r\n* {hll_merge_agg, hll_union_agg}(BinaryType) -> BinaryType\r\n\r\nScalar functions:\r\n* {hll_merge, hll_union}(BinaryType, BinaryType) -> BinaryType\r\n* hll_estimate(BinaryType) -> LongType\r\n\r\nAbove I propose hll_merge* or hll_union* for the functions that perform the union (or merge operation) on sketches. I have a slight preference for the \"merge\" versions.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1505627742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1509053727",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1509053727",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1509053727,
    "node_id": "IC_kwDOAQXtWs5Z8lUf",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-14T18:22:41Z",
    "updated_at": "2023-04-14T18:22:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hello @mkaravel ! \r\n\r\nI've updated the PR to provide the following functions:\r\n\r\nAggregate functions:\r\n- hll_sketch_agg(IntegerType|LongType|StringType|BinaryType) -> BinaryType\r\n- hll_union_agg(BinaryType) -> BinaryType\r\n\r\nScalar functions\r\n- hll_sketch_estimate(BinaryType) -> LongType\r\n- hll_union(BinaryType, BinaryType) -> BinaryType\r\n\r\nNaming wise, I felt it was valuable to keep the function names aligned with the Datasketches objects they utilize, and be explicit about the operation being applied. Hopefully these function names are a good middle ground for us? I'll continue working on getting all the tests to pass, and then open the PR up for wide review.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1509053727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1515134305",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1515134305",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1515134305,
    "node_id": "IC_kwDOAQXtWs5aTx1h",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-19T17:49:09Z",
    "updated_at": "2023-04-19T17:49:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "A few tests are failing due to some connectivity issues unrelated to the changes in this PR - is there an easy way to re-run without pushing a new commit?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1515134305/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1516584672",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1516584672",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1516584672,
    "node_id": "IC_kwDOAQXtWs5aZT7g",
    "user": {
      "login": "mkaravel",
      "id": 6397014,
      "node_id": "MDQ6VXNlcjYzOTcwMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6397014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkaravel",
      "html_url": "https://github.com/mkaravel",
      "followers_url": "https://api.github.com/users/mkaravel/followers",
      "following_url": "https://api.github.com/users/mkaravel/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkaravel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkaravel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkaravel/subscriptions",
      "organizations_url": "https://api.github.com/users/mkaravel/orgs",
      "repos_url": "https://api.github.com/users/mkaravel/repos",
      "events_url": "https://api.github.com/users/mkaravel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkaravel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T16:01:15Z",
    "updated_at": "2023-04-20T16:01:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> A few tests are failing due to some connectivity issues unrelated to the changes in this PR - is there an easy way to re-run without pushing a new commit?\r\n\r\nI am not aware how to do that. @gatorsmile any ideas?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1516584672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1516614822",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1516614822",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1516614822,
    "node_id": "IC_kwDOAQXtWs5aZbSm",
    "user": {
      "login": "gatorsmile",
      "id": 11567269,
      "node_id": "MDQ6VXNlcjExNTY3MjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11567269?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gatorsmile",
      "html_url": "https://github.com/gatorsmile",
      "followers_url": "https://api.github.com/users/gatorsmile/followers",
      "following_url": "https://api.github.com/users/gatorsmile/following{/other_user}",
      "gists_url": "https://api.github.com/users/gatorsmile/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gatorsmile/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gatorsmile/subscriptions",
      "organizations_url": "https://api.github.com/users/gatorsmile/orgs",
      "repos_url": "https://api.github.com/users/gatorsmile/repos",
      "events_url": "https://api.github.com/users/gatorsmile/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gatorsmile/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T16:22:54Z",
    "updated_at": "2023-04-20T16:22:54Z",
    "author_association": "MEMBER",
    "body": "Are you able to see the button \"Re-run all jobs\" ?\r\n<img width=\"1206\" alt=\"image\" src=\"https://user-images.githubusercontent.com/11567269/233427975-c8ecf0cd-d1c2-43cf-b367-1183c8911d44.png\">\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1516614822/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1516899001",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1516899001",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1516899001,
    "node_id": "IC_kwDOAQXtWs5aagq5",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-20T20:22:00Z",
    "updated_at": "2023-04-20T20:22:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mkaravel regarding your comment about 'mixing sketches with different lgk values',[ this is the Union implementation which handles merging sketches with different configs](https://github.com/apache/datasketches-java/blob/master/src/main/java/org/apache/datasketches/hll/Union.java#L317-L340); my assumption is that the functionality is tested and stable, but let me know if you think we should try to limit the union operation to only support sketches with the same config?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1516899001/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1517360699",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1517360699",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1517360699,
    "node_id": "IC_kwDOAQXtWs5acRY7",
    "user": {
      "login": "mkaravel",
      "id": 6397014,
      "node_id": "MDQ6VXNlcjYzOTcwMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6397014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkaravel",
      "html_url": "https://github.com/mkaravel",
      "followers_url": "https://api.github.com/users/mkaravel/followers",
      "following_url": "https://api.github.com/users/mkaravel/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkaravel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkaravel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkaravel/subscriptions",
      "organizations_url": "https://api.github.com/users/mkaravel/orgs",
      "repos_url": "https://api.github.com/users/mkaravel/repos",
      "events_url": "https://api.github.com/users/mkaravel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkaravel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-21T07:00:50Z",
    "updated_at": "2023-04-21T07:44:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @mkaravel regarding your comment about 'mixing sketches with different lgk values',[ this is the Union implementation which handles merging sketches with different configs](https://github.com/apache/datasketches-java/blob/master/src/main/java/org/apache/datasketches/hll/Union.java#L317-L340); my assumption is that the functionality is tested and stable, but let me know if you think we should try to limit the union operation to only support sketches with the same config?\r\n\r\nI am not questioning the correctness of the DataSketches implementation.\r\n\r\nMy concern is accidental mistakes that can happen if the user does not pay attention to the `lgk` values of the input sketches. I would argue that merging two sketches with different `lgk` values is \"advanced\" usage of sketches, and the user should be aware that mixing such sketches comes with caveats (loosing precision with respect to the sketch with higher `lgk`). The current API hides this complexity and caveats.\r\n\r\nLet's consider another alternative (I want your opinion on this): Let's say we have two overloads (we can extend this to the aggregate version)\r\n* hll_merge(sketch1: BinaryType, sketch2: BinaryType)\r\n* hll_merge(sketch1: BinaryType, sketch2: BinaryType, allowDifferentLgKs: BooleanType)\r\n\r\nThe first errors out if the `lgk` values are different.\r\nThe second errors out if the `lgk` values are different and `allowDifferentLgKs` is `false`. However, if `allowDifferentLgk` is `true` then the second overload behaves as your current implementation.\r\n\r\nClearly, I am talking about adding a third boolean argument, with the default value being `false`. With these two overloads, if the user tries to merge two sketches with different precision, the query will fail. If they really need to merge them, they have the opportunity to do that by means of  setting the third argument to `true`, and it will not happen accidentally without them noticing. It will happen because they force it this way, they will be proactive about the loss of precision. A nice error message for the first overload and good documentation will make it very clear what is going on.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1517360699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1520502797",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1520502797",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1520502797,
    "node_id": "IC_kwDOAQXtWs5aoQgN",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-24T16:43:19Z",
    "updated_at": "2023-04-24T17:02:58Z",
    "author_association": "CONTRIBUTOR",
    "body": ">about adding a third boolean argument, with the default value being false\r\n\r\nI'm open to making this change, as this is in-line with the limitation I was planning on imposing on the original approx_count_distinct_sketch merge functionality. @mkaravel do you have an opinion on whether we should preserve the lgMaxK argument supported by the union operation, given this change? [Here's a ref to the docs](https://github.com/apache/datasketches-java/blob/b2c62bf050d8eb37b20e523a35bcd4f8c9a6cdf2/src/main/java/org/apache/datasketches/hll/Union.java#L45-L49). I'm leaning towards removing this argument in favor of relying on the default behavior, to further reduce complexity.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1520502797/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1523694528",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1523694528",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1523694528,
    "node_id": "IC_kwDOAQXtWs5a0bvA",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-26T16:16:33Z",
    "updated_at": "2023-04-26T16:16:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "FYI it looks like [another similar implementation of a Datasketches/Spark integration already exists in its own repo ](https://github.com/Gelerion/spark-sketches/tree/spark-3.0)- I've invited the owner of that implementation to provide feedback on this PR.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1523694528/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1523999640",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1523999640",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1523999640,
    "node_id": "IC_kwDOAQXtWs5a1mOY",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-26T20:22:51Z",
    "updated_at": "2023-04-26T20:22:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mkaravel I've updated the implementation based on your review comments. We're now returning the updatable binary representation, no longer support the tgtHllType parameter, and defer initialization of the Union instance until we've ingested the first HllSketch such that we can throw an exception when union/sketch lgConfigKs don't match. Let me know when you've had chance to re-review?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1523999640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1528267013",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1528267013",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1528267013,
    "node_id": "IC_kwDOAQXtWs5bF4EF",
    "user": {
      "login": "mkaravel",
      "id": 6397014,
      "node_id": "MDQ6VXNlcjYzOTcwMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6397014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkaravel",
      "html_url": "https://github.com/mkaravel",
      "followers_url": "https://api.github.com/users/mkaravel/followers",
      "following_url": "https://api.github.com/users/mkaravel/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkaravel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkaravel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkaravel/subscriptions",
      "organizations_url": "https://api.github.com/users/mkaravel/orgs",
      "repos_url": "https://api.github.com/users/mkaravel/repos",
      "events_url": "https://api.github.com/users/mkaravel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkaravel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-29T00:05:55Z",
    "updated_at": "2023-04-29T00:05:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@RyanBerti nit in the PR description:\r\n> Yes, this PR introduces two new aggregate functions, and two new non-aggregate functions:\r\n\r\nMaybe use \"scalar\" instead of \"non-aggregate\".",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1528267013/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1528770943",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1528770943",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1528770943,
    "node_id": "IC_kwDOAQXtWs5bHzF_",
    "user": {
      "login": "Gelerion",
      "id": 12531020,
      "node_id": "MDQ6VXNlcjEyNTMxMDIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/12531020?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Gelerion",
      "html_url": "https://github.com/Gelerion",
      "followers_url": "https://api.github.com/users/Gelerion/followers",
      "following_url": "https://api.github.com/users/Gelerion/following{/other_user}",
      "gists_url": "https://api.github.com/users/Gelerion/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Gelerion/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Gelerion/subscriptions",
      "organizations_url": "https://api.github.com/users/Gelerion/orgs",
      "repos_url": "https://api.github.com/users/Gelerion/repos",
      "events_url": "https://api.github.com/users/Gelerion/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Gelerion/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-29T11:54:32Z",
    "updated_at": "2023-04-29T11:54:32Z",
    "author_association": "NONE",
    "body": "While browsing the dev-mailing list, I came across this PR and I am excited to see that data-sketches will be built-in in Spark. Interestingly, a year ago, I created a similar [project](https://github.com/Gelerion/spark-sketches) that adds sketch support for Spark versions 2.4 to 3.4. Even the implementation path is very similar :)",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1528770943/reactions",
      "total_count": 3,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1528840439",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1528840439",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1528840439,
    "node_id": "IC_kwDOAQXtWs5bIED3",
    "user": {
      "login": "mkaravel",
      "id": 6397014,
      "node_id": "MDQ6VXNlcjYzOTcwMTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6397014?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkaravel",
      "html_url": "https://github.com/mkaravel",
      "followers_url": "https://api.github.com/users/mkaravel/followers",
      "following_url": "https://api.github.com/users/mkaravel/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkaravel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkaravel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkaravel/subscriptions",
      "organizations_url": "https://api.github.com/users/mkaravel/orgs",
      "repos_url": "https://api.github.com/users/mkaravel/repos",
      "events_url": "https://api.github.com/users/mkaravel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkaravel/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-04-29T17:57:50Z",
    "updated_at": "2023-04-29T17:57:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@RyanBerti I created a PR against this PR for updating `sql-expression-schema.md` (I regenerated the golden file).\r\nFeel free to either merge my PR into yours, or just copy the file in my PR into your code manually.\r\nJust trying to help here :)\r\n\r\nMy PR: https://github.com/RyanBerti/spark/pull/4",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1528840439/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1530822680",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1530822680",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1530822680,
    "node_id": "IC_kwDOAQXtWs5bPoAY",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-02T03:36:08Z",
    "updated_at": "2023-05-02T03:36:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mkaravel @dtenedor Finally got all the tests passing, thanks for all your help! Think I covered all of the most recent review comments, let me know if you need anything else from me for the merge?",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1530822680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1531272567",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1531272567",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1531272567,
    "node_id": "IC_kwDOAQXtWs5bRV13",
    "user": {
      "login": "HyukjinKwon",
      "id": 6477701,
      "node_id": "MDQ6VXNlcjY0Nzc3MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6477701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/HyukjinKwon",
      "html_url": "https://github.com/HyukjinKwon",
      "followers_url": "https://api.github.com/users/HyukjinKwon/followers",
      "following_url": "https://api.github.com/users/HyukjinKwon/following{/other_user}",
      "gists_url": "https://api.github.com/users/HyukjinKwon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/HyukjinKwon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/HyukjinKwon/subscriptions",
      "organizations_url": "https://api.github.com/users/HyukjinKwon/orgs",
      "repos_url": "https://api.github.com/users/HyukjinKwon/repos",
      "events_url": "https://api.github.com/users/HyukjinKwon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/HyukjinKwon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-02T10:59:07Z",
    "updated_at": "2023-05-02T10:59:07Z",
    "author_association": "MEMBER",
    "body": "Merged to master.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1531272567/reactions",
      "total_count": 4,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 4,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1531802864",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1531802864",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1531802864,
    "node_id": "IC_kwDOAQXtWs5bTXTw",
    "user": {
      "login": "dtenedor",
      "id": 99207096,
      "node_id": "U_kgDOBenHuA",
      "avatar_url": "https://avatars.githubusercontent.com/u/99207096?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dtenedor",
      "html_url": "https://github.com/dtenedor",
      "followers_url": "https://api.github.com/users/dtenedor/followers",
      "following_url": "https://api.github.com/users/dtenedor/following{/other_user}",
      "gists_url": "https://api.github.com/users/dtenedor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dtenedor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dtenedor/subscriptions",
      "organizations_url": "https://api.github.com/users/dtenedor/orgs",
      "repos_url": "https://api.github.com/users/dtenedor/repos",
      "events_url": "https://api.github.com/users/dtenedor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dtenedor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-02T16:42:54Z",
    "updated_at": "2023-05-02T16:42:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "@RyanBerti this is super awesome. Just wanted to thank you again for working on this. I'm sure lots of users will appreciate it.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1531802864/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1531857727",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1531857727",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1531857727,
    "node_id": "IC_kwDOAQXtWs5bTks_",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-02T17:20:42Z",
    "updated_at": "2023-05-02T17:20:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@dtenedor thanks for all the help, excited to be able to utilize sketches natively in Spark!",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1531857727/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1541016431",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1541016431",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1541016431,
    "node_id": "IC_kwDOAQXtWs5b2gtv",
    "user": {
      "login": "bersprockets",
      "id": 21131848,
      "node_id": "MDQ6VXNlcjIxMTMxODQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/21131848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bersprockets",
      "html_url": "https://github.com/bersprockets",
      "followers_url": "https://api.github.com/users/bersprockets/followers",
      "following_url": "https://api.github.com/users/bersprockets/following{/other_user}",
      "gists_url": "https://api.github.com/users/bersprockets/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bersprockets/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bersprockets/subscriptions",
      "organizations_url": "https://api.github.com/users/bersprockets/orgs",
      "repos_url": "https://api.github.com/users/bersprockets/repos",
      "events_url": "https://api.github.com/users/bersprockets/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bersprockets/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-09T23:30:11Z",
    "updated_at": "2023-05-09T23:30:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a follow-up, should you add a check to ensure a foldable `lgConfigK`?:\r\n\r\n```\r\nspark-sql (default)> create or replace temp view v1 as\r\nselect * from values\r\n(1, 12),\r\n(1, 12),\r\n(2, 12),\r\n(2, 12),\r\n(3, 12)\r\nas tab(col, logk);\r\nTime taken: 1.665 seconds\r\nspark-sql (default)> select hex(hll_sketch_agg(col, logk)) from v1;\r\n23/05/09 16:25:25 ERROR Executor: Exception in task 4.0 in stage 0.0 (TID 4)\r\njava.lang.NullPointerException\r\n\tat org.apache.spark.sql.catalyst.InternalRow$.$anonfun$getAccessor$4(InternalRow.scala:138)\r\n\tat org.apache.spark.sql.catalyst.InternalRow$.$anonfun$getAccessor$4$adapted(InternalRow.scala:138)\r\n\tat org.apache.spark.sql.catalyst.expressions.BoundReference.eval(BoundAttribute.scala:40)\r\n\tat org.apache.spark.sql.catalyst.expressions.aggregate.HllSketchAgg.lgConfigK$lzycompute(datasketchesAggregates.scala:65)\r\n\tat org.apache.spark.sql.catalyst.expressions.aggregate.HllSketchAgg.lgConfigK(datasketchesAggregates.scala:64)\r\n\tat org.apache.spark.sql.catalyst.expressions.aggregate.HllSketchAgg.createAggregationBuffer(datasketchesAggregates.scala:116)\r\n\tat org.apache.spark.sql.catalyst.expressions.aggregate.HllSketchAgg.createAggregationBuffer(datasketchesAggregates.scala:55)\r\n...\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1541016431/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 1
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1542840734",
    "html_url": "https://github.com/apache/spark/pull/40615#issuecomment-1542840734",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40615",
    "id": 1542840734,
    "node_id": "IC_kwDOAQXtWs5b9eGe",
    "user": {
      "login": "RyanBerti",
      "id": 17288675,
      "node_id": "MDQ6VXNlcjE3Mjg4Njc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/17288675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RyanBerti",
      "html_url": "https://github.com/RyanBerti",
      "followers_url": "https://api.github.com/users/RyanBerti/followers",
      "following_url": "https://api.github.com/users/RyanBerti/following{/other_user}",
      "gists_url": "https://api.github.com/users/RyanBerti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RyanBerti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RyanBerti/subscriptions",
      "organizations_url": "https://api.github.com/users/RyanBerti/orgs",
      "repos_url": "https://api.github.com/users/RyanBerti/repos",
      "events_url": "https://api.github.com/users/RyanBerti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RyanBerti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-10T21:38:08Z",
    "updated_at": "2023-05-10T21:38:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bersprockets good catch - I thought relying on ExpectsInputTypes would be sufficient. Looking at other example functions like ApproximatePercentile, I see that the foldable check is applied after super.checkInputDataTypes() in an overridden checkInputDataTypes() implementation. I'll follow this pattern and open up a new PR.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1542840734/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
