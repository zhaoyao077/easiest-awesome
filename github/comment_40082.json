[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1435965880",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1435965880",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1435965880,
    "node_id": "IC_kwDOAQXtWs5Vlxm4",
    "user": {
      "login": "LuciferYang",
      "id": 1475305,
      "node_id": "MDQ6VXNlcjE0NzUzMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1475305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LuciferYang",
      "html_url": "https://github.com/LuciferYang",
      "followers_url": "https://api.github.com/users/LuciferYang/followers",
      "following_url": "https://api.github.com/users/LuciferYang/following{/other_user}",
      "gists_url": "https://api.github.com/users/LuciferYang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LuciferYang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LuciferYang/subscriptions",
      "organizations_url": "https://api.github.com/users/LuciferYang/orgs",
      "repos_url": "https://api.github.com/users/LuciferYang/repos",
      "events_url": "https://api.github.com/users/LuciferYang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LuciferYang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-19T11:44:03Z",
    "updated_at": "2023-02-19T11:44:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "test first",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1435965880/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1436333698",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1436333698",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1436333698,
    "node_id": "IC_kwDOAQXtWs5VnLaC",
    "user": {
      "login": "LuciferYang",
      "id": 1475305,
      "node_id": "MDQ6VXNlcjE0NzUzMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1475305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LuciferYang",
      "html_url": "https://github.com/LuciferYang",
      "followers_url": "https://api.github.com/users/LuciferYang/followers",
      "following_url": "https://api.github.com/users/LuciferYang/following{/other_user}",
      "gists_url": "https://api.github.com/users/LuciferYang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LuciferYang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LuciferYang/subscriptions",
      "organizations_url": "https://api.github.com/users/LuciferYang/orgs",
      "repos_url": "https://api.github.com/users/LuciferYang/repos",
      "events_url": "https://api.github.com/users/LuciferYang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LuciferYang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T05:03:36Z",
    "updated_at": "2023-02-20T05:03:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @dongjoon-hyun @srowen ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1436333698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1436336072",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1436336072",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1436336072,
    "node_id": "IC_kwDOAQXtWs5VnL_I",
    "user": {
      "login": "dongjoon-hyun",
      "id": 9700541,
      "node_id": "MDQ6VXNlcjk3MDA1NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9700541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongjoon-hyun",
      "html_url": "https://github.com/dongjoon-hyun",
      "followers_url": "https://api.github.com/users/dongjoon-hyun/followers",
      "following_url": "https://api.github.com/users/dongjoon-hyun/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongjoon-hyun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongjoon-hyun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongjoon-hyun/subscriptions",
      "organizations_url": "https://api.github.com/users/dongjoon-hyun/orgs",
      "repos_url": "https://api.github.com/users/dongjoon-hyun/repos",
      "events_url": "https://api.github.com/users/dongjoon-hyun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongjoon-hyun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T05:06:02Z",
    "updated_at": "2023-02-20T05:07:06Z",
    "author_association": "MEMBER",
    "body": "BTW, I have one question, @LuciferYang . We explicitly exclude `jna` from `commons-crypto`. Do you know what are we losing from the enumerated items in the `commons-crypto` releasenotes?\r\n\r\nhttps://github.com/apache/spark/blob/5fc44dabe5084fb784f064afe691951a3c270793/pom.xml#L2679-L2689",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1436336072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1436378739",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1436378739",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1436378739,
    "node_id": "IC_kwDOAQXtWs5VnWZz",
    "user": {
      "login": "LuciferYang",
      "id": 1475305,
      "node_id": "MDQ6VXNlcjE0NzUzMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1475305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LuciferYang",
      "html_url": "https://github.com/LuciferYang",
      "followers_url": "https://api.github.com/users/LuciferYang/followers",
      "following_url": "https://api.github.com/users/LuciferYang/following{/other_user}",
      "gists_url": "https://api.github.com/users/LuciferYang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LuciferYang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LuciferYang/subscriptions",
      "organizations_url": "https://api.github.com/users/LuciferYang/orgs",
      "repos_url": "https://api.github.com/users/LuciferYang/repos",
      "events_url": "https://api.github.com/users/LuciferYang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LuciferYang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-20T06:02:18Z",
    "updated_at": "2023-02-20T06:03:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "From the release notes, I think nothing is losing.\r\n\r\n`OpenSsl20XNativeJna`,  which is not mentioned in release notes, is a new support in version 1.2.0(Because jna is excluded, it cannot be used in Spark).\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1436378739/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1443129166",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1443129166",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1443129166,
    "node_id": "IC_kwDOAQXtWs5WBGdO",
    "user": {
      "login": "dongjoon-hyun",
      "id": 9700541,
      "node_id": "MDQ6VXNlcjk3MDA1NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9700541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongjoon-hyun",
      "html_url": "https://github.com/dongjoon-hyun",
      "followers_url": "https://api.github.com/users/dongjoon-hyun/followers",
      "following_url": "https://api.github.com/users/dongjoon-hyun/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongjoon-hyun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongjoon-hyun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongjoon-hyun/subscriptions",
      "organizations_url": "https://api.github.com/users/dongjoon-hyun/orgs",
      "repos_url": "https://api.github.com/users/dongjoon-hyun/repos",
      "events_url": "https://api.github.com/users/dongjoon-hyun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongjoon-hyun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T08:32:00Z",
    "updated_at": "2023-02-24T08:34:07Z",
    "author_association": "MEMBER",
    "body": "Oh, this seems to break Apple Silicon environment, @LuciferYang . I hit the failure on Macbook environment.\r\n```\r\n$ build/sbt \"sql/testOnly *.RowQueueSuite\"\r\n...\r\n[info] RowQueueSuite:\r\n[info] - in-memory queue (33 milliseconds)\r\n[info] - disk queue (encryption = off) (28 milliseconds)\r\n[info] org.apache.spark.sql.execution.python.RowQueueSuite *** ABORTED *** (125 milliseconds)\r\n[info]   java.lang.ExceptionInInitializerError:\r\n[info]   at java.base/java.lang.Class.forName0(Native Method)\r\n[info]   at java.base/java.lang.Class.forName(Class.java:398)\r\n[info]   at org.apache.commons.crypto.utils.ReflectionUtils.getClassByNameOrNull(ReflectionUtils.java:93)\r\n[info]   at org.apache.commons.crypto.utils.ReflectionUtils.getClassByName(ReflectionUtils.java:64)\r\n[info]   at org.apache.commons.crypto.random.CryptoRandomFactory.getCryptoRandom(CryptoRandomFactory.java:189)\r\n[info]   at org.apache.spark.security.CryptoStreamUtils$.createInitializationVector(CryptoStreamUtils.scala:138)\r\n[info]   at org.apache.spark.security.CryptoStreamUtils$.createCryptoOutputStream(CryptoStreamUtils.scala:56)\r\n[info]   at org.apache.spark.serializer.SerializerManager.$anonfun$wrapForEncryption$3(SerializerManager.scala:151)\r\n[info]   at scala.Option.map(Option.scala:230)\r\n[info]   at org.apache.spark.serializer.SerializerManager.wrapForEncryption(SerializerManager.scala:151)\r\n[info]   at org.apache.spark.sql.execution.python.DiskRowQueue.<init>(RowQueue.scala:119)\r\n[info]   at org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2(RowQueueSuite.scala:72)\r\n[info]   at org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2$adapted(RowQueueSuite.scala:68)\r\n[info]   at org.apache.spark.security.EncryptionFunSuite.$anonfun$encryptionTest$2(EncryptionFunSuite.scala:32)\r\n[info]   at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)\r\n[info]   at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:22)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:20)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:226)\r\n[info]   at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:207)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:224)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTest$1(AnyFunSuiteLike.scala:236)\r\n[info]   at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:236)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:218)\r\n[info]   at org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterEach$$super$runTest(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.BeforeAndAfterEach.runTest(BeforeAndAfterEach.scala:234)\r\n[info]   at org.scalatest.BeforeAndAfterEach.runTest$(BeforeAndAfterEach.scala:227)\r\n[info]   at org.apache.spark.SparkFunSuite.runTest(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTests$1(AnyFunSuiteLike.scala:269)\r\n[info]   at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413)\r\n[info]   at scala.collection.immutable.List.foreach(List.scala:431)\r\n[info]   at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)\r\n[info]   at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)\r\n[info]   at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTests(AnyFunSuiteLike.scala:269)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTests$(AnyFunSuiteLike.scala:268)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.runTests(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.Suite.run(Suite.scala:1114)\r\n[info]   at org.scalatest.Suite.run$(Suite.scala:1096)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$run$1(AnyFunSuiteLike.scala:273)\r\n[info]   at org.scalatest.SuperEngine.runImpl(Engine.scala:535)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:273)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:272)\r\n[info]   at org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterAll$$super$run(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)\r\n[info]   at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)\r\n[info]   at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)\r\n[info]   at org.apache.spark.SparkFunSuite.run(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)\r\n[info]   at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)\r\n[info]   at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:413)\r\n[info]   at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n[info]   at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n[info]   at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n[info]   at java.base/java.lang.Thread.run(Thread.java:829)\r\n[info]   Cause: java.lang.IllegalStateException: java.security.GeneralSecurityException: Native library is not loaded\r\n[info]   at org.apache.commons.crypto.random.OpenSslCryptoRandom.<clinit>(OpenSslCryptoRandom.java:67)\r\n[info]   at java.base/java.lang.Class.forName0(Native Method)\r\n[info]   at java.base/java.lang.Class.forName(Class.java:398)\r\n[info]   at org.apache.commons.crypto.utils.ReflectionUtils.getClassByNameOrNull(ReflectionUtils.java:93)\r\n[info]   at org.apache.commons.crypto.utils.ReflectionUtils.getClassByName(ReflectionUtils.java:64)\r\n[info]   at org.apache.commons.crypto.random.CryptoRandomFactory.getCryptoRandom(CryptoRandomFactory.java:189)\r\n[info]   at org.apache.spark.security.CryptoStreamUtils$.createInitializationVector(CryptoStreamUtils.scala:138)\r\n[info]   at org.apache.spark.security.CryptoStreamUtils$.createCryptoOutputStream(CryptoStreamUtils.scala:56)\r\n[info]   at org.apache.spark.serializer.SerializerManager.$anonfun$wrapForEncryption$3(SerializerManager.scala:151)\r\n[info]   at scala.Option.map(Option.scala:230)\r\n[info]   at org.apache.spark.serializer.SerializerManager.wrapForEncryption(SerializerManager.scala:151)\r\n[info]   at org.apache.spark.sql.execution.python.DiskRowQueue.<init>(RowQueue.scala:119)\r\n[info]   at org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2(RowQueueSuite.scala:72)\r\n[info]   at org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2$adapted(RowQueueSuite.scala:68)\r\n[info]   at org.apache.spark.security.EncryptionFunSuite.$anonfun$encryptionTest$2(EncryptionFunSuite.scala:32)\r\n[info]   at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)\r\n[info]   at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:22)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:20)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:226)\r\n[info]   at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:207)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:224)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTest$1(AnyFunSuiteLike.scala:236)\r\n[info]   at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:236)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:218)\r\n[info]   at org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterEach$$super$runTest(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.BeforeAndAfterEach.runTest(BeforeAndAfterEach.scala:234)\r\n[info]   at org.scalatest.BeforeAndAfterEach.runTest$(BeforeAndAfterEach.scala:227)\r\n[info]   at org.apache.spark.SparkFunSuite.runTest(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTests$1(AnyFunSuiteLike.scala:269)\r\n[info]   at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413)\r\n[info]   at scala.collection.immutable.List.foreach(List.scala:431)\r\n[info]   at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)\r\n[info]   at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)\r\n[info]   at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTests(AnyFunSuiteLike.scala:269)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTests$(AnyFunSuiteLike.scala:268)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.runTests(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.Suite.run(Suite.scala:1114)\r\n[info]   at org.scalatest.Suite.run$(Suite.scala:1096)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$run$1(AnyFunSuiteLike.scala:273)\r\n[info]   at org.scalatest.SuperEngine.runImpl(Engine.scala:535)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:273)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:272)\r\n[info]   at org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterAll$$super$run(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)\r\n[info]   at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)\r\n[info]   at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)\r\n[info]   at org.apache.spark.SparkFunSuite.run(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)\r\n[info]   at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)\r\n[info]   at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:413)\r\n[info]   at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n[info]   at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n[info]   at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n[info]   at java.base/java.lang.Thread.run(Thread.java:829)\r\n[info]   Cause: java.security.GeneralSecurityException: Native library is not loaded\r\n[info]   at org.apache.commons.crypto.random.OpenSslCryptoRandom.checkNative(OpenSslCryptoRandom.java:79)\r\n[info]   at org.apache.commons.crypto.random.OpenSslCryptoRandom.<clinit>(OpenSslCryptoRandom.java:65)\r\n[info]   at java.base/java.lang.Class.forName0(Native Method)\r\n[info]   at java.base/java.lang.Class.forName(Class.java:398)\r\n[info]   at org.apache.commons.crypto.utils.ReflectionUtils.getClassByNameOrNull(ReflectionUtils.java:93)\r\n[info]   at org.apache.commons.crypto.utils.ReflectionUtils.getClassByName(ReflectionUtils.java:64)\r\n[info]   at org.apache.commons.crypto.random.CryptoRandomFactory.getCryptoRandom(CryptoRandomFactory.java:189)\r\n[info]   at org.apache.spark.security.CryptoStreamUtils$.createInitializationVector(CryptoStreamUtils.scala:138)\r\n[info]   at org.apache.spark.security.CryptoStreamUtils$.createCryptoOutputStream(CryptoStreamUtils.scala:56)\r\n[info]   at org.apache.spark.serializer.SerializerManager.$anonfun$wrapForEncryption$3(SerializerManager.scala:151)\r\n[info]   at scala.Option.map(Option.scala:230)\r\n[info]   at org.apache.spark.serializer.SerializerManager.wrapForEncryption(SerializerManager.scala:151)\r\n[info]   at org.apache.spark.sql.execution.python.DiskRowQueue.<init>(RowQueue.scala:119)\r\n[info]   at org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2(RowQueueSuite.scala:72)\r\n[info]   at org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2$adapted(RowQueueSuite.scala:68)\r\n[info]   at org.apache.spark.security.EncryptionFunSuite.$anonfun$encryptionTest$2(EncryptionFunSuite.scala:32)\r\n[info]   at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)\r\n[info]   at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:22)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:20)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:226)\r\n[info]   at org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:207)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:224)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTest$1(AnyFunSuiteLike.scala:236)\r\n[info]   at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:236)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:218)\r\n[info]   at org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterEach$$super$runTest(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.BeforeAndAfterEach.runTest(BeforeAndAfterEach.scala:234)\r\n[info]   at org.scalatest.BeforeAndAfterEach.runTest$(BeforeAndAfterEach.scala:227)\r\n[info]   at org.apache.spark.SparkFunSuite.runTest(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTests$1(AnyFunSuiteLike.scala:269)\r\n[info]   at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413)\r\n[info]   at scala.collection.immutable.List.foreach(List.scala:431)\r\n[info]   at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)\r\n[info]   at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)\r\n[info]   at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTests(AnyFunSuiteLike.scala:269)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTests$(AnyFunSuiteLike.scala:268)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.runTests(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.Suite.run(Suite.scala:1114)\r\n[info]   at org.scalatest.Suite.run$(Suite.scala:1096)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$run$1(AnyFunSuiteLike.scala:273)\r\n[info]   at org.scalatest.SuperEngine.runImpl(Engine.scala:535)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:273)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:272)\r\n[info]   at org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterAll$$super$run(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)\r\n[info]   at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)\r\n[info]   at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)\r\n[info]   at org.apache.spark.SparkFunSuite.run(SparkFunSuite.scala:66)\r\n[info]   at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)\r\n[info]   at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)\r\n[info]   at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:413)\r\n[info]   at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n[info]   at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n[info]   at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n[info]   at java.base/java.lang.Thread.run(Thread.java:829)\r\n[error] Uncaught exception when running org.apache.spark.sql.execution.python.RowQueueSuite: java.lang.ExceptionInInitializerError\r\n[error] sbt.ForkMain$ForkError: java.lang.ExceptionInInitializerError: null\r\n[error] \tat java.base/java.lang.Class.forName0(Native Method)\r\n[error] \tat java.base/java.lang.Class.forName(Class.java:398)\r\n[error] \tat org.apache.commons.crypto.utils.ReflectionUtils.getClassByNameOrNull(ReflectionUtils.java:93)\r\n[error] \tat org.apache.commons.crypto.utils.ReflectionUtils.getClassByName(ReflectionUtils.java:64)\r\n[error] \tat org.apache.commons.crypto.random.CryptoRandomFactory.getCryptoRandom(CryptoRandomFactory.java:189)\r\n[error] \tat org.apache.spark.security.CryptoStreamUtils$.createInitializationVector(CryptoStreamUtils.scala:138)\r\n[error] \tat org.apache.spark.security.CryptoStreamUtils$.createCryptoOutputStream(CryptoStreamUtils.scala:56)\r\n[error] \tat org.apache.spark.serializer.SerializerManager.$anonfun$wrapForEncryption$3(SerializerManager.scala:151)\r\n[error] \tat scala.Option.map(Option.scala:230)\r\n[error] \tat org.apache.spark.serializer.SerializerManager.wrapForEncryption(SerializerManager.scala:151)\r\n[error] \tat org.apache.spark.sql.execution.python.DiskRowQueue.<init>(RowQueue.scala:119)\r\n[error] \tat org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2(RowQueueSuite.scala:72)\r\n[error] \tat org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2$adapted(RowQueueSuite.scala:68)\r\n[error] \tat org.apache.spark.security.EncryptionFunSuite.$anonfun$encryptionTest$2(EncryptionFunSuite.scala:32)\r\n[error] \tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\r\n[error] \tat org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)\r\n[error] \tat org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)\r\n[error] \tat org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)\r\n[error] \tat org.scalatest.Transformer.apply(Transformer.scala:22)\r\n[error] \tat org.scalatest.Transformer.apply(Transformer.scala:20)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:226)\r\n[error] \tat org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:207)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:224)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTest$1(AnyFunSuiteLike.scala:236)\r\n[error] \tat org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:236)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:218)\r\n[error] \tat org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterEach$$super$runTest(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.BeforeAndAfterEach.runTest(BeforeAndAfterEach.scala:234)\r\n[error] \tat org.scalatest.BeforeAndAfterEach.runTest$(BeforeAndAfterEach.scala:227\r\n[error] \tat org.apache.spark.SparkFunSuite.runTest(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTests$1(AnyFunSuiteLike.scala:269)\r\n[error] \tat org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413\r\n[error] \tat scala.collection.immutable.List.foreach(List.scala:431)\r\n[error] \tat org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)\r\n[error] \tat org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)\r\n[error] \tat org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTests(AnyFunSuiteLike.scala:269)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTests$(AnyFunSuiteLike.scala:268)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuite.runTests(AnyFunSuite.scala:1564)\r\n[error] \tat org.scalatest.Suite.run(Suite.scala:1114)\r\n[error] \tat org.scalatest.Suite.run$(Suite.scala:1096)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1564)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$run$1(AnyFunSuiteLike.scala:273)\r\n[error] \tat org.scalatest.SuperEngine.runImpl(Engine.scala:535)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:273)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:272)\r\n[error] \tat org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterAll$$super$run(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)\r\n[error] \tat org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)\r\n[error] \tat org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)\r\n[error] \tat org.apache.spark.SparkFunSuite.run(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)\r\n[error] \tat org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)\r\n[error] \tat sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:413)\r\n[error] \tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n[error] \tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n[error] \tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n[error] \tat java.base/java.lang.Thread.run(Thread.java:829)\r\n[error] Caused by: sbt.ForkMain$ForkError: java.lang.IllegalStateException: java.security.GeneralSecurityException: Native library is not loaded\r\n[error] \tat org.apache.commons.crypto.random.OpenSslCryptoRandom.<clinit>(OpenSslCryptoRandom.java:67)\r\n[error] \tat java.base/java.lang.Class.forName0(Native Method)\r\n[error] \tat java.base/java.lang.Class.forName(Class.java:398)\r\n[error] \tat org.apache.commons.crypto.utils.ReflectionUtils.getClassByNameOrNull(ReflectionUtils.java:93)\r\n[error] \tat org.apache.commons.crypto.utils.ReflectionUtils.getClassByName(ReflectionUtils.java:64)\r\n[error] \tat org.apache.commons.crypto.random.CryptoRandomFactory.getCryptoRandom(CryptoRandomFactory.java:189)\r\n[error] \tat org.apache.spark.security.CryptoStreamUtils$.createInitializationVector(CryptoStreamUtils.scala:138)\r\n[error] \tat org.apache.spark.security.CryptoStreamUtils$.createCryptoOutputStream(CryptoStreamUtils.scala:56)\r\n[error] \tat org.apache.spark.serializer.SerializerManager.$anonfun$wrapForEncryption$3(SerializerManager.scala:151)\r\n[error] \tat scala.Option.map(Option.scala:230)\r\n[error] \tat org.apache.spark.serializer.SerializerManager.wrapForEncryption(SerializerManager.scala:151)\r\n[error] \tat org.apache.spark.sql.execution.python.DiskRowQueue.<init>(RowQueue.scala:119)\r\n[error] \tat org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2(RowQueueSuite.scala:72)\r\n[error] \tat org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2$adapted(RowQueueSuite.scala:68)\r\n[error] \tat org.apache.spark.security.EncryptionFunSuite.$anonfun$encryptionTest$2(EncryptionFunSuite.scala:32)\r\n[error] \tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\r\n[error] \tat org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)\r\n[error] \tat org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)\r\n[error] \tat org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)\r\n[error] \tat org.scalatest.Transformer.apply(Transformer.scala:22)\r\n[error] \tat org.scalatest.Transformer.apply(Transformer.scala:20)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:226)\r\n[error] \tat org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:207)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:224)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTest$1(AnyFunSuiteLike.scala:236)\r\n[error] \tat org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:236)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:218)\r\n[error] \tat org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterEach$$super$runTest(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.BeforeAndAfterEach.runTest(BeforeAndAfterEach.scala:234)\r\n[error] \tat org.scalatest.BeforeAndAfterEach.runTest$(BeforeAndAfterEach.scala:227\r\n[error] \tat org.apache.spark.SparkFunSuite.runTest(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTests$1(AnyFunSuiteLike.scala:269)\r\n[error] \tat org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413\r\n[error] \tat scala.collection.immutable.List.foreach(List.scala:431)\r\n[error] \tat org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)\r\n[error] \tat org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)\r\n[error] \tat org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTests(AnyFunSuiteLike.scala:269)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTests$(AnyFunSuiteLike.scala:268)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuite.runTests(AnyFunSuite.scala:1564)\r\n[error] \tat org.scalatest.Suite.run(Suite.scala:1114)\r\n[error] \tat org.scalatest.Suite.run$(Suite.scala:1096)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1564)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$run$1(AnyFunSuiteLike.scala:273)\r\n[error] \tat org.scalatest.SuperEngine.runImpl(Engine.scala:535)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:273)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:272)\r\n[error] \tat org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterAll$$super$run(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)\r\n[error] \tat org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)\r\n[error] \tat org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)\r\n[error] \tat org.apache.spark.SparkFunSuite.run(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)\r\n[error] \tat org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)\r\n[error] \tat sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:413)\r\n[error] \tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n[error] \tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n[error] \tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n[error] \tat java.base/java.lang.Thread.run(Thread.java:829)\r\n[error] Caused by: sbt.ForkMain$ForkError: java.security.GeneralSecurityException: Native library is not loaded\r\n[error] \tat org.apache.commons.crypto.random.OpenSslCryptoRandom.checkNative(OpenSslCryptoRandom.java:79)\r\n[error] \tat org.apache.commons.crypto.random.OpenSslCryptoRandom.<clinit>(OpenSslCryptoRandom.java:65)\r\n[error] \tat java.base/java.lang.Class.forName0(Native Method)\r\n[error] \tat java.base/java.lang.Class.forName(Class.java:398)\r\n[error] \tat org.apache.commons.crypto.utils.ReflectionUtils.getClassByNameOrNull(ReflectionUtils.java:93)\r\n[error] \tat org.apache.commons.crypto.utils.ReflectionUtils.getClassByName(ReflectionUtils.java:64)\r\n[error] \tat org.apache.commons.crypto.random.CryptoRandomFactory.getCryptoRandom(CryptoRandomFactory.java:189)\r\n[error] \tat org.apache.spark.security.CryptoStreamUtils$.createInitializationVector(CryptoStreamUtils.scala:138)\r\n[error] \tat org.apache.spark.security.CryptoStreamUtils$.createCryptoOutputStream(CryptoStreamUtils.scala:56)\r\n[error] \tat org.apache.spark.serializer.SerializerManager.$anonfun$wrapForEncryption$3(SerializerManager.scala:151)\r\n[error] \tat scala.Option.map(Option.scala:230)\r\n[error] \tat org.apache.spark.serializer.SerializerManager.wrapForEncryption(SerializerManager.scala:151)\r\n[error] \tat org.apache.spark.sql.execution.python.DiskRowQueue.<init>(RowQueue.scala:119)\r\n[error] \tat org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2(RowQueueSuite.scala:72)\r\n[error] \tat org.apache.spark.sql.execution.python.RowQueueSuite.$anonfun$new$2$adapted(RowQueueSuite.scala:68)\r\n[error] \tat org.apache.spark.security.EncryptionFunSuite.$anonfun$encryptionTest$2(EncryptionFunSuite.scala:32)\r\n[error] \tat scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\r\n[error] \tat org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)\r\n[error] \tat org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)\r\n[error] \tat org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)\r\n[error] \tat org.scalatest.Transformer.apply(Transformer.scala:22)\r\n[error] \tat org.scalatest.Transformer.apply(Transformer.scala:20)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:226)\r\n[error] \tat org.apache.spark.SparkFunSuite.withFixture(SparkFunSuite.scala:207)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:224)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTest$1(AnyFunSuiteLike.scala:236)\r\n[error] \tat org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:236)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:218)\r\n[error] \tat org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterEach$$super$runTest(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.BeforeAndAfterEach.runTest(BeforeAndAfterEach.scala:234)\r\n[error] \tat org.scalatest.BeforeAndAfterEach.runTest$(BeforeAndAfterEach.scala:227\r\n[error] \tat org.apache.spark.SparkFunSuite.runTest(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTests$1(AnyFunSuiteLike.scala:269)\r\n[error] \tat org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413\r\n[error] \tat scala.collection.immutable.List.foreach(List.scala:431)\r\n[error] \tat org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)\r\n[error] \tat org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)\r\n[error] \tat org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTests(AnyFunSuiteLike.scala:269)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.runTests$(AnyFunSuiteLike.scala:268)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuite.runTests(AnyFunSuite.scala:1564)\r\n[error] \tat org.scalatest.Suite.run(Suite.scala:1114)\r\n[error] \tat org.scalatest.Suite.run$(Suite.scala:1096)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1564)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$run$1(AnyFunSuiteLike.scala:273)\r\n[error] \tat org.scalatest.SuperEngine.runImpl(Engine.scala:535)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:273)\r\n[error] \tat org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:272)\r\n[error] \tat org.apache.spark.SparkFunSuite.org$scalatest$BeforeAndAfterAll$$super$run(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)\r\n[error] \tat org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)\r\n[error] \tat org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)\r\n[error] \tat org.apache.spark.SparkFunSuite.run(SparkFunSuite.scala:66)\r\n[error] \tat org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)\r\n[error] \tat org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)\r\n[error] \tat sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:413)\r\n[error] \tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n[error] \tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n[error] \tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n[error] \tat java.base/java.lang.Thread.run(Thread.java:829)\r\n[info] Run completed in 1 second, 175 milliseconds.\r\n[info] Total number of tests run: 2\r\n[info] Suites: completed 0, aborted 1\r\n[info] Tests: succeeded 2, failed 0, canceled 0, ignored 0, pending 0\r\n[info] *** 1 SUITE ABORTED ***\r\n[error] Error during tests:\r\n[error] \torg.apache.spark.sql.execution.python.RowQueueSuite\r\n[error] (sql / Test / testOnly) sbt.TestsFailedException: Tests unsuccessful\r\n[error] Total time: 176 s (02:56), completed Feb 24, 2023, 12:30:57 AM\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1443129166/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1443132354",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1443132354",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1443132354,
    "node_id": "IC_kwDOAQXtWs5WBHPC",
    "user": {
      "login": "dongjoon-hyun",
      "id": 9700541,
      "node_id": "MDQ6VXNlcjk3MDA1NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9700541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongjoon-hyun",
      "html_url": "https://github.com/dongjoon-hyun",
      "followers_url": "https://api.github.com/users/dongjoon-hyun/followers",
      "following_url": "https://api.github.com/users/dongjoon-hyun/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongjoon-hyun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongjoon-hyun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongjoon-hyun/subscriptions",
      "organizations_url": "https://api.github.com/users/dongjoon-hyun/orgs",
      "repos_url": "https://api.github.com/users/dongjoon-hyun/repos",
      "events_url": "https://api.github.com/users/dongjoon-hyun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongjoon-hyun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T08:33:08Z",
    "updated_at": "2023-02-24T08:33:08Z",
    "author_association": "MEMBER",
    "body": "In short, it's `Native library is not loaded` error. Could you verify from your side, @LuciferYang ?\r\n```\r\njava.lang.IllegalStateException: java.security.GeneralSecurityException: Native library is not loaded\r\n[info]   at org.apache.commons.crypto.random.OpenSslCryptoRandom.<clinit>(OpenSslCryptoRandom.java:67)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1443132354/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1443153442",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1443153442",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1443153442,
    "node_id": "IC_kwDOAQXtWs5WBMYi",
    "user": {
      "login": "LuciferYang",
      "id": 1475305,
      "node_id": "MDQ6VXNlcjE0NzUzMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1475305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LuciferYang",
      "html_url": "https://github.com/LuciferYang",
      "followers_url": "https://api.github.com/users/LuciferYang/followers",
      "following_url": "https://api.github.com/users/LuciferYang/following{/other_user}",
      "gists_url": "https://api.github.com/users/LuciferYang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LuciferYang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LuciferYang/subscriptions",
      "organizations_url": "https://api.github.com/users/LuciferYang/orgs",
      "repos_url": "https://api.github.com/users/LuciferYang/repos",
      "events_url": "https://api.github.com/users/LuciferYang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LuciferYang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T08:40:37Z",
    "updated_at": "2023-02-24T08:40:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @dongjoon-hyun, it's my bad, I hit same issue, let me revert this one, I will remember check this part next time.\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1443153442/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1443155202",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1443155202",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1443155202,
    "node_id": "IC_kwDOAQXtWs5WBM0C",
    "user": {
      "login": "dongjoon-hyun",
      "id": 9700541,
      "node_id": "MDQ6VXNlcjk3MDA1NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9700541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongjoon-hyun",
      "html_url": "https://github.com/dongjoon-hyun",
      "followers_url": "https://api.github.com/users/dongjoon-hyun/followers",
      "following_url": "https://api.github.com/users/dongjoon-hyun/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongjoon-hyun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongjoon-hyun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongjoon-hyun/subscriptions",
      "organizations_url": "https://api.github.com/users/dongjoon-hyun/orgs",
      "repos_url": "https://api.github.com/users/dongjoon-hyun/repos",
      "events_url": "https://api.github.com/users/dongjoon-hyun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongjoon-hyun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T08:41:10Z",
    "updated_at": "2023-02-24T08:41:10Z",
    "author_association": "MEMBER",
    "body": "Well, let me revert directly~",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1443155202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1443155790",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1443155790",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1443155790,
    "node_id": "IC_kwDOAQXtWs5WBM9O",
    "user": {
      "login": "dongjoon-hyun",
      "id": 9700541,
      "node_id": "MDQ6VXNlcjk3MDA1NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9700541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongjoon-hyun",
      "html_url": "https://github.com/dongjoon-hyun",
      "followers_url": "https://api.github.com/users/dongjoon-hyun/followers",
      "following_url": "https://api.github.com/users/dongjoon-hyun/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongjoon-hyun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongjoon-hyun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongjoon-hyun/subscriptions",
      "organizations_url": "https://api.github.com/users/dongjoon-hyun/orgs",
      "repos_url": "https://api.github.com/users/dongjoon-hyun/repos",
      "events_url": "https://api.github.com/users/dongjoon-hyun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongjoon-hyun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T08:41:22Z",
    "updated_at": "2023-02-24T08:41:22Z",
    "author_association": "MEMBER",
    "body": "Since it's on master only, it's easier. ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1443155790/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1443157552",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1443157552",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1443157552,
    "node_id": "IC_kwDOAQXtWs5WBNYw",
    "user": {
      "login": "LuciferYang",
      "id": 1475305,
      "node_id": "MDQ6VXNlcjE0NzUzMDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1475305?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LuciferYang",
      "html_url": "https://github.com/LuciferYang",
      "followers_url": "https://api.github.com/users/LuciferYang/followers",
      "following_url": "https://api.github.com/users/LuciferYang/following{/other_user}",
      "gists_url": "https://api.github.com/users/LuciferYang/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LuciferYang/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LuciferYang/subscriptions",
      "organizations_url": "https://api.github.com/users/LuciferYang/orgs",
      "repos_url": "https://api.github.com/users/LuciferYang/repos",
      "events_url": "https://api.github.com/users/LuciferYang/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LuciferYang/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T08:41:59Z",
    "updated_at": "2023-02-24T08:41:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "ok, thanks @dongjoon-hyun ",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1443157552/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1443158499",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1443158499",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1443158499,
    "node_id": "IC_kwDOAQXtWs5WBNnj",
    "user": {
      "login": "dongjoon-hyun",
      "id": 9700541,
      "node_id": "MDQ6VXNlcjk3MDA1NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9700541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongjoon-hyun",
      "html_url": "https://github.com/dongjoon-hyun",
      "followers_url": "https://api.github.com/users/dongjoon-hyun/followers",
      "following_url": "https://api.github.com/users/dongjoon-hyun/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongjoon-hyun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongjoon-hyun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongjoon-hyun/subscriptions",
      "organizations_url": "https://api.github.com/users/dongjoon-hyun/orgs",
      "repos_url": "https://api.github.com/users/dongjoon-hyun/repos",
      "events_url": "https://api.github.com/users/dongjoon-hyun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongjoon-hyun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T08:42:19Z",
    "updated_at": "2023-02-24T08:42:19Z",
    "author_association": "MEMBER",
    "body": "It's reverted via https://github.com/apache/spark/commit/ca22c41eb30c6ff4588cf4e91252fe93ae946236 .",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1443158499/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1443184863",
    "html_url": "https://github.com/apache/spark/pull/40082#issuecomment-1443184863",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40082",
    "id": 1443184863,
    "node_id": "IC_kwDOAQXtWs5WBUDf",
    "user": {
      "login": "dongjoon-hyun",
      "id": 9700541,
      "node_id": "MDQ6VXNlcjk3MDA1NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9700541?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongjoon-hyun",
      "html_url": "https://github.com/dongjoon-hyun",
      "followers_url": "https://api.github.com/users/dongjoon-hyun/followers",
      "following_url": "https://api.github.com/users/dongjoon-hyun/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongjoon-hyun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongjoon-hyun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongjoon-hyun/subscriptions",
      "organizations_url": "https://api.github.com/users/dongjoon-hyun/orgs",
      "repos_url": "https://api.github.com/users/dongjoon-hyun/repos",
      "events_url": "https://api.github.com/users/dongjoon-hyun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongjoon-hyun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-02-24T08:49:19Z",
    "updated_at": "2023-02-24T08:49:19Z",
    "author_association": "MEMBER",
    "body": "FYI, I also confimed that the revert commit recovers the following streaming module test, too.\r\n```\r\norg.apache.spark.streaming.ReceivedBlockHandlerWithEncryptionSuite\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1443184863/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
