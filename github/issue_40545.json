{
  "url": "https://api.github.com/repos/apache/spark/issues/40545",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/40545/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/40545/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/40545/events",
  "html_url": "https://github.com/apache/spark/pull/40545",
  "id": 1639241289,
  "node_id": "PR_kwDOAQXtWs5M015a",
  "number": 40545,
  "title": "[SPARK-42918] Generalize handling of metadata attributes in FileSourceStrategy",
  "user": {
    "login": "johanl-db",
    "id": 112876214,
    "node_id": "U_kgDOBrpatg",
    "avatar_url": "https://avatars.githubusercontent.com/u/112876214?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/johanl-db",
    "html_url": "https://github.com/johanl-db",
    "followers_url": "https://api.github.com/users/johanl-db/followers",
    "following_url": "https://api.github.com/users/johanl-db/following{/other_user}",
    "gists_url": "https://api.github.com/users/johanl-db/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/johanl-db/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/johanl-db/subscriptions",
    "organizations_url": "https://api.github.com/users/johanl-db/orgs",
    "repos_url": "https://api.github.com/users/johanl-db/repos",
    "events_url": "https://api.github.com/users/johanl-db/events{/privacy}",
    "received_events_url": "https://api.github.com/users/johanl-db/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-03-24T11:43:45Z",
  "updated_at": "2023-03-31T12:52:16Z",
  "closed_at": "2023-03-31T12:52:16Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/40545",
    "html_url": "https://github.com/apache/spark/pull/40545",
    "diff_url": "https://github.com/apache/spark/pull/40545.diff",
    "patch_url": "https://github.com/apache/spark/pull/40545.patch",
    "merged_at": null
  },
  "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n  7. If you want to add a new configuration, please read the guideline first for naming configurations in\r\n     'core/src/main/scala/org/apache/spark/internal/config/ConfigEntry.scala'.\r\n  8. If you want to add or modify an error type or message, please read the guideline first in\r\n     'core/src/main/resources/error/README.md'.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nThis change improves the handling of constant and generated metadata fields in `FileSourceStrategy`: instead of relying on hard-wired logic to categorize constant and generated metadata fields and process them, this change embeds the required information when creating them in `FileFormat` and uses this information in `FileSourceStrategy` to process arbitrary metadata fields.\r\n\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\nThis change is a first step towards allowing file format implementations to inject their own metadata fields into plans.  The second step will be to change `FileScanRdd`/`FileFormat` to be able to populate values of arbitrary constant and generated metadata columns.\r\nOnce this is done, each file format will be able to declare and populate its own metadata field, e.g. `ParquetFileFormat` can provide the Parquet row index metadata field `ROW_INDEX` without polluting the `FileFormat`.\r\n\r\n\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\nNo, this is strictly a refactor without any functional change.\r\n\r\n\r\n### How was this patch tested?\r\nThis change is covered by existing tests, e.p. FileMetadataStructSuite.\r\n",
  "closed_by": {
    "login": "cloud-fan",
    "id": 3182036,
    "node_id": "MDQ6VXNlcjMxODIwMzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cloud-fan",
    "html_url": "https://github.com/cloud-fan",
    "followers_url": "https://api.github.com/users/cloud-fan/followers",
    "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
    "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
    "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
    "repos_url": "https://api.github.com/users/cloud-fan/repos",
    "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/40545/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/40545/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
