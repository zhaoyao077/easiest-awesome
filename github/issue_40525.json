{
  "url": "https://api.github.com/repos/apache/spark/issues/40525",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/40525/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/40525/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/40525/events",
  "html_url": "https://github.com/apache/spark/pull/40525",
  "id": 1636348793,
  "node_id": "PR_kwDOAQXtWs5MrG3g",
  "number": 40525,
  "title": "[SPARK-42859][CONNECT][PS] Basic support for pandas API on Spark Connect",
  "user": {
    "login": "itholic",
    "id": 44108233,
    "node_id": "MDQ6VXNlcjQ0MTA4MjMz",
    "avatar_url": "https://avatars.githubusercontent.com/u/44108233?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/itholic",
    "html_url": "https://github.com/itholic",
    "followers_url": "https://api.github.com/users/itholic/followers",
    "following_url": "https://api.github.com/users/itholic/following{/other_user}",
    "gists_url": "https://api.github.com/users/itholic/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/itholic/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/itholic/subscriptions",
    "organizations_url": "https://api.github.com/users/itholic/orgs",
    "repos_url": "https://api.github.com/users/itholic/repos",
    "events_url": "https://api.github.com/users/itholic/events{/privacy}",
    "received_events_url": "https://api.github.com/users/itholic/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 1406627200,
      "node_id": "MDU6TGFiZWwxNDA2NjI3MjAw",
      "url": "https://api.github.com/repos/apache/spark/labels/BUILD",
      "name": "BUILD",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 1981527456,
      "node_id": "MDU6TGFiZWwxOTgxNTI3NDU2",
      "url": "https://api.github.com/repos/apache/spark/labels/CORE",
      "name": "CORE",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 1982260031,
      "node_id": "MDU6TGFiZWwxOTgyMjYwMDMx",
      "url": "https://api.github.com/repos/apache/spark/labels/PYTHON",
      "name": "PYTHON",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 4138679613,
      "node_id": "LA_kwDOAQXtWs72rz09",
      "url": "https://api.github.com/repos/apache/spark/labels/PANDAS%20API%20ON%20SPARK",
      "name": "PANDAS API ON SPARK",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 4556440342,
      "node_id": "LA_kwDOAQXtWs8AAAABD5XDFg",
      "url": "https://api.github.com/repos/apache/spark/labels/CONNECT",
      "name": "CONNECT",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 20,
  "created_at": "2023-03-22T19:05:08Z",
  "updated_at": "2023-04-22T05:47:01Z",
  "closed_at": "2023-04-08T07:27:28Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/40525",
    "html_url": "https://github.com/apache/spark/pull/40525",
    "diff_url": "https://github.com/apache/spark/pull/40525.diff",
    "patch_url": "https://github.com/apache/spark/pull/40525.patch",
    "merged_at": null
  },
  "body": "### What changes were proposed in this pull request?\r\n\r\nThis PR proposes to support pandas API on Spark for Spark Connect. This PR includes minimal changes to support basic functionality of the pandas API in Spark Connect, and sets up a testing environment into `pyspark/pandas/tests/connect` using all existing pandas API on Spark test bases to test the functionality of the pandas API on Spark in a remote Spark session.\r\n\r\nHere is a summary of the key tasks:\r\n1. All pandas-on-Spark tests under the `python/pyspark/pandas/tests/` directory can now be performed in Spark Connect by adding corresponding tests to the `python/pyspark/pandas/tests/connect/` directory.\r\n2. Unlike with Spark SQL, we did not create a separate package directory such as `python/pyspark/sql/connect` for Spark Connect, so I modified the existing files of `pyspark.pandas`. This allows users to use the existing pandas-on-Spark code as it is on Spark Connect.\r\n3. Because of 2, I added two typing rules into `python/pyspark/pandas/_typing.py` for addressing both PySpark Column and Spark Connect Column in the single path.\r\n   - Added `GenericColumn` for typing both PySpark Column and Spark Connect Column.\r\n   - Added `GenericDataFrame` for typing both PySpark DataFrame and Spark Connect DataFrame.\r\n\r\n### Why are the changes needed?\r\n\r\nBy supporting the pandas API in Spark Connect, it can significantly improve the usability for existing PySpark and pandas users.\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\n\r\nNo, because it is designed to allow existing code for regular Spark sessions to be used without any user-facing changes other than switching the regular Spark session to remote Spark session. However, since some features of the existing pandas API on Spark are not fully supported yet, some features may be limited.\r\n\r\n### How was this patch tested?\r\n\r\nA testing bed has been set up to reproduce all existing pandas-on-Spark tests for Spark Connect, ensuring that the existing tests can be replicated in Spark Connect. The current result for all tests as below:\r\n\r\n| Test file                                           | Test total | Test passed | Coverage |\r\n| --------------------------------------------------- | ---------- | ----------- | -------- |\r\n| test_parity_dataframe.py                            | 105        | 85          | 80.95%   |\r\n| test_parity_dataframe_slow.py                       | 66         | 48          | 72.73%   |\r\n| test_parity_dataframe_conversion.py                 | 11         | 11          | 100.00%  |\r\n| test_parity_dataframe_spark_io.py                   | 8          | 7           | 87.50%   |\r\n| test_parity_ops_on_diff_frames.py                   | 75         | 75          | 100.00%  |\r\n| test_parity_series.py                               | 131        | 104         | 79.39%   |\r\n| test_parity_series_datetime.py                      | 41         | 34          | 82.93%   |\r\n| test_parity_categorical.py                          | 29         | 22          | 75.86%   |\r\n| test_parity_config.py                               | 7          | 7           | 100.00%  |\r\n| test_parity_csv.py                                  | 18         | 18          | 100.00%  |\r\n| test_parity_default_index.py                        | 4          | 1           | 25.00%   |\r\n| test_parity_ewm.py                                  | 3          | 1           | 33.33%   |\r\n| test_parity_expanding.py                            | 22         | 2           | 9.09%    |\r\n| test_parity_extention.py                            | 7          | 7           | 100.00%  |\r\n| test_parity_frame_spark.py                          | 6          | 2           | 33.33%   |\r\n| test_parity_generic_functions.py                    | 4          | 1           | 25.00%   |\r\n| test_parity_groupby.py                              | 49         | 36          | 73.47%   |\r\n| test_parity_groupby_slow.py                         | 205        | 147         | 71.71%   |\r\n| test_parity_indexing.py                             | 3          | 3           | 100.00%  |\r\n| test_parity_indexops_spark.py                       | 3          | 3           | 100.00%  |\r\n| test_parity_internal.py                             | 1          | 0           | 0.00%    |\r\n| test_parity_namespace.py                            | 29         | 26          | 89.66%   |\r\n| test_parity_numpy_compat.py                         | 6          | 4           | 66.67%   |\r\n| test_parity_ops_on_diff_frames_groupby.py           | 22         | 13          | 59.09%   |\r\n| test_parity_ops_on_diff_frames_groupby_expanding.py | 7          | 0           | 0.00%    |\r\n| test_parity_ops_on_diff_frames_groupby_rolling.py   | 7          | 0           | 0.00%    |\r\n| test_parity_ops_on_diff_frames_slow.py              | 22         | 15          | 68.18%   |\r\n| test_parity_repr.py                                 | 5          | 5           | 100.00%  |\r\n| test_parity_resample.py                             | 5          | 3           | 60.00%   |\r\n| test_parity_reshape.py                              | 10         | 8           | 80.00%   |\r\n| test_parity_rolling.py                              | 21         | 1           | 4.76%    |\r\n| test_parity_scalars.py                              | 1          | 1           | 100.00%  |\r\n| test_parity_series_conversion.py                    | 2          | 2           | 100.00%  |\r\n| test_parity_series_string.py                        | 56         | 55          | 98.21%   |\r\n| test_parity_spark_functions.py                      | 1          | 1           | 100.00%  |\r\n| test_parity_sql.py                                  | 7          | 4           | 57.14%   |\r\n| test_parity_stats.py                                | 15         | 7           | 46.67%   |\r\n| test_parity_typedef.py                              | 10         | 10          | 100.00%  |\r\n| test_parity_utils.py                                | 5          | 5           | 100.00%  |\r\n| test_parity_window.py                               | 2          | 2           | 100.00%  |\r\n| test_parity_frame_plot.py                           | 7          | 5           | 71.43%   |\r\n| plot/test_parity_frame_plot_matplotlib.py           | 13         | 11          | 84.62%   |\r\n| plot/test_parity_frame_plot_plotly.py               | 12         | 9           | 75.00%   |\r\n| plot/test_parity_series_plot.py                     | 3          | 3           | 100.00%  |\r\n| plot/test_parity_series_plot_matplotlib.py          | 14         | 8           | 57.14%   |\r\n| plot/test_parity_series_plot_plotly.py              | 9          | 7           | 77.78%   |\r\n| indexes/test_parity_base.py                         | 144        | 75          | 52.08%   |\r\n| indexes/test_parity_category.py                     | 16         | 7           | 43.75%   |\r\n| indexes/test_parity_datetime.py                     | 13         | 11          | 84.62%   |\r\n| indexes/test_parity_timedelta.py                    | 2          | 1           | 50.00%   |\r\n| data_type_ops/test_parity_base.py                   | 2          | 2           | 100.00%  |\r\n| data_type_ops/test_parity_binary_ops.py             | 30         | 25          | 83.33%   |\r\n| data_type_ops/test_parity_boolean_ops.py            | 31         | 26          | 83.87%   |\r\n| data_type_ops/test_parity_categorical_ops.py        | 30         | 23          | 76.67%   |\r\n| data_type_ops/test_parity_complex_ops.py            | 30         | 30          | 100.00%  |\r\n| data_type_ops/test_parity_date_ops.py               | 30         | 25          | 83.33%   |\r\n| data_type_ops/test_parity_datetime_ops.py           | 30         | 25          | 83.33%   |\r\n| data_type_ops/test_parity_null_ops.py               | 26         | 19          | 73.08%   |\r\n| data_type_ops/test_parity_num_ops.py                | 33         | 25          | 75.76%   |\r\n| data_type_ops/test_parity_string_ops.py             | 30         | 23          | 76.67%   |\r\n| data_type_ops/test_parity_timedelta_ops.py          | 26         | 19          | 73.08%   |\r\n| data_type_ops/test_parity_udf_ops.py                | 26         | 18          | 69.23%   |\r\n| Total                                               | 1588       | 1173        | 73.87%   |",
  "closed_by": {
    "login": "HyukjinKwon",
    "id": 6477701,
    "node_id": "MDQ6VXNlcjY0Nzc3MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6477701?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/HyukjinKwon",
    "html_url": "https://github.com/HyukjinKwon",
    "followers_url": "https://api.github.com/users/HyukjinKwon/followers",
    "following_url": "https://api.github.com/users/HyukjinKwon/following{/other_user}",
    "gists_url": "https://api.github.com/users/HyukjinKwon/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/HyukjinKwon/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/HyukjinKwon/subscriptions",
    "organizations_url": "https://api.github.com/users/HyukjinKwon/orgs",
    "repos_url": "https://api.github.com/users/HyukjinKwon/repos",
    "events_url": "https://api.github.com/users/HyukjinKwon/events{/privacy}",
    "received_events_url": "https://api.github.com/users/HyukjinKwon/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/40525/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/40525/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
