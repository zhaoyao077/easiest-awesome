[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1543425929",
    "html_url": "https://github.com/apache/spark/pull/41129#issuecomment-1543425929",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41129",
    "id": 1543425929,
    "node_id": "IC_kwDOAQXtWs5b_s-J",
    "user": {
      "login": "WweiL",
      "id": 10248890,
      "node_id": "MDQ6VXNlcjEwMjQ4ODkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10248890?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WweiL",
      "html_url": "https://github.com/WweiL",
      "followers_url": "https://api.github.com/users/WweiL/followers",
      "following_url": "https://api.github.com/users/WweiL/following{/other_user}",
      "gists_url": "https://api.github.com/users/WweiL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WweiL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WweiL/subscriptions",
      "organizations_url": "https://api.github.com/users/WweiL/orgs",
      "repos_url": "https://api.github.com/users/WweiL/repos",
      "events_url": "https://api.github.com/users/WweiL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WweiL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T06:45:24Z",
    "updated_at": "2023-05-11T06:45:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "This code rn is messy because it's based on unmerged PR: https://github.com/apache/spark/pull/41026\r\n\r\nOnly need to look at the part I commented",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1543425929/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1544324125",
    "html_url": "https://github.com/apache/spark/pull/41129#issuecomment-1544324125",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41129",
    "id": 1544324125,
    "node_id": "IC_kwDOAQXtWs5cDIQd",
    "user": {
      "login": "zhenlineo",
      "id": 4190164,
      "node_id": "MDQ6VXNlcjQxOTAxNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4190164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhenlineo",
      "html_url": "https://github.com/zhenlineo",
      "followers_url": "https://api.github.com/users/zhenlineo/followers",
      "following_url": "https://api.github.com/users/zhenlineo/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhenlineo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhenlineo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhenlineo/subscriptions",
      "organizations_url": "https://api.github.com/users/zhenlineo/orgs",
      "repos_url": "https://api.github.com/users/zhenlineo/repos",
      "events_url": "https://api.github.com/users/zhenlineo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhenlineo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T16:42:07Z",
    "updated_at": "2023-05-11T16:45:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@WweiL I can run your test succesfully with SBT commands:\r\n```\r\n./build/sbt package -Phive -Pconnect\r\nsbt \"testOnly org.apache.spark.sql.streaming.StreamingQuerySuite\"\r\n```\r\n\r\nYou got the `ClassNotFound` exception probably because you were trying to run via the shell?\r\nIt would work with Ammonite shell. If you define the user defined writer via the shell, it should also work.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1544324125/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1544474453",
    "html_url": "https://github.com/apache/spark/pull/41129#issuecomment-1544474453",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41129",
    "id": 1544474453,
    "node_id": "IC_kwDOAQXtWs5cDs9V",
    "user": {
      "login": "zhenlineo",
      "id": 4190164,
      "node_id": "MDQ6VXNlcjQxOTAxNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4190164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zhenlineo",
      "html_url": "https://github.com/zhenlineo",
      "followers_url": "https://api.github.com/users/zhenlineo/followers",
      "following_url": "https://api.github.com/users/zhenlineo/following{/other_user}",
      "gists_url": "https://api.github.com/users/zhenlineo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zhenlineo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zhenlineo/subscriptions",
      "organizations_url": "https://api.github.com/users/zhenlineo/orgs",
      "repos_url": "https://api.github.com/users/zhenlineo/repos",
      "events_url": "https://api.github.com/users/zhenlineo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zhenlineo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-11T18:21:43Z",
    "updated_at": "2023-05-11T18:21:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "If you hit `stream classdesc serialVersionUID = -2719662620125650908, local class serialVersionUID = 6534627183855972490`\r\n\r\nIt means the client has a version and server has another, when trying to mapping them java failed to match the UID.\r\nThe solution is to let the client use the server version and move the server side version into a `sql-util` package.",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1544474453/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1564985008",
    "html_url": "https://github.com/apache/spark/pull/41129#issuecomment-1564985008",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/41129",
    "id": 1564985008,
    "node_id": "IC_kwDOAQXtWs5dR8aw",
    "user": {
      "login": "WweiL",
      "id": 10248890,
      "node_id": "MDQ6VXNlcjEwMjQ4ODkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/10248890?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/WweiL",
      "html_url": "https://github.com/WweiL",
      "followers_url": "https://api.github.com/users/WweiL/followers",
      "following_url": "https://api.github.com/users/WweiL/following{/other_user}",
      "gists_url": "https://api.github.com/users/WweiL/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/WweiL/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/WweiL/subscriptions",
      "organizations_url": "https://api.github.com/users/WweiL/orgs",
      "repos_url": "https://api.github.com/users/WweiL/repos",
      "events_url": "https://api.github.com/users/WweiL/events{/privacy}",
      "received_events_url": "https://api.github.com/users/WweiL/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-05-26T21:36:12Z",
    "updated_at": "2023-05-26T21:36:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Getting a scala test related error, the code works fine in REPL\r\n```\r\n - foreach Row *** FAILED *** (15 milliseconds)\r\n[info]   java.io.NotSerializableException: org.scalatest.Engine\r\n[info]   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\r\n[info]   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\r\n[info]   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\r\n[info]   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\r\n[info]   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\r\n[info]   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\r\n[info]   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\r\n[info]   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\r\n[info]   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\r\n[info]   at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\r\n[info]   at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\r\n[info]   at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\r\n[info]   at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\r\n[info]   at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\r\n[info]   at org.apache.spark.util.Utils$.serialize(Utils.scala:126)\r\n[info]   at org.apache.spark.sql.streaming.DataStreamWriter.foreach(DataStreamWriter.scala:226)\r\n[info]   at org.apache.spark.sql.streaming.StreamingQuerySuite.$anonfun$new$12(StreamingQuerySuite.scala:204)\r\n[info]   at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)\r\n[info]   at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)\r\n[info]   at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:22)\r\n[info]   at org.scalatest.Transformer.apply(Transformer.scala:20)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike$$anon$1.apply(AnyFunSuiteLike.scala:226)\r\n[info]   at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)\r\n[info]   at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.withFixture(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.invokeWithFixture$1(AnyFunSuiteLike.scala:224)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTest$1(AnyFunSuiteLike.scala:236)\r\n[info]   at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTest(AnyFunSuiteLike.scala:236)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTest$(AnyFunSuiteLike.scala:218)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.runTest(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$runTests$1(AnyFunSuiteLike.scala:269)\r\n[info]   at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:413)\r\n[info]   at scala.collection.immutable.List.foreach(List.scala:431)\r\n[info]   at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)\r\n[info]   at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:396)\r\n[info]   at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:475)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTests(AnyFunSuiteLike.scala:269)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.runTests$(AnyFunSuiteLike.scala:268)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.runTests(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.Suite.run(Suite.scala:1114)\r\n[info]   at org.scalatest.Suite.run$(Suite.scala:1096)\r\n[info]   at org.scalatest.funsuite.AnyFunSuite.org$scalatest$funsuite$AnyFunSuiteLike$$super$run(AnyFunSuite.scala:1564)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.$anonfun$run$1(AnyFunSuiteLike.scala:273)\r\n[info]   at org.scalatest.SuperEngine.runImpl(Engine.scala:535)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.run(AnyFunSuiteLike.scala:273)\r\n[info]   at org.scalatest.funsuite.AnyFunSuiteLike.run$(AnyFunSuiteLike.scala:272)\r\n[info]   at org.apache.spark.sql.streaming.StreamingQuerySuite.org$scalatest$BeforeAndAfterAll$$super$run(StreamingQuerySuite.scala:35)\r\n[info]   at org.scalatest.BeforeAndAfterAll.liftedTree1$1(BeforeAndAfterAll.scala:213)\r\n[info]   at org.scalatest.BeforeAndAfterAll.run(BeforeAndAfterAll.scala:210)\r\n[info]   at org.scalatest.BeforeAndAfterAll.run$(BeforeAndAfterAll.scala:208)\r\n[info]   at org.apache.spark.sql.streaming.StreamingQuerySuite.run(StreamingQuerySuite.scala:35)\r\n[info]   at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:321)\r\n[info]   at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:517)\r\n[info]   at sbt.ForkMain$Run.lambda$runTest$1(ForkMain.java:413)\r\n[info]   at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n[info]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n[info]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n[info]   at java.lang.Thread.run(Thread.java:750)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1564985008/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
