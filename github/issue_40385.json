{
  "url": "https://api.github.com/repos/apache/spark/issues/40385",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/40385/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/40385/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/40385/events",
  "html_url": "https://github.com/apache/spark/pull/40385",
  "id": 1620482097,
  "node_id": "PR_kwDOAQXtWs5L13_Z",
  "number": 40385,
  "title": "[SPARK-42753] ReusedExchange refers to non-existent nodes",
  "user": {
    "login": "StevenChenDatabricks",
    "id": 83618776,
    "node_id": "MDQ6VXNlcjgzNjE4Nzc2",
    "avatar_url": "https://avatars.githubusercontent.com/u/83618776?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/StevenChenDatabricks",
    "html_url": "https://github.com/StevenChenDatabricks",
    "followers_url": "https://api.github.com/users/StevenChenDatabricks/followers",
    "following_url": "https://api.github.com/users/StevenChenDatabricks/following{/other_user}",
    "gists_url": "https://api.github.com/users/StevenChenDatabricks/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/StevenChenDatabricks/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/StevenChenDatabricks/subscriptions",
    "organizations_url": "https://api.github.com/users/StevenChenDatabricks/orgs",
    "repos_url": "https://api.github.com/users/StevenChenDatabricks/repos",
    "events_url": "https://api.github.com/users/StevenChenDatabricks/events{/privacy}",
    "received_events_url": "https://api.github.com/users/StevenChenDatabricks/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2023-03-12T19:26:58Z",
  "updated_at": "2023-03-22T01:28:29Z",
  "closed_at": "2023-03-22T01:28:29Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/40385",
    "html_url": "https://github.com/apache/spark/pull/40385",
    "diff_url": "https://github.com/apache/spark/pull/40385.diff",
    "patch_url": "https://github.com/apache/spark/pull/40385.patch",
    "merged_at": null
  },
  "body": "<!--\r\nThanks for sending a pull request!  Here are some tips for you:\r\n  1. If this is your first time, please read our contributor guidelines: https://spark.apache.org/contributing.html\r\n  2. Ensure you have added or run the appropriate tests for your PR: https://spark.apache.org/developer-tools.html\r\n  3. If the PR is unfinished, add '[WIP]' in your PR title, e.g., '[WIP][SPARK-XXXX] Your PR title ...'.\r\n  4. Be sure to keep the PR description updated to reflect all changes.\r\n  5. Please write your PR title to summarize what this PR proposes.\r\n  6. If possible, provide a concise example to reproduce the issue for a faster review.\r\n  7. If you want to add a new configuration, please read the guideline first for naming configurations in\r\n     'core/src/main/scala/org/apache/spark/internal/config/ConfigEntry.scala'.\r\n  8. If you want to add or modify an error type or message, please read the guideline first in\r\n     'core/src/main/resources/error/README.md'.\r\n-->\r\n\r\n### What changes were proposed in this pull request?\r\n<!--\r\nPlease clarify what changes you are proposing. The purpose of this section is to outline the changes and how this PR fixes the issue. \r\nIf possible, please consider writing useful notes for better and faster reviews in your PR. See the examples below.\r\n  1. If you refactor some codes with changing classes, showing the class hierarchy will help reviewers.\r\n  2. If you fix some SQL features, you can provide some references of other DBMSes.\r\n  3. If there is design documentation, please add the link.\r\n  4. If there is a discussion in the mailing list, please add the link.\r\n-->\r\nThis PR addresses a rare bug with the EXPLAIN function and Spark UI that can happen when AQE takes effect with multiple ReusedExchange nodes. The bug causes the ReusedExchange to point to an unknown child since that child subtree was \"pruned\" in a previous AQE iteration. \r\n\r\nThis PR fixes the issue by finding all the ReusedExchange nodes in the tree that have a `child` node that has NOT been processed in the final plan (meaning it has no ID or it has an incorrect ID generated from the previous AQE iteration). It then traverses the child subtree and generates correct IDs for them. We print this missing subtree in a new section called `Adaptively Optimized Out Exchanges`.\r\n\r\n### Why are the changes needed?\r\n<!--\r\nPlease clarify why the changes are needed. For instance,\r\n  1. If you propose a new API, clarify the use case for a new API.\r\n  2. If you fix a bug, you can clarify why it is a bug.\r\n-->\r\n\r\n\r\nBelow is an example to demonstrate the root cause:\r\n\r\n> AdaptiveSparkPlan\r\n>   |-- SomeNode X (subquery xxx)\r\n>       |-- Exchange A\r\n>           |-- SomeNode Y\r\n>               |-- Exchange B\r\n> \r\n> Subquery:Hosting operator = SomeNode Hosting Expression = xxx dynamicpruning#388\r\n> AdaptiveSparkPlan\r\n>   |-- SomeNode M\r\n>       |-- Exchange C\r\n>           |-- SomeNode N\r\n>               |-- Exchange D\r\n> \r\n\r\nStep 1: Exchange B is materialized and the QueryStage is added to stage cache\r\n\r\nStep 2: Exchange D reuses Exchange B\r\n\r\nStep 3: Exchange C is materialized and the QueryStage is added to stage cache\r\n\r\nStep 4: Exchange A reuses Exchange C\r\n\r\nThen the final plan looks like:\r\n\r\n> AdaptiveSparkPlan\r\n>   |-- SomeNode X (subquery xxx)\r\n>       |-- Exchange A -> ReusedExchange (reuses Exchange C)\r\n> \r\n> \r\n> Subquery:Hosting operator = SomeNode Hosting Expression = xxx dynamicpruning#388\r\n> AdaptiveSparkPlan\r\n>   |-- SomeNode M\r\n>       |-- Exchange C -> PhotonShuffleMapStage ....\r\n>           |-- SomeNode N\r\n>               |-- Exchange D -> ReusedExchange (reuses Exchange B)\r\n> \r\n\r\nAs a result, the ReusedExchange (reuses Exchange B) will refer to a non-exist node.\r\n\r\n\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\n<!--\r\nNote that it means *any* user-facing change including all aspects such as the documentation fix.\r\nIf yes, please clarify the previous behavior and the change this PR proposes - provide the console output, description and/or an example to show the behavior difference if possible.\r\nIf possible, please also clarify if this is a user-facing change compared to the released Spark versions or within the unreleased branches such as master.\r\nIf no, write 'No'.\r\n-->\r\n\r\n\r\n**Explain Text Before and After**\r\n**Before:**\r\n```\r\n+- ReusedExchange (105)\r\n\r\n(105) ReusedExchange [Reuses operator id: unknown]\r\nOutput [3]: [sr_customer_sk#303, sr_store_sk#307, sum#413L]\r\n```\r\n\r\n**After:**\r\n```\r\n+- ReusedExchange (105)\r\n   +- Exchange (132)\r\n      +- * HashAggregate (131)\r\n         +- * Project (130)\r\n            +- * BroadcastHashJoin Inner BuildRight (129)\r\n               :- * Filter (128)\r\n               :  +- * ColumnarToRow (127)\r\n               :     +- Scan parquet hive_metastore.tpcds_sf1000_delta.store_returns (126)\r\n               +- ShuffleQueryStage (115), Statistics(sizeInBytes=5.7 KiB, rowCount=366, [d_date_sk#234 -> ColumnStat(Some(362),Some(2415022),Some(2488070),Some(0),Some(4),Some(4),None,2)], isRuntime=true)\r\n                  +- ReusedExchange (114)\r\n\r\n\r\n(105) ReusedExchange [Reuses operator id: 132]\r\nOutput [3]: [sr_customer_sk#217, sr_store_sk#221, sum#327L]\r\n\r\n(126) Scan parquet hive_metastore.tpcds_sf1000_delta.store_returns\r\nOutput [4]: [sr_customer_sk#217, sr_store_sk#221, sr_return_amt#225, sr_returned_date_sk#214]\r\nBatched: true\r\nLocation: PreparedDeltaFileIndex [dbfs:/mnt/performance-datasets/2018TPC/tpcds-2.4/sf1000_delta/store_returns]\r\nPartitionFilters: [isnotnull(sr_returned_date_sk#214), dynamicpruningexpression(sr_returned_date_sk#214 IN dynamicpruning#329)]\r\nPushedFilters: [IsNotNull(sr_store_sk)]\r\nReadSchema: struct<sr_customer_sk:int,sr_store_sk:int,sr_return_amt:decimal(7,2)>\r\n\r\n(127) ColumnarToRow\r\nInput [4]: [sr_customer_sk#217, sr_store_sk#221, sr_return_amt#225, sr_returned_date_sk#214]\r\n\r\n(128) Filter\r\nInput [4]: [sr_customer_sk#217, sr_store_sk#221, sr_return_amt#225, sr_returned_date_sk#214]\r\nCondition : isnotnull(sr_store_sk#221)\r\n\r\n(114) ReusedExchange [Reuses operator id: 8]\r\nOutput [1]: [d_date_sk#234]\r\n\r\n(115) ShuffleQueryStage\r\nOutput [1]: [d_date_sk#234]\r\nArguments: 2, Statistics(sizeInBytes=5.7 KiB, rowCount=366, [d_date_sk#234 -> ColumnStat(Some(362),Some(2415022),Some(2488070),Some(0),Some(4),Some(4),None,2)], isRuntime=true)\r\n\r\n(129) BroadcastHashJoin\r\nLeft keys [1]: [sr_returned_date_sk#214]\r\nRight keys [1]: [d_date_sk#234]\r\nJoin type: Inner\r\nJoin condition: None\r\n\r\n(130) Project\r\nOutput [3]: [sr_customer_sk#217, sr_store_sk#221, sr_return_amt#225]\r\nInput [5]: [sr_customer_sk#217, sr_store_sk#221, sr_return_amt#225, sr_returned_date_sk#214, d_date_sk#234]\r\n\r\n(131) HashAggregate\r\nInput [3]: [sr_customer_sk#217, sr_store_sk#221, sr_return_amt#225]\r\nKeys [2]: [sr_customer_sk#217, sr_store_sk#221]\r\nFunctions [1]: [partial_sum(UnscaledValue(sr_return_amt#225)) AS sum#327L]\r\nAggregate Attributes [1]: [sum#326L]\r\nResults [3]: [sr_customer_sk#217, sr_store_sk#221, sum#327L]\r\n\r\n(132) Exchange\r\nInput [3]: [sr_customer_sk#217, sr_store_sk#221, sum#327L]\r\nArguments: hashpartitioning(sr_store_sk#221, 200), ENSURE_REQUIREMENTS, [plan_id=1791]\r\n```\r\n\r\n**Spark UI Before and After**\r\n\r\n**Before:**\r\n<img width=\"339\" alt=\"Screenshot 2023-03-10 at 10 52 46 AM\" src=\"https://user-images.githubusercontent.com/83618776/224406011-e622ad11-37e6-48c6-b556-cd5c7708e237.png\">\r\n\r\n**After:**\r\n![image](https://user-images.githubusercontent.com/83618776/224406076-4fcbf918-2a8d-4776-b91a-36815752cf2a.png)\r\n\r\n\r\n### How was this patch tested?\r\n<!--\r\nIf tests were added, say they were added here. Please make sure to add some test cases that check the changes thoroughly including negative and positive cases if possible.\r\nIf it was tested in a way different from regular unit tests, please clarify how you tested step by step, ideally copy and paste-able, so that other reviewers can test and check, and descendants can verify in the future.\r\nIf tests were not added, please describe why they were not added and/or why it was difficult to add.\r\nIf benchmark tests were added, please run the benchmarks in GitHub Actions for the consistent environment, and the instructions could accord to: https://spark.apache.org/developer-tools.html#github-workflow-benchmarks.\r\n-->\r\n\r\nUnit tests were added to `ExplainSuite`. And manually tested with ExplainSuite.",
  "closed_by": {
    "login": "cloud-fan",
    "id": 3182036,
    "node_id": "MDQ6VXNlcjMxODIwMzY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3182036?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cloud-fan",
    "html_url": "https://github.com/cloud-fan",
    "followers_url": "https://api.github.com/users/cloud-fan/followers",
    "following_url": "https://api.github.com/users/cloud-fan/following{/other_user}",
    "gists_url": "https://api.github.com/users/cloud-fan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cloud-fan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cloud-fan/subscriptions",
    "organizations_url": "https://api.github.com/users/cloud-fan/orgs",
    "repos_url": "https://api.github.com/users/cloud-fan/repos",
    "events_url": "https://api.github.com/users/cloud-fan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cloud-fan/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/40385/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/40385/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
