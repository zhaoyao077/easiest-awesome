[
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1476454588",
    "html_url": "https://github.com/apache/spark/pull/40488#issuecomment-1476454588",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40488",
    "id": 1476454588,
    "node_id": "IC_kwDOAQXtWs5YAOi8",
    "user": {
      "login": "peter-toth",
      "id": 7253827,
      "node_id": "MDQ6VXNlcjcyNTM4Mjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7253827?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/peter-toth",
      "html_url": "https://github.com/peter-toth",
      "followers_url": "https://api.github.com/users/peter-toth/followers",
      "following_url": "https://api.github.com/users/peter-toth/following{/other_user}",
      "gists_url": "https://api.github.com/users/peter-toth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/peter-toth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/peter-toth/subscriptions",
      "organizations_url": "https://api.github.com/users/peter-toth/orgs",
      "repos_url": "https://api.github.com/users/peter-toth/repos",
      "events_url": "https://api.github.com/users/peter-toth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/peter-toth/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-20T15:32:42Z",
    "updated_at": "2023-03-20T15:32:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "@rednaxelafx, @cloud-fan let me know it this PR is a viable alternative to https://github.com/apache/spark/pull/40473. Or maybe if I should do a little cleanup like https://github.com/peter-toth/spark/commit/90421cb74dd0d0cfe2693cab39a25cd7892c0d45 in this or in a follow-up PR...",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1476454588/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/apache/spark/issues/comments/1477131544",
    "html_url": "https://github.com/apache/spark/pull/40488#issuecomment-1477131544",
    "issue_url": "https://api.github.com/repos/apache/spark/issues/40488",
    "id": 1477131544,
    "node_id": "IC_kwDOAQXtWs5YCz0Y",
    "user": {
      "login": "rednaxelafx",
      "id": 107834,
      "node_id": "MDQ6VXNlcjEwNzgzNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/107834?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rednaxelafx",
      "html_url": "https://github.com/rednaxelafx",
      "followers_url": "https://api.github.com/users/rednaxelafx/followers",
      "following_url": "https://api.github.com/users/rednaxelafx/following{/other_user}",
      "gists_url": "https://api.github.com/users/rednaxelafx/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rednaxelafx/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rednaxelafx/subscriptions",
      "organizations_url": "https://api.github.com/users/rednaxelafx/orgs",
      "repos_url": "https://api.github.com/users/rednaxelafx/repos",
      "events_url": "https://api.github.com/users/rednaxelafx/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rednaxelafx/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2023-03-21T00:38:08Z",
    "updated_at": "2023-03-21T00:38:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Before the recent rounds of changes to EquivalentExpressions, the old `addExprTree` used to call `addExpr` in its core:\r\nhttps://github.com/apache/spark/blob/branch-2.1/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/EquivalentExpressions.scala#L90\r\nThat was still the case when `PhysicalAggregation` started using this mechanism to deduplicate expressions. I guess it started becoming \"detached\" from the main path when the recent refactoring happened that allows updating a separate equivalence map instead of the \"main\" one.\r\n\r\nYour proposed PR here further orphans that function from any actual use. Which is okay for keeping binary compatibility as much as possible.\r\nThe inlined dedup logic in `PhysicalAggregation` looks rather ugly though. I don't have a strong opinion about that as long as other reviewers are okay. I'd prefer still retaining some sort of encapsulated collection for the dedup usage.\r\n\r\nBTW I updated my PR's test case because it makes more sense to check the return value from `addExpr` on the second invocation rather than on the first (both \"not supported expression\" and actual new expression cases would have gotten a `false` return value if we add that guard to the `addExpr()` function).\r\nhttps://github.com/apache/spark/pull/40473/commits/28d101ee6765c5453189fa62d6b8ade1568d99d2",
    "reactions": {
      "url": "https://api.github.com/repos/apache/spark/issues/comments/1477131544/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]
