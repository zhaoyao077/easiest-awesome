{
  "url": "https://api.github.com/repos/apache/spark/issues/40224",
  "repository_url": "https://api.github.com/repos/apache/spark",
  "labels_url": "https://api.github.com/repos/apache/spark/issues/40224/labels{/name}",
  "comments_url": "https://api.github.com/repos/apache/spark/issues/40224/comments",
  "events_url": "https://api.github.com/repos/apache/spark/issues/40224/events",
  "html_url": "https://github.com/apache/spark/pull/40224",
  "id": 1603865389,
  "node_id": "PR_kwDOAQXtWs5K-SnF",
  "number": 40224,
  "title": "[SPARK-42539][SQL][HIVE] Eliminate separate classloader when using 'builtin' Hive version for metadata client",
  "user": {
    "login": "xkrogen",
    "id": 6570401,
    "node_id": "MDQ6VXNlcjY1NzA0MDE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6570401?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/xkrogen",
    "html_url": "https://github.com/xkrogen",
    "followers_url": "https://api.github.com/users/xkrogen/followers",
    "following_url": "https://api.github.com/users/xkrogen/following{/other_user}",
    "gists_url": "https://api.github.com/users/xkrogen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/xkrogen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/xkrogen/subscriptions",
    "organizations_url": "https://api.github.com/users/xkrogen/orgs",
    "repos_url": "https://api.github.com/users/xkrogen/repos",
    "events_url": "https://api.github.com/users/xkrogen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/xkrogen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 1405794576,
      "node_id": "MDU6TGFiZWwxNDA1Nzk0NTc2",
      "url": "https://api.github.com/repos/apache/spark/labels/SQL",
      "name": "SQL",
      "color": "ededed",
      "default": false,
      "description": null
    },
    {
      "id": 1981527456,
      "node_id": "MDU6TGFiZWwxOTgxNTI3NDU2",
      "url": "https://api.github.com/repos/apache/spark/labels/CORE",
      "name": "CORE",
      "color": "ededed",
      "default": false,
      "description": null
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2023-02-28T21:46:33Z",
  "updated_at": "2023-03-02T00:09:24Z",
  "closed_at": "2023-03-01T21:45:52Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/apache/spark/pulls/40224",
    "html_url": "https://github.com/apache/spark/pull/40224",
    "diff_url": "https://github.com/apache/spark/pull/40224.diff",
    "patch_url": "https://github.com/apache/spark/pull/40224.patch",
    "merged_at": null
  },
  "body": "### What changes were proposed in this pull request?\r\nWhen using the 'builtin' Hive version for the Hive metadata client, do not create a separate classloader, and rather continue to use the overall user/application classloader (regardless of Java version). This standardizes the behavior for all Java versions with that of Java 9+. See SPARK-42539 for more details on why this approach was chosen.\r\n\r\nPlease note that this is a re-submit of #40144. That one introduced test failures, and potentially a real issue, because the PR works by setting `isolationOn = false` for `builtin` mode. In addition to adjusting the classloader, `HiveClientImpl` relies on `isolationOn` to determine if it should use an isolated copy of `SessionState`, so the PR inadvertently switched to using a shared `SessionState` object. I think we do want to continue to have the isolated session state even in `builtin` mode, so this adds a new flag `sessionStateIsolationOn` which controls whether the session state should be isolated, _separately_ from the `isolationOn` flag which controls whether the classloader should be isolated. Default behavior is for `sessionStateIsolationOn` to be set equal to `isolationOn`, but for `builtin` mode, we override it to enable session state isolated even though classloader isolation is turned off.\r\n\r\n### Why are the changes needed?\r\nPlease see a much more detailed description in SPARK-42539. The tl;dr is that user-provided JARs (such as `hive-exec-2.3.8.jar`) take precedence over Spark/system JARs when constructing the classloader used by `IsolatedClientLoader` on Java 8 in 'builtin' mode, which can cause unexpected behavior and/or breakages. This violates the expectation that, unless user-first classloader mode is used, Spark JARs should be prioritized over user JARs. It also seems that this separate classloader was unnecessary from the start, since the intent of 'builtin' mode is to use the JARs already existing on the regular classloader (as alluded to [here](https://github.com/apache/spark/pull/24057#discussion_r265142878)). The isolated clientloader was originally added in #5876 in 2015. This bit in the PR description is the only mention of the behavior for \"builtin\":\r\n> attempt to discover the jars that were used to load Spark SQL and use those. This option is only valid when using the execution version of Hive.\r\n\r\nI can't follow the logic here; the user classloader clearly has all of the necessary Hive JARs, since that's where we're getting the JAR URLs from, so we could just use that directly instead of grabbing the URLs. When this was initially added, it only used the JARs from the user classloader, not any of its parents, which I suspect was the motivating factor (to try to avoid more Spark classes being duplicated inside of the isolated classloader, I guess). But that was changed a month later anyway in #6435 / #6459, so I think this may have basically been deadcode from the start. It has also caused at least one issue over the years, e.g. SPARK-21428, which disables the new-classloader behavior in the case of running inside of a CLI session.\r\n\r\n### Does this PR introduce _any_ user-facing change?\r\nNo, except to protect Spark itself from potentially being broken by bad user JARs.\r\n\r\n### How was this patch tested?\r\nThis includes a new unit test in `HiveUtilsSuite` which demonstrates the issue and shows that this approach resolves it. It has also been tested on a live cluster running Java 8 and Hive communication functionality continues to work as expected.\r\n\r\nUnit tests failing in #40144 have been locally tested (`HiveUtilsSuite`, `HiveSharedStateSuite`, `HiveCliSessionStateSuite`, `JsonHadoopFsRelationSuite`).",
  "closed_by": {
    "login": "sunchao",
    "id": 506679,
    "node_id": "MDQ6VXNlcjUwNjY3OQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/506679?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sunchao",
    "html_url": "https://github.com/sunchao",
    "followers_url": "https://api.github.com/users/sunchao/followers",
    "following_url": "https://api.github.com/users/sunchao/following{/other_user}",
    "gists_url": "https://api.github.com/users/sunchao/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sunchao/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sunchao/subscriptions",
    "organizations_url": "https://api.github.com/users/sunchao/orgs",
    "repos_url": "https://api.github.com/users/sunchao/repos",
    "events_url": "https://api.github.com/users/sunchao/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sunchao/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/apache/spark/issues/40224/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/apache/spark/issues/40224/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
